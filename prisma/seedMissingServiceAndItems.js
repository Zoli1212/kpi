const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function seedAll() {
  console.log("üöÄ Seed ind√≠t√°sa...");

  const services = [
    {"name": "Felhaszn√°l√≥k sz√°ma"},
  ];

  for (const service of services) {
    await prisma.service.upsert({
      where: { name: service.name },
      update: {}, create: service
    });
  }

  const items = [
    {
      code: "adatcsere__middleware_biztalk",
      name: "Adatcsere - middleware (biztalk)",
      description: "ideiglenes t√©tel",
      serviceName: "Felhaszn√°l√≥k sz√°ma"
    },
    {
      code: "csocso",
      name: "Csocso",
      description: "ideiglenes t√©tel",
      serviceName: "Felhaszn√°l√≥k sz√°ma"
    },
    {
      code: "dms__szerzod√©s_nyilv√°ntart√°s",
      name: "DMS - szerz≈ëd√©s nyilv√°ntart√°s",
      description: "ideiglenes t√©tel",
      serviceName: "Felhaszn√°l√≥k sz√°ma"
    },
    {
      code: "dms_ultimate__√ºgyf√©lszolg√°lati_modul",
      name: "DMS Ultimate - √ºgyf√©lszolg√°lati modul",
      description: "ideiglenes t√©tel",
      serviceName: "Felhaszn√°l√≥k sz√°ma"
    },
    {
      code: "dms_ultimate_sz√°mla",
      name: "DMS Ultimate- sz√°mla",
      description: "ideiglenes t√©tel",
      serviceName: "Felhaszn√°l√≥k sz√°ma"
    },
  ];

  for (const item of items) {
    const service = await prisma.service.findFirst({ where: { name: item.serviceName } });
    if (!service) continue;

    await prisma.item.upsert({
      where: { code: item.code },
      update: {},
      create: {
        code: item.code,
        name: item.name,
        description: item.description,
        service: { connect: { id: service.id } }
      }
    });
  }

  console.log("üéâ Hi√°nyz√≥ t√©telek √©s szolg√°ltat√°s seedelve.");
}

seedAll()
  .then(() => prisma.$disconnect())
  .catch((e) => {
    console.error("‚ùå Hiba:", e);
    prisma.$disconnect();
    process.exit(1);
  });
