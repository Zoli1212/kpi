
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  login: 'login',
  name: 'name',
  description: 'description',
  email: 'email',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.RightScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.RoleRightScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  rightId: 'rightId',
  permission: 'permission',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.UserRightScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  rightId: 'rightId',
  permission: 'permission',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  relationId: 'relationId',
  valueFrom: 'valueFrom',
  valueTo: 'valueTo',
  created: 'created'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.KPI_DataScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  serviceId: 'serviceId',
  userId: 'userId',
  companyId: 'companyId',
  systemId: 'systemId',
  date: 'date',
  value: 'value',
  approved: 'approved',
  approverId: 'approverId',
  approvalDate: 'approvalDate',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.SystemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  criticality: 'criticality',
  availability: 'availability',
  recoverability: 'recoverability',
  maintainability: 'maintainability',
  integrity: 'integrity',
  confidentiality: 'confidentiality',
  analystId: 'analystId',
  applicationOperatorId: 'applicationOperatorId',
  platformOperatorId: 'platformOperatorId',
  infrastructureOperatorId: 'infrastructureOperatorId',
  companyId: 'companyId',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.RelationScalarFieldEnum = {
  id: 'id',
  serviceId: 'serviceId',
  systemId: 'systemId',
  validFrom: 'validFrom',
  validTo: 'validTo',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.IncidentScalarFieldEnum = {
  id: 'id',
  ready: 'ready',
  reporterId: 'reporterId',
  detectionTime: 'detectionTime',
  notificationId: 'notificationId',
  beginning: 'beginning',
  end: 'end',
  type: 'type',
  systemId: 'systemId',
  companyId: 'companyId',
  urgency: 'urgency',
  criticality: 'criticality',
  description: 'description',
  creatorId: 'creatorId',
  handlerId: 'handlerId',
  cause: 'cause',
  measure: 'measure',
  notification: 'notification',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.GuideScalarFieldEnum = {
  id: 'id',
  column: 'column',
  description: 'description',
  responsible: 'responsible',
  created: 'created',
  modified: 'modified',
  expired: 'expired'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  login: 'login',
  name: 'name',
  description: 'description',
  email: 'email'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.RightOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.RoleRightOrderByRelevanceFieldEnum = {
  permission: 'permission'
};

exports.Prisma.UserRightOrderByRelevanceFieldEnum = {
  permission: 'permission'
};

exports.Prisma.LogOrderByRelevanceFieldEnum = {
  valueFrom: 'valueFrom',
  valueTo: 'valueTo'
};

exports.Prisma.ServiceOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.ItemOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.SystemOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  criticality: 'criticality',
  availability: 'availability',
  recoverability: 'recoverability',
  maintainability: 'maintainability',
  integrity: 'integrity',
  confidentiality: 'confidentiality'
};

exports.Prisma.IncidentOrderByRelevanceFieldEnum = {
  notificationId: 'notificationId',
  type: 'type',
  urgency: 'urgency',
  criticality: 'criticality',
  description: 'description',
  cause: 'cause',
  measure: 'measure',
  notification: 'notification'
};

exports.Prisma.GuideOrderByRelevanceFieldEnum = {
  column: 'column',
  description: 'description',
  responsible: 'responsible'
};


exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  Right: 'Right',
  UserRole: 'UserRole',
  RoleRight: 'RoleRight',
  UserRight: 'UserRight',
  Log: 'Log',
  Service: 'Service',
  KPI_Data: 'KPI_Data',
  Item: 'Item',
  Company: 'Company',
  System: 'System',
  Relation: 'Relation',
  Incident: 'Incident',
  Guide: 'Guide'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
