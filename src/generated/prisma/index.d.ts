
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Right
 * 
 */
export type Right = $Result.DefaultSelection<Prisma.$RightPayload>
/**
 * Model UserRole
 * 
 */
export type UserRole = $Result.DefaultSelection<Prisma.$UserRolePayload>
/**
 * Model RoleRight
 * 
 */
export type RoleRight = $Result.DefaultSelection<Prisma.$RoleRightPayload>
/**
 * Model UserRight
 * 
 */
export type UserRight = $Result.DefaultSelection<Prisma.$UserRightPayload>
/**
 * Model Log
 * 
 */
export type Log = $Result.DefaultSelection<Prisma.$LogPayload>
/**
 * Model Service
 * 
 */
export type Service = $Result.DefaultSelection<Prisma.$ServicePayload>
/**
 * Model KPI_Data
 * 
 */
export type KPI_Data = $Result.DefaultSelection<Prisma.$KPI_DataPayload>
/**
 * Model Item
 * 
 */
export type Item = $Result.DefaultSelection<Prisma.$ItemPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model System
 * 
 */
export type System = $Result.DefaultSelection<Prisma.$SystemPayload>
/**
 * Model Relation
 * 
 */
export type Relation = $Result.DefaultSelection<Prisma.$RelationPayload>
/**
 * Model Incident
 * 
 */
export type Incident = $Result.DefaultSelection<Prisma.$IncidentPayload>
/**
 * Model Guide
 * 
 */
export type Guide = $Result.DefaultSelection<Prisma.$GuidePayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.right`: Exposes CRUD operations for the **Right** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rights
    * const rights = await prisma.right.findMany()
    * ```
    */
  get right(): Prisma.RightDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userRole`: Exposes CRUD operations for the **UserRole** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserRoles
    * const userRoles = await prisma.userRole.findMany()
    * ```
    */
  get userRole(): Prisma.UserRoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roleRight`: Exposes CRUD operations for the **RoleRight** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleRights
    * const roleRights = await prisma.roleRight.findMany()
    * ```
    */
  get roleRight(): Prisma.RoleRightDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userRight`: Exposes CRUD operations for the **UserRight** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserRights
    * const userRights = await prisma.userRight.findMany()
    * ```
    */
  get userRight(): Prisma.UserRightDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.log`: Exposes CRUD operations for the **Log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Logs
    * const logs = await prisma.log.findMany()
    * ```
    */
  get log(): Prisma.LogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.service`: Exposes CRUD operations for the **Service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.ServiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kPI_Data`: Exposes CRUD operations for the **KPI_Data** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more KPI_Data
    * const kPI_Data = await prisma.kPI_Data.findMany()
    * ```
    */
  get kPI_Data(): Prisma.KPI_DataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.item`: Exposes CRUD operations for the **Item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.item.findMany()
    * ```
    */
  get item(): Prisma.ItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.system`: Exposes CRUD operations for the **System** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Systems
    * const systems = await prisma.system.findMany()
    * ```
    */
  get system(): Prisma.SystemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.relation`: Exposes CRUD operations for the **Relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Relations
    * const relations = await prisma.relation.findMany()
    * ```
    */
  get relation(): Prisma.RelationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incident`: Exposes CRUD operations for the **Incident** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incidents
    * const incidents = await prisma.incident.findMany()
    * ```
    */
  get incident(): Prisma.IncidentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.guide`: Exposes CRUD operations for the **Guide** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Guides
    * const guides = await prisma.guide.findMany()
    * ```
    */
  get guide(): Prisma.GuideDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Role: 'Role',
    Right: 'Right',
    UserRole: 'UserRole',
    RoleRight: 'RoleRight',
    UserRight: 'UserRight',
    Log: 'Log',
    Service: 'Service',
    KPI_Data: 'KPI_Data',
    Item: 'Item',
    Company: 'Company',
    System: 'System',
    Relation: 'Relation',
    Incident: 'Incident',
    Guide: 'Guide'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "role" | "right" | "userRole" | "roleRight" | "userRight" | "log" | "service" | "kPI_Data" | "item" | "company" | "system" | "relation" | "incident" | "guide"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Right: {
        payload: Prisma.$RightPayload<ExtArgs>
        fields: Prisma.RightFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RightFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RightFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          findFirst: {
            args: Prisma.RightFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RightFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          findMany: {
            args: Prisma.RightFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>[]
          }
          create: {
            args: Prisma.RightCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          createMany: {
            args: Prisma.RightCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RightDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          update: {
            args: Prisma.RightUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          deleteMany: {
            args: Prisma.RightDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RightUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RightUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RightPayload>
          }
          aggregate: {
            args: Prisma.RightAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRight>
          }
          groupBy: {
            args: Prisma.RightGroupByArgs<ExtArgs>
            result: $Utils.Optional<RightGroupByOutputType>[]
          }
          count: {
            args: Prisma.RightCountArgs<ExtArgs>
            result: $Utils.Optional<RightCountAggregateOutputType> | number
          }
        }
      }
      UserRole: {
        payload: Prisma.$UserRolePayload<ExtArgs>
        fields: Prisma.UserRoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserRoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserRoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          findFirst: {
            args: Prisma.UserRoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserRoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          findMany: {
            args: Prisma.UserRoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>[]
          }
          create: {
            args: Prisma.UserRoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          createMany: {
            args: Prisma.UserRoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserRoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          update: {
            args: Prisma.UserRoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          deleteMany: {
            args: Prisma.UserRoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserRoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserRoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRolePayload>
          }
          aggregate: {
            args: Prisma.UserRoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserRole>
          }
          groupBy: {
            args: Prisma.UserRoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserRoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserRoleCountArgs<ExtArgs>
            result: $Utils.Optional<UserRoleCountAggregateOutputType> | number
          }
        }
      }
      RoleRight: {
        payload: Prisma.$RoleRightPayload<ExtArgs>
        fields: Prisma.RoleRightFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleRightFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleRightFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          findFirst: {
            args: Prisma.RoleRightFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleRightFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          findMany: {
            args: Prisma.RoleRightFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>[]
          }
          create: {
            args: Prisma.RoleRightCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          createMany: {
            args: Prisma.RoleRightCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleRightDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          update: {
            args: Prisma.RoleRightUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          deleteMany: {
            args: Prisma.RoleRightDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleRightUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleRightUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleRightPayload>
          }
          aggregate: {
            args: Prisma.RoleRightAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoleRight>
          }
          groupBy: {
            args: Prisma.RoleRightGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleRightGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleRightCountArgs<ExtArgs>
            result: $Utils.Optional<RoleRightCountAggregateOutputType> | number
          }
        }
      }
      UserRight: {
        payload: Prisma.$UserRightPayload<ExtArgs>
        fields: Prisma.UserRightFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserRightFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserRightFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          findFirst: {
            args: Prisma.UserRightFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserRightFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          findMany: {
            args: Prisma.UserRightFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>[]
          }
          create: {
            args: Prisma.UserRightCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          createMany: {
            args: Prisma.UserRightCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserRightDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          update: {
            args: Prisma.UserRightUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          deleteMany: {
            args: Prisma.UserRightDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserRightUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserRightUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserRightPayload>
          }
          aggregate: {
            args: Prisma.UserRightAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserRight>
          }
          groupBy: {
            args: Prisma.UserRightGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserRightGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserRightCountArgs<ExtArgs>
            result: $Utils.Optional<UserRightCountAggregateOutputType> | number
          }
        }
      }
      Log: {
        payload: Prisma.$LogPayload<ExtArgs>
        fields: Prisma.LogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          findFirst: {
            args: Prisma.LogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          findMany: {
            args: Prisma.LogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>[]
          }
          create: {
            args: Prisma.LogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          createMany: {
            args: Prisma.LogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.LogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          update: {
            args: Prisma.LogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          deleteMany: {
            args: Prisma.LogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LogPayload>
          }
          aggregate: {
            args: Prisma.LogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLog>
          }
          groupBy: {
            args: Prisma.LogGroupByArgs<ExtArgs>
            result: $Utils.Optional<LogGroupByOutputType>[]
          }
          count: {
            args: Prisma.LogCountArgs<ExtArgs>
            result: $Utils.Optional<LogCountAggregateOutputType> | number
          }
        }
      }
      Service: {
        payload: Prisma.$ServicePayload<ExtArgs>
        fields: Prisma.ServiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ServiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ServiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findFirst: {
            args: Prisma.ServiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ServiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          findMany: {
            args: Prisma.ServiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>[]
          }
          create: {
            args: Prisma.ServiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          createMany: {
            args: Prisma.ServiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ServiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          update: {
            args: Prisma.ServiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          deleteMany: {
            args: Prisma.ServiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ServiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ServiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ServicePayload>
          }
          aggregate: {
            args: Prisma.ServiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateService>
          }
          groupBy: {
            args: Prisma.ServiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.ServiceCountArgs<ExtArgs>
            result: $Utils.Optional<ServiceCountAggregateOutputType> | number
          }
        }
      }
      KPI_Data: {
        payload: Prisma.$KPI_DataPayload<ExtArgs>
        fields: Prisma.KPI_DataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KPI_DataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KPI_DataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          findFirst: {
            args: Prisma.KPI_DataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KPI_DataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          findMany: {
            args: Prisma.KPI_DataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>[]
          }
          create: {
            args: Prisma.KPI_DataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          createMany: {
            args: Prisma.KPI_DataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.KPI_DataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          update: {
            args: Prisma.KPI_DataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          deleteMany: {
            args: Prisma.KPI_DataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KPI_DataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.KPI_DataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KPI_DataPayload>
          }
          aggregate: {
            args: Prisma.KPI_DataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKPI_Data>
          }
          groupBy: {
            args: Prisma.KPI_DataGroupByArgs<ExtArgs>
            result: $Utils.Optional<KPI_DataGroupByOutputType>[]
          }
          count: {
            args: Prisma.KPI_DataCountArgs<ExtArgs>
            result: $Utils.Optional<KPI_DataCountAggregateOutputType> | number
          }
        }
      }
      Item: {
        payload: Prisma.$ItemPayload<ExtArgs>
        fields: Prisma.ItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findFirst: {
            args: Prisma.ItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findMany: {
            args: Prisma.ItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>[]
          }
          create: {
            args: Prisma.ItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          createMany: {
            args: Prisma.ItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          update: {
            args: Prisma.ItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          deleteMany: {
            args: Prisma.ItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          aggregate: {
            args: Prisma.ItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItem>
          }
          groupBy: {
            args: Prisma.ItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemCountArgs<ExtArgs>
            result: $Utils.Optional<ItemCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      System: {
        payload: Prisma.$SystemPayload<ExtArgs>
        fields: Prisma.SystemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SystemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SystemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          findFirst: {
            args: Prisma.SystemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SystemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          findMany: {
            args: Prisma.SystemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>[]
          }
          create: {
            args: Prisma.SystemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          createMany: {
            args: Prisma.SystemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SystemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          update: {
            args: Prisma.SystemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          deleteMany: {
            args: Prisma.SystemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SystemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SystemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SystemPayload>
          }
          aggregate: {
            args: Prisma.SystemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSystem>
          }
          groupBy: {
            args: Prisma.SystemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SystemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SystemCountArgs<ExtArgs>
            result: $Utils.Optional<SystemCountAggregateOutputType> | number
          }
        }
      }
      Relation: {
        payload: Prisma.$RelationPayload<ExtArgs>
        fields: Prisma.RelationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RelationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RelationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          findFirst: {
            args: Prisma.RelationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RelationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          findMany: {
            args: Prisma.RelationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>[]
          }
          create: {
            args: Prisma.RelationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          createMany: {
            args: Prisma.RelationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RelationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          update: {
            args: Prisma.RelationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          deleteMany: {
            args: Prisma.RelationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RelationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RelationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RelationPayload>
          }
          aggregate: {
            args: Prisma.RelationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRelation>
          }
          groupBy: {
            args: Prisma.RelationGroupByArgs<ExtArgs>
            result: $Utils.Optional<RelationGroupByOutputType>[]
          }
          count: {
            args: Prisma.RelationCountArgs<ExtArgs>
            result: $Utils.Optional<RelationCountAggregateOutputType> | number
          }
        }
      }
      Incident: {
        payload: Prisma.$IncidentPayload<ExtArgs>
        fields: Prisma.IncidentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IncidentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IncidentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          findFirst: {
            args: Prisma.IncidentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IncidentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          findMany: {
            args: Prisma.IncidentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>[]
          }
          create: {
            args: Prisma.IncidentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          createMany: {
            args: Prisma.IncidentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.IncidentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          update: {
            args: Prisma.IncidentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          deleteMany: {
            args: Prisma.IncidentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IncidentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.IncidentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IncidentPayload>
          }
          aggregate: {
            args: Prisma.IncidentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncident>
          }
          groupBy: {
            args: Prisma.IncidentGroupByArgs<ExtArgs>
            result: $Utils.Optional<IncidentGroupByOutputType>[]
          }
          count: {
            args: Prisma.IncidentCountArgs<ExtArgs>
            result: $Utils.Optional<IncidentCountAggregateOutputType> | number
          }
        }
      }
      Guide: {
        payload: Prisma.$GuidePayload<ExtArgs>
        fields: Prisma.GuideFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GuideFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GuideFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          findFirst: {
            args: Prisma.GuideFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GuideFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          findMany: {
            args: Prisma.GuideFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>[]
          }
          create: {
            args: Prisma.GuideCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          createMany: {
            args: Prisma.GuideCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.GuideDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          update: {
            args: Prisma.GuideUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          deleteMany: {
            args: Prisma.GuideDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.GuideUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.GuideUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$GuidePayload>
          }
          aggregate: {
            args: Prisma.GuideAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGuide>
          }
          groupBy: {
            args: Prisma.GuideGroupByArgs<ExtArgs>
            result: $Utils.Optional<GuideGroupByOutputType>[]
          }
          count: {
            args: Prisma.GuideCountArgs<ExtArgs>
            result: $Utils.Optional<GuideCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    role?: RoleOmit
    right?: RightOmit
    userRole?: UserRoleOmit
    roleRight?: RoleRightOmit
    userRight?: UserRightOmit
    log?: LogOmit
    service?: ServiceOmit
    kPI_Data?: KPI_DataOmit
    item?: ItemOmit
    company?: CompanyOmit
    system?: SystemOmit
    relation?: RelationOmit
    incident?: IncidentOmit
    guide?: GuideOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    userRoles: number
    userRights: number
    logs: number
    kpiData: number
    approvedKPI: number
    reportedIncidents: number
    createdIncidents: number
    handledIncidents: number
    analystSystems: number
    appOperatorSystems: number
    platformOperatorSystems: number
    infraOperatorSystems: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | UserCountOutputTypeCountUserRolesArgs
    userRights?: boolean | UserCountOutputTypeCountUserRightsArgs
    logs?: boolean | UserCountOutputTypeCountLogsArgs
    kpiData?: boolean | UserCountOutputTypeCountKpiDataArgs
    approvedKPI?: boolean | UserCountOutputTypeCountApprovedKPIArgs
    reportedIncidents?: boolean | UserCountOutputTypeCountReportedIncidentsArgs
    createdIncidents?: boolean | UserCountOutputTypeCountCreatedIncidentsArgs
    handledIncidents?: boolean | UserCountOutputTypeCountHandledIncidentsArgs
    analystSystems?: boolean | UserCountOutputTypeCountAnalystSystemsArgs
    appOperatorSystems?: boolean | UserCountOutputTypeCountAppOperatorSystemsArgs
    platformOperatorSystems?: boolean | UserCountOutputTypeCountPlatformOperatorSystemsArgs
    infraOperatorSystems?: boolean | UserCountOutputTypeCountInfraOperatorSystemsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRightWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountKpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApprovedKPIArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportedIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountHandledIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAnalystSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAppOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPlatformOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInfraOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    userRoles: number
    roleRights: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | RoleCountOutputTypeCountUserRolesArgs
    roleRights?: boolean | RoleCountOutputTypeCountRoleRightsArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRoleRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleRightWhereInput
  }


  /**
   * Count Type RightCountOutputType
   */

  export type RightCountOutputType = {
    roleRights: number
    userRights: number
  }

  export type RightCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleRights?: boolean | RightCountOutputTypeCountRoleRightsArgs
    userRights?: boolean | RightCountOutputTypeCountUserRightsArgs
  }

  // Custom InputTypes
  /**
   * RightCountOutputType without action
   */
  export type RightCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RightCountOutputType
     */
    select?: RightCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RightCountOutputType without action
   */
  export type RightCountOutputTypeCountRoleRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleRightWhereInput
  }

  /**
   * RightCountOutputType without action
   */
  export type RightCountOutputTypeCountUserRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRightWhereInput
  }


  /**
   * Count Type ServiceCountOutputType
   */

  export type ServiceCountOutputType = {
    kpiData: number
    relations: number
  }

  export type ServiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | ServiceCountOutputTypeCountKpiDataArgs
    relations?: boolean | ServiceCountOutputTypeCountRelationsArgs
  }

  // Custom InputTypes
  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServiceCountOutputType
     */
    select?: ServiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountKpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }

  /**
   * ServiceCountOutputType without action
   */
  export type ServiceCountOutputTypeCountRelationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelationWhereInput
  }


  /**
   * Count Type ItemCountOutputType
   */

  export type ItemCountOutputType = {
    kpiData: number
  }

  export type ItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | ItemCountOutputTypeCountKpiDataArgs
  }

  // Custom InputTypes
  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemCountOutputType
     */
    select?: ItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountKpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    kpiData: number
    systems: number
    incidents: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | CompanyCountOutputTypeCountKpiDataArgs
    systems?: boolean | CompanyCountOutputTypeCountSystemsArgs
    incidents?: boolean | CompanyCountOutputTypeCountIncidentsArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountKpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
  }


  /**
   * Count Type SystemCountOutputType
   */

  export type SystemCountOutputType = {
    kpiData: number
    incidents: number
    relations: number
  }

  export type SystemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | SystemCountOutputTypeCountKpiDataArgs
    incidents?: boolean | SystemCountOutputTypeCountIncidentsArgs
    relations?: boolean | SystemCountOutputTypeCountRelationsArgs
  }

  // Custom InputTypes
  /**
   * SystemCountOutputType without action
   */
  export type SystemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SystemCountOutputType
     */
    select?: SystemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SystemCountOutputType without action
   */
  export type SystemCountOutputTypeCountKpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
  }

  /**
   * SystemCountOutputType without action
   */
  export type SystemCountOutputTypeCountIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
  }

  /**
   * SystemCountOutputType without action
   */
  export type SystemCountOutputTypeCountRelationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    login: string | null
    name: string | null
    description: string | null
    email: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    login: string | null
    name: string | null
    description: string | null
    email: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    login: number
    name: number
    description: number
    email: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    login?: true
    name?: true
    description?: true
    email?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    login?: true
    name?: true
    description?: true
    email?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    login?: true
    name?: true
    description?: true
    email?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    login: string
    name: string
    description: string | null
    email: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    login?: boolean
    name?: boolean
    description?: boolean
    email?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    userRoles?: boolean | User$userRolesArgs<ExtArgs>
    userRights?: boolean | User$userRightsArgs<ExtArgs>
    logs?: boolean | User$logsArgs<ExtArgs>
    kpiData?: boolean | User$kpiDataArgs<ExtArgs>
    approvedKPI?: boolean | User$approvedKPIArgs<ExtArgs>
    reportedIncidents?: boolean | User$reportedIncidentsArgs<ExtArgs>
    createdIncidents?: boolean | User$createdIncidentsArgs<ExtArgs>
    handledIncidents?: boolean | User$handledIncidentsArgs<ExtArgs>
    analystSystems?: boolean | User$analystSystemsArgs<ExtArgs>
    appOperatorSystems?: boolean | User$appOperatorSystemsArgs<ExtArgs>
    platformOperatorSystems?: boolean | User$platformOperatorSystemsArgs<ExtArgs>
    infraOperatorSystems?: boolean | User$infraOperatorSystemsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    login?: boolean
    name?: boolean
    description?: boolean
    email?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "login" | "name" | "description" | "email" | "created" | "modified" | "expired", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | User$userRolesArgs<ExtArgs>
    userRights?: boolean | User$userRightsArgs<ExtArgs>
    logs?: boolean | User$logsArgs<ExtArgs>
    kpiData?: boolean | User$kpiDataArgs<ExtArgs>
    approvedKPI?: boolean | User$approvedKPIArgs<ExtArgs>
    reportedIncidents?: boolean | User$reportedIncidentsArgs<ExtArgs>
    createdIncidents?: boolean | User$createdIncidentsArgs<ExtArgs>
    handledIncidents?: boolean | User$handledIncidentsArgs<ExtArgs>
    analystSystems?: boolean | User$analystSystemsArgs<ExtArgs>
    appOperatorSystems?: boolean | User$appOperatorSystemsArgs<ExtArgs>
    platformOperatorSystems?: boolean | User$platformOperatorSystemsArgs<ExtArgs>
    infraOperatorSystems?: boolean | User$infraOperatorSystemsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      userRoles: Prisma.$UserRolePayload<ExtArgs>[]
      userRights: Prisma.$UserRightPayload<ExtArgs>[]
      logs: Prisma.$LogPayload<ExtArgs>[]
      kpiData: Prisma.$KPI_DataPayload<ExtArgs>[]
      approvedKPI: Prisma.$KPI_DataPayload<ExtArgs>[]
      reportedIncidents: Prisma.$IncidentPayload<ExtArgs>[]
      createdIncidents: Prisma.$IncidentPayload<ExtArgs>[]
      handledIncidents: Prisma.$IncidentPayload<ExtArgs>[]
      analystSystems: Prisma.$SystemPayload<ExtArgs>[]
      appOperatorSystems: Prisma.$SystemPayload<ExtArgs>[]
      platformOperatorSystems: Prisma.$SystemPayload<ExtArgs>[]
      infraOperatorSystems: Prisma.$SystemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      login: string
      name: string
      description: string | null
      email: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userRoles<T extends User$userRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$userRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userRights<T extends User$userRightsArgs<ExtArgs> = {}>(args?: Subset<T, User$userRightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    logs<T extends User$logsArgs<ExtArgs> = {}>(args?: Subset<T, User$logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    kpiData<T extends User$kpiDataArgs<ExtArgs> = {}>(args?: Subset<T, User$kpiDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    approvedKPI<T extends User$approvedKPIArgs<ExtArgs> = {}>(args?: Subset<T, User$approvedKPIArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportedIncidents<T extends User$reportedIncidentsArgs<ExtArgs> = {}>(args?: Subset<T, User$reportedIncidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdIncidents<T extends User$createdIncidentsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdIncidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    handledIncidents<T extends User$handledIncidentsArgs<ExtArgs> = {}>(args?: Subset<T, User$handledIncidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    analystSystems<T extends User$analystSystemsArgs<ExtArgs> = {}>(args?: Subset<T, User$analystSystemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    appOperatorSystems<T extends User$appOperatorSystemsArgs<ExtArgs> = {}>(args?: Subset<T, User$appOperatorSystemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    platformOperatorSystems<T extends User$platformOperatorSystemsArgs<ExtArgs> = {}>(args?: Subset<T, User$platformOperatorSystemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    infraOperatorSystems<T extends User$infraOperatorSystemsArgs<ExtArgs> = {}>(args?: Subset<T, User$infraOperatorSystemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly login: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly description: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly created: FieldRef<"User", 'DateTime'>
    readonly modified: FieldRef<"User", 'DateTime'>
    readonly expired: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.userRoles
   */
  export type User$userRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    where?: UserRoleWhereInput
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    cursor?: UserRoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRoleScalarFieldEnum | UserRoleScalarFieldEnum[]
  }

  /**
   * User.userRights
   */
  export type User$userRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    where?: UserRightWhereInput
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    cursor?: UserRightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRightScalarFieldEnum | UserRightScalarFieldEnum[]
  }

  /**
   * User.logs
   */
  export type User$logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    where?: LogWhereInput
    orderBy?: LogOrderByWithRelationInput | LogOrderByWithRelationInput[]
    cursor?: LogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LogScalarFieldEnum | LogScalarFieldEnum[]
  }

  /**
   * User.kpiData
   */
  export type User$kpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * User.approvedKPI
   */
  export type User$approvedKPIArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * User.reportedIncidents
   */
  export type User$reportedIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    cursor?: IncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * User.createdIncidents
   */
  export type User$createdIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    cursor?: IncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * User.handledIncidents
   */
  export type User$handledIncidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    cursor?: IncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * User.analystSystems
   */
  export type User$analystSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    cursor?: SystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * User.appOperatorSystems
   */
  export type User$appOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    cursor?: SystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * User.platformOperatorSystems
   */
  export type User$platformOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    cursor?: SystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * User.infraOperatorSystems
   */
  export type User$infraOperatorSystemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    cursor?: SystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    userRoles?: boolean | Role$userRolesArgs<ExtArgs>
    roleRights?: boolean | Role$roleRightsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>



  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created" | "modified" | "expired", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userRoles?: boolean | Role$userRolesArgs<ExtArgs>
    roleRights?: boolean | Role$roleRightsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      userRoles: Prisma.$UserRolePayload<ExtArgs>[]
      roleRights: Prisma.$RoleRightPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userRoles<T extends Role$userRolesArgs<ExtArgs> = {}>(args?: Subset<T, Role$userRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    roleRights<T extends Role$roleRightsArgs<ExtArgs> = {}>(args?: Subset<T, Role$roleRightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly description: FieldRef<"Role", 'String'>
    readonly created: FieldRef<"Role", 'DateTime'>
    readonly modified: FieldRef<"Role", 'DateTime'>
    readonly expired: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.userRoles
   */
  export type Role$userRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    where?: UserRoleWhereInput
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    cursor?: UserRoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRoleScalarFieldEnum | UserRoleScalarFieldEnum[]
  }

  /**
   * Role.roleRights
   */
  export type Role$roleRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    where?: RoleRightWhereInput
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    cursor?: RoleRightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleRightScalarFieldEnum | RoleRightScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Right
   */

  export type AggregateRight = {
    _count: RightCountAggregateOutputType | null
    _avg: RightAvgAggregateOutputType | null
    _sum: RightSumAggregateOutputType | null
    _min: RightMinAggregateOutputType | null
    _max: RightMaxAggregateOutputType | null
  }

  export type RightAvgAggregateOutputType = {
    id: number | null
  }

  export type RightSumAggregateOutputType = {
    id: number | null
  }

  export type RightMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RightMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RightCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type RightAvgAggregateInputType = {
    id?: true
  }

  export type RightSumAggregateInputType = {
    id?: true
  }

  export type RightMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RightMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RightCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type RightAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Right to aggregate.
     */
    where?: RightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rights to fetch.
     */
    orderBy?: RightOrderByWithRelationInput | RightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Rights
    **/
    _count?: true | RightCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RightAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RightSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RightMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RightMaxAggregateInputType
  }

  export type GetRightAggregateType<T extends RightAggregateArgs> = {
        [P in keyof T & keyof AggregateRight]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRight[P]>
      : GetScalarType<T[P], AggregateRight[P]>
  }




  export type RightGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RightWhereInput
    orderBy?: RightOrderByWithAggregationInput | RightOrderByWithAggregationInput[]
    by: RightScalarFieldEnum[] | RightScalarFieldEnum
    having?: RightScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RightCountAggregateInputType | true
    _avg?: RightAvgAggregateInputType
    _sum?: RightSumAggregateInputType
    _min?: RightMinAggregateInputType
    _max?: RightMaxAggregateInputType
  }

  export type RightGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: RightCountAggregateOutputType | null
    _avg: RightAvgAggregateOutputType | null
    _sum: RightSumAggregateOutputType | null
    _min: RightMinAggregateOutputType | null
    _max: RightMaxAggregateOutputType | null
  }

  type GetRightGroupByPayload<T extends RightGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RightGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RightGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RightGroupByOutputType[P]>
            : GetScalarType<T[P], RightGroupByOutputType[P]>
        }
      >
    >


  export type RightSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    roleRights?: boolean | Right$roleRightsArgs<ExtArgs>
    userRights?: boolean | Right$userRightsArgs<ExtArgs>
    _count?: boolean | RightCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["right"]>



  export type RightSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type RightOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created" | "modified" | "expired", ExtArgs["result"]["right"]>
  export type RightInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleRights?: boolean | Right$roleRightsArgs<ExtArgs>
    userRights?: boolean | Right$userRightsArgs<ExtArgs>
    _count?: boolean | RightCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RightPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Right"
    objects: {
      roleRights: Prisma.$RoleRightPayload<ExtArgs>[]
      userRights: Prisma.$UserRightPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["right"]>
    composites: {}
  }

  type RightGetPayload<S extends boolean | null | undefined | RightDefaultArgs> = $Result.GetResult<Prisma.$RightPayload, S>

  type RightCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RightFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RightCountAggregateInputType | true
    }

  export interface RightDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Right'], meta: { name: 'Right' } }
    /**
     * Find zero or one Right that matches the filter.
     * @param {RightFindUniqueArgs} args - Arguments to find a Right
     * @example
     * // Get one Right
     * const right = await prisma.right.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RightFindUniqueArgs>(args: SelectSubset<T, RightFindUniqueArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Right that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RightFindUniqueOrThrowArgs} args - Arguments to find a Right
     * @example
     * // Get one Right
     * const right = await prisma.right.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RightFindUniqueOrThrowArgs>(args: SelectSubset<T, RightFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Right that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightFindFirstArgs} args - Arguments to find a Right
     * @example
     * // Get one Right
     * const right = await prisma.right.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RightFindFirstArgs>(args?: SelectSubset<T, RightFindFirstArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Right that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightFindFirstOrThrowArgs} args - Arguments to find a Right
     * @example
     * // Get one Right
     * const right = await prisma.right.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RightFindFirstOrThrowArgs>(args?: SelectSubset<T, RightFindFirstOrThrowArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rights
     * const rights = await prisma.right.findMany()
     * 
     * // Get first 10 Rights
     * const rights = await prisma.right.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rightWithIdOnly = await prisma.right.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RightFindManyArgs>(args?: SelectSubset<T, RightFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Right.
     * @param {RightCreateArgs} args - Arguments to create a Right.
     * @example
     * // Create one Right
     * const Right = await prisma.right.create({
     *   data: {
     *     // ... data to create a Right
     *   }
     * })
     * 
     */
    create<T extends RightCreateArgs>(args: SelectSubset<T, RightCreateArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rights.
     * @param {RightCreateManyArgs} args - Arguments to create many Rights.
     * @example
     * // Create many Rights
     * const right = await prisma.right.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RightCreateManyArgs>(args?: SelectSubset<T, RightCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Right.
     * @param {RightDeleteArgs} args - Arguments to delete one Right.
     * @example
     * // Delete one Right
     * const Right = await prisma.right.delete({
     *   where: {
     *     // ... filter to delete one Right
     *   }
     * })
     * 
     */
    delete<T extends RightDeleteArgs>(args: SelectSubset<T, RightDeleteArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Right.
     * @param {RightUpdateArgs} args - Arguments to update one Right.
     * @example
     * // Update one Right
     * const right = await prisma.right.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RightUpdateArgs>(args: SelectSubset<T, RightUpdateArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rights.
     * @param {RightDeleteManyArgs} args - Arguments to filter Rights to delete.
     * @example
     * // Delete a few Rights
     * const { count } = await prisma.right.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RightDeleteManyArgs>(args?: SelectSubset<T, RightDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rights
     * const right = await prisma.right.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RightUpdateManyArgs>(args: SelectSubset<T, RightUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Right.
     * @param {RightUpsertArgs} args - Arguments to update or create a Right.
     * @example
     * // Update or create a Right
     * const right = await prisma.right.upsert({
     *   create: {
     *     // ... data to create a Right
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Right we want to update
     *   }
     * })
     */
    upsert<T extends RightUpsertArgs>(args: SelectSubset<T, RightUpsertArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightCountArgs} args - Arguments to filter Rights to count.
     * @example
     * // Count the number of Rights
     * const count = await prisma.right.count({
     *   where: {
     *     // ... the filter for the Rights we want to count
     *   }
     * })
    **/
    count<T extends RightCountArgs>(
      args?: Subset<T, RightCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RightCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Right.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RightAggregateArgs>(args: Subset<T, RightAggregateArgs>): Prisma.PrismaPromise<GetRightAggregateType<T>>

    /**
     * Group by Right.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RightGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RightGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RightGroupByArgs['orderBy'] }
        : { orderBy?: RightGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RightGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRightGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Right model
   */
  readonly fields: RightFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Right.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RightClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roleRights<T extends Right$roleRightsArgs<ExtArgs> = {}>(args?: Subset<T, Right$roleRightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userRights<T extends Right$userRightsArgs<ExtArgs> = {}>(args?: Subset<T, Right$userRightsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Right model
   */
  interface RightFieldRefs {
    readonly id: FieldRef<"Right", 'Int'>
    readonly name: FieldRef<"Right", 'String'>
    readonly description: FieldRef<"Right", 'String'>
    readonly created: FieldRef<"Right", 'DateTime'>
    readonly modified: FieldRef<"Right", 'DateTime'>
    readonly expired: FieldRef<"Right", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Right findUnique
   */
  export type RightFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter, which Right to fetch.
     */
    where: RightWhereUniqueInput
  }

  /**
   * Right findUniqueOrThrow
   */
  export type RightFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter, which Right to fetch.
     */
    where: RightWhereUniqueInput
  }

  /**
   * Right findFirst
   */
  export type RightFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter, which Right to fetch.
     */
    where?: RightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rights to fetch.
     */
    orderBy?: RightOrderByWithRelationInput | RightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rights.
     */
    cursor?: RightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rights.
     */
    distinct?: RightScalarFieldEnum | RightScalarFieldEnum[]
  }

  /**
   * Right findFirstOrThrow
   */
  export type RightFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter, which Right to fetch.
     */
    where?: RightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rights to fetch.
     */
    orderBy?: RightOrderByWithRelationInput | RightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Rights.
     */
    cursor?: RightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Rights.
     */
    distinct?: RightScalarFieldEnum | RightScalarFieldEnum[]
  }

  /**
   * Right findMany
   */
  export type RightFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter, which Rights to fetch.
     */
    where?: RightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Rights to fetch.
     */
    orderBy?: RightOrderByWithRelationInput | RightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Rights.
     */
    cursor?: RightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Rights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Rights.
     */
    skip?: number
    distinct?: RightScalarFieldEnum | RightScalarFieldEnum[]
  }

  /**
   * Right create
   */
  export type RightCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * The data needed to create a Right.
     */
    data: XOR<RightCreateInput, RightUncheckedCreateInput>
  }

  /**
   * Right createMany
   */
  export type RightCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Rights.
     */
    data: RightCreateManyInput | RightCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Right update
   */
  export type RightUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * The data needed to update a Right.
     */
    data: XOR<RightUpdateInput, RightUncheckedUpdateInput>
    /**
     * Choose, which Right to update.
     */
    where: RightWhereUniqueInput
  }

  /**
   * Right updateMany
   */
  export type RightUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Rights.
     */
    data: XOR<RightUpdateManyMutationInput, RightUncheckedUpdateManyInput>
    /**
     * Filter which Rights to update
     */
    where?: RightWhereInput
    /**
     * Limit how many Rights to update.
     */
    limit?: number
  }

  /**
   * Right upsert
   */
  export type RightUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * The filter to search for the Right to update in case it exists.
     */
    where: RightWhereUniqueInput
    /**
     * In case the Right found by the `where` argument doesn't exist, create a new Right with this data.
     */
    create: XOR<RightCreateInput, RightUncheckedCreateInput>
    /**
     * In case the Right was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RightUpdateInput, RightUncheckedUpdateInput>
  }

  /**
   * Right delete
   */
  export type RightDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
    /**
     * Filter which Right to delete.
     */
    where: RightWhereUniqueInput
  }

  /**
   * Right deleteMany
   */
  export type RightDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rights to delete
     */
    where?: RightWhereInput
    /**
     * Limit how many Rights to delete.
     */
    limit?: number
  }

  /**
   * Right.roleRights
   */
  export type Right$roleRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    where?: RoleRightWhereInput
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    cursor?: RoleRightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleRightScalarFieldEnum | RoleRightScalarFieldEnum[]
  }

  /**
   * Right.userRights
   */
  export type Right$userRightsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    where?: UserRightWhereInput
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    cursor?: UserRightWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserRightScalarFieldEnum | UserRightScalarFieldEnum[]
  }

  /**
   * Right without action
   */
  export type RightDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Right
     */
    select?: RightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Right
     */
    omit?: RightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RightInclude<ExtArgs> | null
  }


  /**
   * Model UserRole
   */

  export type AggregateUserRole = {
    _count: UserRoleCountAggregateOutputType | null
    _avg: UserRoleAvgAggregateOutputType | null
    _sum: UserRoleSumAggregateOutputType | null
    _min: UserRoleMinAggregateOutputType | null
    _max: UserRoleMaxAggregateOutputType | null
  }

  export type UserRoleAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type UserRoleSumAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
  }

  export type UserRoleMinAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserRoleMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    roleId: number | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserRoleCountAggregateOutputType = {
    id: number
    userId: number
    roleId: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type UserRoleAvgAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type UserRoleSumAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
  }

  export type UserRoleMinAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserRoleMaxAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserRoleCountAggregateInputType = {
    id?: true
    userId?: true
    roleId?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type UserRoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRole to aggregate.
     */
    where?: UserRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoles to fetch.
     */
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserRoles
    **/
    _count?: true | UserRoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserRoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserRoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserRoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserRoleMaxAggregateInputType
  }

  export type GetUserRoleAggregateType<T extends UserRoleAggregateArgs> = {
        [P in keyof T & keyof AggregateUserRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserRole[P]>
      : GetScalarType<T[P], AggregateUserRole[P]>
  }




  export type UserRoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRoleWhereInput
    orderBy?: UserRoleOrderByWithAggregationInput | UserRoleOrderByWithAggregationInput[]
    by: UserRoleScalarFieldEnum[] | UserRoleScalarFieldEnum
    having?: UserRoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserRoleCountAggregateInputType | true
    _avg?: UserRoleAvgAggregateInputType
    _sum?: UserRoleSumAggregateInputType
    _min?: UserRoleMinAggregateInputType
    _max?: UserRoleMaxAggregateInputType
  }

  export type UserRoleGroupByOutputType = {
    id: number
    userId: number
    roleId: number
    created: Date
    modified: Date
    expired: Date | null
    _count: UserRoleCountAggregateOutputType | null
    _avg: UserRoleAvgAggregateOutputType | null
    _sum: UserRoleSumAggregateOutputType | null
    _min: UserRoleMinAggregateOutputType | null
    _max: UserRoleMaxAggregateOutputType | null
  }

  type GetUserRoleGroupByPayload<T extends UserRoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserRoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserRoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserRoleGroupByOutputType[P]>
            : GetScalarType<T[P], UserRoleGroupByOutputType[P]>
        }
      >
    >


  export type UserRoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    roleId?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRole"]>



  export type UserRoleSelectScalar = {
    id?: boolean
    userId?: boolean
    roleId?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type UserRoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "roleId" | "created" | "modified" | "expired", ExtArgs["result"]["userRole"]>
  export type UserRoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $UserRolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserRole"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      roleId: number
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["userRole"]>
    composites: {}
  }

  type UserRoleGetPayload<S extends boolean | null | undefined | UserRoleDefaultArgs> = $Result.GetResult<Prisma.$UserRolePayload, S>

  type UserRoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserRoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserRoleCountAggregateInputType | true
    }

  export interface UserRoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserRole'], meta: { name: 'UserRole' } }
    /**
     * Find zero or one UserRole that matches the filter.
     * @param {UserRoleFindUniqueArgs} args - Arguments to find a UserRole
     * @example
     * // Get one UserRole
     * const userRole = await prisma.userRole.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserRoleFindUniqueArgs>(args: SelectSubset<T, UserRoleFindUniqueArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserRole that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserRoleFindUniqueOrThrowArgs} args - Arguments to find a UserRole
     * @example
     * // Get one UserRole
     * const userRole = await prisma.userRole.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserRoleFindUniqueOrThrowArgs>(args: SelectSubset<T, UserRoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRole that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleFindFirstArgs} args - Arguments to find a UserRole
     * @example
     * // Get one UserRole
     * const userRole = await prisma.userRole.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserRoleFindFirstArgs>(args?: SelectSubset<T, UserRoleFindFirstArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRole that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleFindFirstOrThrowArgs} args - Arguments to find a UserRole
     * @example
     * // Get one UserRole
     * const userRole = await prisma.userRole.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserRoleFindFirstOrThrowArgs>(args?: SelectSubset<T, UserRoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserRoles
     * const userRoles = await prisma.userRole.findMany()
     * 
     * // Get first 10 UserRoles
     * const userRoles = await prisma.userRole.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userRoleWithIdOnly = await prisma.userRole.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserRoleFindManyArgs>(args?: SelectSubset<T, UserRoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserRole.
     * @param {UserRoleCreateArgs} args - Arguments to create a UserRole.
     * @example
     * // Create one UserRole
     * const UserRole = await prisma.userRole.create({
     *   data: {
     *     // ... data to create a UserRole
     *   }
     * })
     * 
     */
    create<T extends UserRoleCreateArgs>(args: SelectSubset<T, UserRoleCreateArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserRoles.
     * @param {UserRoleCreateManyArgs} args - Arguments to create many UserRoles.
     * @example
     * // Create many UserRoles
     * const userRole = await prisma.userRole.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserRoleCreateManyArgs>(args?: SelectSubset<T, UserRoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserRole.
     * @param {UserRoleDeleteArgs} args - Arguments to delete one UserRole.
     * @example
     * // Delete one UserRole
     * const UserRole = await prisma.userRole.delete({
     *   where: {
     *     // ... filter to delete one UserRole
     *   }
     * })
     * 
     */
    delete<T extends UserRoleDeleteArgs>(args: SelectSubset<T, UserRoleDeleteArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserRole.
     * @param {UserRoleUpdateArgs} args - Arguments to update one UserRole.
     * @example
     * // Update one UserRole
     * const userRole = await prisma.userRole.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserRoleUpdateArgs>(args: SelectSubset<T, UserRoleUpdateArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserRoles.
     * @param {UserRoleDeleteManyArgs} args - Arguments to filter UserRoles to delete.
     * @example
     * // Delete a few UserRoles
     * const { count } = await prisma.userRole.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserRoleDeleteManyArgs>(args?: SelectSubset<T, UserRoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserRoles
     * const userRole = await prisma.userRole.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserRoleUpdateManyArgs>(args: SelectSubset<T, UserRoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserRole.
     * @param {UserRoleUpsertArgs} args - Arguments to update or create a UserRole.
     * @example
     * // Update or create a UserRole
     * const userRole = await prisma.userRole.upsert({
     *   create: {
     *     // ... data to create a UserRole
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserRole we want to update
     *   }
     * })
     */
    upsert<T extends UserRoleUpsertArgs>(args: SelectSubset<T, UserRoleUpsertArgs<ExtArgs>>): Prisma__UserRoleClient<$Result.GetResult<Prisma.$UserRolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleCountArgs} args - Arguments to filter UserRoles to count.
     * @example
     * // Count the number of UserRoles
     * const count = await prisma.userRole.count({
     *   where: {
     *     // ... the filter for the UserRoles we want to count
     *   }
     * })
    **/
    count<T extends UserRoleCountArgs>(
      args?: Subset<T, UserRoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserRoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserRoleAggregateArgs>(args: Subset<T, UserRoleAggregateArgs>): Prisma.PrismaPromise<GetUserRoleAggregateType<T>>

    /**
     * Group by UserRole.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserRoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserRoleGroupByArgs['orderBy'] }
        : { orderBy?: UserRoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserRoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserRole model
   */
  readonly fields: UserRoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserRole.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserRoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserRole model
   */
  interface UserRoleFieldRefs {
    readonly id: FieldRef<"UserRole", 'Int'>
    readonly userId: FieldRef<"UserRole", 'Int'>
    readonly roleId: FieldRef<"UserRole", 'Int'>
    readonly created: FieldRef<"UserRole", 'DateTime'>
    readonly modified: FieldRef<"UserRole", 'DateTime'>
    readonly expired: FieldRef<"UserRole", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserRole findUnique
   */
  export type UserRoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter, which UserRole to fetch.
     */
    where: UserRoleWhereUniqueInput
  }

  /**
   * UserRole findUniqueOrThrow
   */
  export type UserRoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter, which UserRole to fetch.
     */
    where: UserRoleWhereUniqueInput
  }

  /**
   * UserRole findFirst
   */
  export type UserRoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter, which UserRole to fetch.
     */
    where?: UserRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoles to fetch.
     */
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRoles.
     */
    cursor?: UserRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRoles.
     */
    distinct?: UserRoleScalarFieldEnum | UserRoleScalarFieldEnum[]
  }

  /**
   * UserRole findFirstOrThrow
   */
  export type UserRoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter, which UserRole to fetch.
     */
    where?: UserRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoles to fetch.
     */
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRoles.
     */
    cursor?: UserRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRoles.
     */
    distinct?: UserRoleScalarFieldEnum | UserRoleScalarFieldEnum[]
  }

  /**
   * UserRole findMany
   */
  export type UserRoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter, which UserRoles to fetch.
     */
    where?: UserRoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRoles to fetch.
     */
    orderBy?: UserRoleOrderByWithRelationInput | UserRoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserRoles.
     */
    cursor?: UserRoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRoles.
     */
    skip?: number
    distinct?: UserRoleScalarFieldEnum | UserRoleScalarFieldEnum[]
  }

  /**
   * UserRole create
   */
  export type UserRoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * The data needed to create a UserRole.
     */
    data: XOR<UserRoleCreateInput, UserRoleUncheckedCreateInput>
  }

  /**
   * UserRole createMany
   */
  export type UserRoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserRoles.
     */
    data: UserRoleCreateManyInput | UserRoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserRole update
   */
  export type UserRoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * The data needed to update a UserRole.
     */
    data: XOR<UserRoleUpdateInput, UserRoleUncheckedUpdateInput>
    /**
     * Choose, which UserRole to update.
     */
    where: UserRoleWhereUniqueInput
  }

  /**
   * UserRole updateMany
   */
  export type UserRoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserRoles.
     */
    data: XOR<UserRoleUpdateManyMutationInput, UserRoleUncheckedUpdateManyInput>
    /**
     * Filter which UserRoles to update
     */
    where?: UserRoleWhereInput
    /**
     * Limit how many UserRoles to update.
     */
    limit?: number
  }

  /**
   * UserRole upsert
   */
  export type UserRoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * The filter to search for the UserRole to update in case it exists.
     */
    where: UserRoleWhereUniqueInput
    /**
     * In case the UserRole found by the `where` argument doesn't exist, create a new UserRole with this data.
     */
    create: XOR<UserRoleCreateInput, UserRoleUncheckedCreateInput>
    /**
     * In case the UserRole was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserRoleUpdateInput, UserRoleUncheckedUpdateInput>
  }

  /**
   * UserRole delete
   */
  export type UserRoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
    /**
     * Filter which UserRole to delete.
     */
    where: UserRoleWhereUniqueInput
  }

  /**
   * UserRole deleteMany
   */
  export type UserRoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRoles to delete
     */
    where?: UserRoleWhereInput
    /**
     * Limit how many UserRoles to delete.
     */
    limit?: number
  }

  /**
   * UserRole without action
   */
  export type UserRoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRole
     */
    select?: UserRoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRole
     */
    omit?: UserRoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRoleInclude<ExtArgs> | null
  }


  /**
   * Model RoleRight
   */

  export type AggregateRoleRight = {
    _count: RoleRightCountAggregateOutputType | null
    _avg: RoleRightAvgAggregateOutputType | null
    _sum: RoleRightSumAggregateOutputType | null
    _min: RoleRightMinAggregateOutputType | null
    _max: RoleRightMaxAggregateOutputType | null
  }

  export type RoleRightAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
    rightId: number | null
  }

  export type RoleRightSumAggregateOutputType = {
    id: number | null
    roleId: number | null
    rightId: number | null
  }

  export type RoleRightMinAggregateOutputType = {
    id: number | null
    roleId: number | null
    rightId: number | null
    permission: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RoleRightMaxAggregateOutputType = {
    id: number | null
    roleId: number | null
    rightId: number | null
    permission: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RoleRightCountAggregateOutputType = {
    id: number
    roleId: number
    rightId: number
    permission: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type RoleRightAvgAggregateInputType = {
    id?: true
    roleId?: true
    rightId?: true
  }

  export type RoleRightSumAggregateInputType = {
    id?: true
    roleId?: true
    rightId?: true
  }

  export type RoleRightMinAggregateInputType = {
    id?: true
    roleId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RoleRightMaxAggregateInputType = {
    id?: true
    roleId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RoleRightCountAggregateInputType = {
    id?: true
    roleId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type RoleRightAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleRight to aggregate.
     */
    where?: RoleRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleRights to fetch.
     */
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleRights
    **/
    _count?: true | RoleRightCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleRightAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleRightSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleRightMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleRightMaxAggregateInputType
  }

  export type GetRoleRightAggregateType<T extends RoleRightAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleRight]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleRight[P]>
      : GetScalarType<T[P], AggregateRoleRight[P]>
  }




  export type RoleRightGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleRightWhereInput
    orderBy?: RoleRightOrderByWithAggregationInput | RoleRightOrderByWithAggregationInput[]
    by: RoleRightScalarFieldEnum[] | RoleRightScalarFieldEnum
    having?: RoleRightScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleRightCountAggregateInputType | true
    _avg?: RoleRightAvgAggregateInputType
    _sum?: RoleRightSumAggregateInputType
    _min?: RoleRightMinAggregateInputType
    _max?: RoleRightMaxAggregateInputType
  }

  export type RoleRightGroupByOutputType = {
    id: number
    roleId: number
    rightId: number
    permission: string
    created: Date
    modified: Date
    expired: Date | null
    _count: RoleRightCountAggregateOutputType | null
    _avg: RoleRightAvgAggregateOutputType | null
    _sum: RoleRightSumAggregateOutputType | null
    _min: RoleRightMinAggregateOutputType | null
    _max: RoleRightMaxAggregateOutputType | null
  }

  type GetRoleRightGroupByPayload<T extends RoleRightGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleRightGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleRightGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleRightGroupByOutputType[P]>
            : GetScalarType<T[P], RoleRightGroupByOutputType[P]>
        }
      >
    >


  export type RoleRightSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    rightId?: boolean
    permission?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    right?: boolean | RightDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleRight"]>



  export type RoleRightSelectScalar = {
    id?: boolean
    roleId?: boolean
    rightId?: boolean
    permission?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type RoleRightOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roleId" | "rightId" | "permission" | "created" | "modified" | "expired", ExtArgs["result"]["roleRight"]>
  export type RoleRightInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    right?: boolean | RightDefaultArgs<ExtArgs>
  }

  export type $RoleRightPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoleRight"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
      right: Prisma.$RightPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      roleId: number
      rightId: number
      permission: string
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["roleRight"]>
    composites: {}
  }

  type RoleRightGetPayload<S extends boolean | null | undefined | RoleRightDefaultArgs> = $Result.GetResult<Prisma.$RoleRightPayload, S>

  type RoleRightCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleRightFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleRightCountAggregateInputType | true
    }

  export interface RoleRightDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoleRight'], meta: { name: 'RoleRight' } }
    /**
     * Find zero or one RoleRight that matches the filter.
     * @param {RoleRightFindUniqueArgs} args - Arguments to find a RoleRight
     * @example
     * // Get one RoleRight
     * const roleRight = await prisma.roleRight.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleRightFindUniqueArgs>(args: SelectSubset<T, RoleRightFindUniqueArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoleRight that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleRightFindUniqueOrThrowArgs} args - Arguments to find a RoleRight
     * @example
     * // Get one RoleRight
     * const roleRight = await prisma.roleRight.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleRightFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleRightFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleRight that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightFindFirstArgs} args - Arguments to find a RoleRight
     * @example
     * // Get one RoleRight
     * const roleRight = await prisma.roleRight.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleRightFindFirstArgs>(args?: SelectSubset<T, RoleRightFindFirstArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleRight that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightFindFirstOrThrowArgs} args - Arguments to find a RoleRight
     * @example
     * // Get one RoleRight
     * const roleRight = await prisma.roleRight.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleRightFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleRightFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoleRights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleRights
     * const roleRights = await prisma.roleRight.findMany()
     * 
     * // Get first 10 RoleRights
     * const roleRights = await prisma.roleRight.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleRightWithIdOnly = await prisma.roleRight.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleRightFindManyArgs>(args?: SelectSubset<T, RoleRightFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoleRight.
     * @param {RoleRightCreateArgs} args - Arguments to create a RoleRight.
     * @example
     * // Create one RoleRight
     * const RoleRight = await prisma.roleRight.create({
     *   data: {
     *     // ... data to create a RoleRight
     *   }
     * })
     * 
     */
    create<T extends RoleRightCreateArgs>(args: SelectSubset<T, RoleRightCreateArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoleRights.
     * @param {RoleRightCreateManyArgs} args - Arguments to create many RoleRights.
     * @example
     * // Create many RoleRights
     * const roleRight = await prisma.roleRight.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleRightCreateManyArgs>(args?: SelectSubset<T, RoleRightCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RoleRight.
     * @param {RoleRightDeleteArgs} args - Arguments to delete one RoleRight.
     * @example
     * // Delete one RoleRight
     * const RoleRight = await prisma.roleRight.delete({
     *   where: {
     *     // ... filter to delete one RoleRight
     *   }
     * })
     * 
     */
    delete<T extends RoleRightDeleteArgs>(args: SelectSubset<T, RoleRightDeleteArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoleRight.
     * @param {RoleRightUpdateArgs} args - Arguments to update one RoleRight.
     * @example
     * // Update one RoleRight
     * const roleRight = await prisma.roleRight.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleRightUpdateArgs>(args: SelectSubset<T, RoleRightUpdateArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoleRights.
     * @param {RoleRightDeleteManyArgs} args - Arguments to filter RoleRights to delete.
     * @example
     * // Delete a few RoleRights
     * const { count } = await prisma.roleRight.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleRightDeleteManyArgs>(args?: SelectSubset<T, RoleRightDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleRights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleRights
     * const roleRight = await prisma.roleRight.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleRightUpdateManyArgs>(args: SelectSubset<T, RoleRightUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RoleRight.
     * @param {RoleRightUpsertArgs} args - Arguments to update or create a RoleRight.
     * @example
     * // Update or create a RoleRight
     * const roleRight = await prisma.roleRight.upsert({
     *   create: {
     *     // ... data to create a RoleRight
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleRight we want to update
     *   }
     * })
     */
    upsert<T extends RoleRightUpsertArgs>(args: SelectSubset<T, RoleRightUpsertArgs<ExtArgs>>): Prisma__RoleRightClient<$Result.GetResult<Prisma.$RoleRightPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoleRights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightCountArgs} args - Arguments to filter RoleRights to count.
     * @example
     * // Count the number of RoleRights
     * const count = await prisma.roleRight.count({
     *   where: {
     *     // ... the filter for the RoleRights we want to count
     *   }
     * })
    **/
    count<T extends RoleRightCountArgs>(
      args?: Subset<T, RoleRightCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleRightCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleRight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleRightAggregateArgs>(args: Subset<T, RoleRightAggregateArgs>): Prisma.PrismaPromise<GetRoleRightAggregateType<T>>

    /**
     * Group by RoleRight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleRightGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleRightGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleRightGroupByArgs['orderBy'] }
        : { orderBy?: RoleRightGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleRightGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleRightGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoleRight model
   */
  readonly fields: RoleRightFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleRight.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleRightClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    right<T extends RightDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RightDefaultArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoleRight model
   */
  interface RoleRightFieldRefs {
    readonly id: FieldRef<"RoleRight", 'Int'>
    readonly roleId: FieldRef<"RoleRight", 'Int'>
    readonly rightId: FieldRef<"RoleRight", 'Int'>
    readonly permission: FieldRef<"RoleRight", 'String'>
    readonly created: FieldRef<"RoleRight", 'DateTime'>
    readonly modified: FieldRef<"RoleRight", 'DateTime'>
    readonly expired: FieldRef<"RoleRight", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RoleRight findUnique
   */
  export type RoleRightFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter, which RoleRight to fetch.
     */
    where: RoleRightWhereUniqueInput
  }

  /**
   * RoleRight findUniqueOrThrow
   */
  export type RoleRightFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter, which RoleRight to fetch.
     */
    where: RoleRightWhereUniqueInput
  }

  /**
   * RoleRight findFirst
   */
  export type RoleRightFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter, which RoleRight to fetch.
     */
    where?: RoleRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleRights to fetch.
     */
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleRights.
     */
    cursor?: RoleRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleRights.
     */
    distinct?: RoleRightScalarFieldEnum | RoleRightScalarFieldEnum[]
  }

  /**
   * RoleRight findFirstOrThrow
   */
  export type RoleRightFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter, which RoleRight to fetch.
     */
    where?: RoleRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleRights to fetch.
     */
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleRights.
     */
    cursor?: RoleRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleRights.
     */
    distinct?: RoleRightScalarFieldEnum | RoleRightScalarFieldEnum[]
  }

  /**
   * RoleRight findMany
   */
  export type RoleRightFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter, which RoleRights to fetch.
     */
    where?: RoleRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleRights to fetch.
     */
    orderBy?: RoleRightOrderByWithRelationInput | RoleRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleRights.
     */
    cursor?: RoleRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleRights.
     */
    skip?: number
    distinct?: RoleRightScalarFieldEnum | RoleRightScalarFieldEnum[]
  }

  /**
   * RoleRight create
   */
  export type RoleRightCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * The data needed to create a RoleRight.
     */
    data: XOR<RoleRightCreateInput, RoleRightUncheckedCreateInput>
  }

  /**
   * RoleRight createMany
   */
  export type RoleRightCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoleRights.
     */
    data: RoleRightCreateManyInput | RoleRightCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoleRight update
   */
  export type RoleRightUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * The data needed to update a RoleRight.
     */
    data: XOR<RoleRightUpdateInput, RoleRightUncheckedUpdateInput>
    /**
     * Choose, which RoleRight to update.
     */
    where: RoleRightWhereUniqueInput
  }

  /**
   * RoleRight updateMany
   */
  export type RoleRightUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoleRights.
     */
    data: XOR<RoleRightUpdateManyMutationInput, RoleRightUncheckedUpdateManyInput>
    /**
     * Filter which RoleRights to update
     */
    where?: RoleRightWhereInput
    /**
     * Limit how many RoleRights to update.
     */
    limit?: number
  }

  /**
   * RoleRight upsert
   */
  export type RoleRightUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * The filter to search for the RoleRight to update in case it exists.
     */
    where: RoleRightWhereUniqueInput
    /**
     * In case the RoleRight found by the `where` argument doesn't exist, create a new RoleRight with this data.
     */
    create: XOR<RoleRightCreateInput, RoleRightUncheckedCreateInput>
    /**
     * In case the RoleRight was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleRightUpdateInput, RoleRightUncheckedUpdateInput>
  }

  /**
   * RoleRight delete
   */
  export type RoleRightDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
    /**
     * Filter which RoleRight to delete.
     */
    where: RoleRightWhereUniqueInput
  }

  /**
   * RoleRight deleteMany
   */
  export type RoleRightDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleRights to delete
     */
    where?: RoleRightWhereInput
    /**
     * Limit how many RoleRights to delete.
     */
    limit?: number
  }

  /**
   * RoleRight without action
   */
  export type RoleRightDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleRight
     */
    select?: RoleRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleRight
     */
    omit?: RoleRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleRightInclude<ExtArgs> | null
  }


  /**
   * Model UserRight
   */

  export type AggregateUserRight = {
    _count: UserRightCountAggregateOutputType | null
    _avg: UserRightAvgAggregateOutputType | null
    _sum: UserRightSumAggregateOutputType | null
    _min: UserRightMinAggregateOutputType | null
    _max: UserRightMaxAggregateOutputType | null
  }

  export type UserRightAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    rightId: number | null
  }

  export type UserRightSumAggregateOutputType = {
    id: number | null
    userId: number | null
    rightId: number | null
  }

  export type UserRightMinAggregateOutputType = {
    id: number | null
    userId: number | null
    rightId: number | null
    permission: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserRightMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    rightId: number | null
    permission: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type UserRightCountAggregateOutputType = {
    id: number
    userId: number
    rightId: number
    permission: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type UserRightAvgAggregateInputType = {
    id?: true
    userId?: true
    rightId?: true
  }

  export type UserRightSumAggregateInputType = {
    id?: true
    userId?: true
    rightId?: true
  }

  export type UserRightMinAggregateInputType = {
    id?: true
    userId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserRightMaxAggregateInputType = {
    id?: true
    userId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type UserRightCountAggregateInputType = {
    id?: true
    userId?: true
    rightId?: true
    permission?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type UserRightAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRight to aggregate.
     */
    where?: UserRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRights to fetch.
     */
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserRights
    **/
    _count?: true | UserRightCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserRightAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserRightSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserRightMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserRightMaxAggregateInputType
  }

  export type GetUserRightAggregateType<T extends UserRightAggregateArgs> = {
        [P in keyof T & keyof AggregateUserRight]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserRight[P]>
      : GetScalarType<T[P], AggregateUserRight[P]>
  }




  export type UserRightGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserRightWhereInput
    orderBy?: UserRightOrderByWithAggregationInput | UserRightOrderByWithAggregationInput[]
    by: UserRightScalarFieldEnum[] | UserRightScalarFieldEnum
    having?: UserRightScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserRightCountAggregateInputType | true
    _avg?: UserRightAvgAggregateInputType
    _sum?: UserRightSumAggregateInputType
    _min?: UserRightMinAggregateInputType
    _max?: UserRightMaxAggregateInputType
  }

  export type UserRightGroupByOutputType = {
    id: number
    userId: number
    rightId: number
    permission: string
    created: Date
    modified: Date
    expired: Date | null
    _count: UserRightCountAggregateOutputType | null
    _avg: UserRightAvgAggregateOutputType | null
    _sum: UserRightSumAggregateOutputType | null
    _min: UserRightMinAggregateOutputType | null
    _max: UserRightMaxAggregateOutputType | null
  }

  type GetUserRightGroupByPayload<T extends UserRightGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserRightGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserRightGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserRightGroupByOutputType[P]>
            : GetScalarType<T[P], UserRightGroupByOutputType[P]>
        }
      >
    >


  export type UserRightSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    rightId?: boolean
    permission?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    right?: boolean | RightDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userRight"]>



  export type UserRightSelectScalar = {
    id?: boolean
    userId?: boolean
    rightId?: boolean
    permission?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type UserRightOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "rightId" | "permission" | "created" | "modified" | "expired", ExtArgs["result"]["userRight"]>
  export type UserRightInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    right?: boolean | RightDefaultArgs<ExtArgs>
  }

  export type $UserRightPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserRight"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      right: Prisma.$RightPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      rightId: number
      permission: string
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["userRight"]>
    composites: {}
  }

  type UserRightGetPayload<S extends boolean | null | undefined | UserRightDefaultArgs> = $Result.GetResult<Prisma.$UserRightPayload, S>

  type UserRightCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserRightFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserRightCountAggregateInputType | true
    }

  export interface UserRightDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserRight'], meta: { name: 'UserRight' } }
    /**
     * Find zero or one UserRight that matches the filter.
     * @param {UserRightFindUniqueArgs} args - Arguments to find a UserRight
     * @example
     * // Get one UserRight
     * const userRight = await prisma.userRight.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserRightFindUniqueArgs>(args: SelectSubset<T, UserRightFindUniqueArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserRight that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserRightFindUniqueOrThrowArgs} args - Arguments to find a UserRight
     * @example
     * // Get one UserRight
     * const userRight = await prisma.userRight.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserRightFindUniqueOrThrowArgs>(args: SelectSubset<T, UserRightFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRight that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightFindFirstArgs} args - Arguments to find a UserRight
     * @example
     * // Get one UserRight
     * const userRight = await prisma.userRight.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserRightFindFirstArgs>(args?: SelectSubset<T, UserRightFindFirstArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserRight that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightFindFirstOrThrowArgs} args - Arguments to find a UserRight
     * @example
     * // Get one UserRight
     * const userRight = await prisma.userRight.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserRightFindFirstOrThrowArgs>(args?: SelectSubset<T, UserRightFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserRights that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserRights
     * const userRights = await prisma.userRight.findMany()
     * 
     * // Get first 10 UserRights
     * const userRights = await prisma.userRight.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userRightWithIdOnly = await prisma.userRight.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserRightFindManyArgs>(args?: SelectSubset<T, UserRightFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserRight.
     * @param {UserRightCreateArgs} args - Arguments to create a UserRight.
     * @example
     * // Create one UserRight
     * const UserRight = await prisma.userRight.create({
     *   data: {
     *     // ... data to create a UserRight
     *   }
     * })
     * 
     */
    create<T extends UserRightCreateArgs>(args: SelectSubset<T, UserRightCreateArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserRights.
     * @param {UserRightCreateManyArgs} args - Arguments to create many UserRights.
     * @example
     * // Create many UserRights
     * const userRight = await prisma.userRight.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserRightCreateManyArgs>(args?: SelectSubset<T, UserRightCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserRight.
     * @param {UserRightDeleteArgs} args - Arguments to delete one UserRight.
     * @example
     * // Delete one UserRight
     * const UserRight = await prisma.userRight.delete({
     *   where: {
     *     // ... filter to delete one UserRight
     *   }
     * })
     * 
     */
    delete<T extends UserRightDeleteArgs>(args: SelectSubset<T, UserRightDeleteArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserRight.
     * @param {UserRightUpdateArgs} args - Arguments to update one UserRight.
     * @example
     * // Update one UserRight
     * const userRight = await prisma.userRight.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserRightUpdateArgs>(args: SelectSubset<T, UserRightUpdateArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserRights.
     * @param {UserRightDeleteManyArgs} args - Arguments to filter UserRights to delete.
     * @example
     * // Delete a few UserRights
     * const { count } = await prisma.userRight.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserRightDeleteManyArgs>(args?: SelectSubset<T, UserRightDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserRights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserRights
     * const userRight = await prisma.userRight.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserRightUpdateManyArgs>(args: SelectSubset<T, UserRightUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserRight.
     * @param {UserRightUpsertArgs} args - Arguments to update or create a UserRight.
     * @example
     * // Update or create a UserRight
     * const userRight = await prisma.userRight.upsert({
     *   create: {
     *     // ... data to create a UserRight
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserRight we want to update
     *   }
     * })
     */
    upsert<T extends UserRightUpsertArgs>(args: SelectSubset<T, UserRightUpsertArgs<ExtArgs>>): Prisma__UserRightClient<$Result.GetResult<Prisma.$UserRightPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserRights.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightCountArgs} args - Arguments to filter UserRights to count.
     * @example
     * // Count the number of UserRights
     * const count = await prisma.userRight.count({
     *   where: {
     *     // ... the filter for the UserRights we want to count
     *   }
     * })
    **/
    count<T extends UserRightCountArgs>(
      args?: Subset<T, UserRightCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserRightCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserRight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserRightAggregateArgs>(args: Subset<T, UserRightAggregateArgs>): Prisma.PrismaPromise<GetUserRightAggregateType<T>>

    /**
     * Group by UserRight.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserRightGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserRightGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserRightGroupByArgs['orderBy'] }
        : { orderBy?: UserRightGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserRightGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserRightGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserRight model
   */
  readonly fields: UserRightFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserRight.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserRightClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    right<T extends RightDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RightDefaultArgs<ExtArgs>>): Prisma__RightClient<$Result.GetResult<Prisma.$RightPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserRight model
   */
  interface UserRightFieldRefs {
    readonly id: FieldRef<"UserRight", 'Int'>
    readonly userId: FieldRef<"UserRight", 'Int'>
    readonly rightId: FieldRef<"UserRight", 'Int'>
    readonly permission: FieldRef<"UserRight", 'String'>
    readonly created: FieldRef<"UserRight", 'DateTime'>
    readonly modified: FieldRef<"UserRight", 'DateTime'>
    readonly expired: FieldRef<"UserRight", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserRight findUnique
   */
  export type UserRightFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter, which UserRight to fetch.
     */
    where: UserRightWhereUniqueInput
  }

  /**
   * UserRight findUniqueOrThrow
   */
  export type UserRightFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter, which UserRight to fetch.
     */
    where: UserRightWhereUniqueInput
  }

  /**
   * UserRight findFirst
   */
  export type UserRightFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter, which UserRight to fetch.
     */
    where?: UserRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRights to fetch.
     */
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRights.
     */
    cursor?: UserRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRights.
     */
    distinct?: UserRightScalarFieldEnum | UserRightScalarFieldEnum[]
  }

  /**
   * UserRight findFirstOrThrow
   */
  export type UserRightFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter, which UserRight to fetch.
     */
    where?: UserRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRights to fetch.
     */
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserRights.
     */
    cursor?: UserRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRights.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserRights.
     */
    distinct?: UserRightScalarFieldEnum | UserRightScalarFieldEnum[]
  }

  /**
   * UserRight findMany
   */
  export type UserRightFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter, which UserRights to fetch.
     */
    where?: UserRightWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserRights to fetch.
     */
    orderBy?: UserRightOrderByWithRelationInput | UserRightOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserRights.
     */
    cursor?: UserRightWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserRights from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserRights.
     */
    skip?: number
    distinct?: UserRightScalarFieldEnum | UserRightScalarFieldEnum[]
  }

  /**
   * UserRight create
   */
  export type UserRightCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * The data needed to create a UserRight.
     */
    data: XOR<UserRightCreateInput, UserRightUncheckedCreateInput>
  }

  /**
   * UserRight createMany
   */
  export type UserRightCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserRights.
     */
    data: UserRightCreateManyInput | UserRightCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserRight update
   */
  export type UserRightUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * The data needed to update a UserRight.
     */
    data: XOR<UserRightUpdateInput, UserRightUncheckedUpdateInput>
    /**
     * Choose, which UserRight to update.
     */
    where: UserRightWhereUniqueInput
  }

  /**
   * UserRight updateMany
   */
  export type UserRightUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserRights.
     */
    data: XOR<UserRightUpdateManyMutationInput, UserRightUncheckedUpdateManyInput>
    /**
     * Filter which UserRights to update
     */
    where?: UserRightWhereInput
    /**
     * Limit how many UserRights to update.
     */
    limit?: number
  }

  /**
   * UserRight upsert
   */
  export type UserRightUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * The filter to search for the UserRight to update in case it exists.
     */
    where: UserRightWhereUniqueInput
    /**
     * In case the UserRight found by the `where` argument doesn't exist, create a new UserRight with this data.
     */
    create: XOR<UserRightCreateInput, UserRightUncheckedCreateInput>
    /**
     * In case the UserRight was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserRightUpdateInput, UserRightUncheckedUpdateInput>
  }

  /**
   * UserRight delete
   */
  export type UserRightDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
    /**
     * Filter which UserRight to delete.
     */
    where: UserRightWhereUniqueInput
  }

  /**
   * UserRight deleteMany
   */
  export type UserRightDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserRights to delete
     */
    where?: UserRightWhereInput
    /**
     * Limit how many UserRights to delete.
     */
    limit?: number
  }

  /**
   * UserRight without action
   */
  export type UserRightDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserRight
     */
    select?: UserRightSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserRight
     */
    omit?: UserRightOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserRightInclude<ExtArgs> | null
  }


  /**
   * Model Log
   */

  export type AggregateLog = {
    _count: LogCountAggregateOutputType | null
    _avg: LogAvgAggregateOutputType | null
    _sum: LogSumAggregateOutputType | null
    _min: LogMinAggregateOutputType | null
    _max: LogMaxAggregateOutputType | null
  }

  export type LogAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    relationId: number | null
  }

  export type LogSumAggregateOutputType = {
    id: number | null
    userId: number | null
    relationId: number | null
  }

  export type LogMinAggregateOutputType = {
    id: number | null
    userId: number | null
    relationId: number | null
    valueFrom: string | null
    valueTo: string | null
    created: Date | null
  }

  export type LogMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    relationId: number | null
    valueFrom: string | null
    valueTo: string | null
    created: Date | null
  }

  export type LogCountAggregateOutputType = {
    id: number
    userId: number
    relationId: number
    valueFrom: number
    valueTo: number
    created: number
    _all: number
  }


  export type LogAvgAggregateInputType = {
    id?: true
    userId?: true
    relationId?: true
  }

  export type LogSumAggregateInputType = {
    id?: true
    userId?: true
    relationId?: true
  }

  export type LogMinAggregateInputType = {
    id?: true
    userId?: true
    relationId?: true
    valueFrom?: true
    valueTo?: true
    created?: true
  }

  export type LogMaxAggregateInputType = {
    id?: true
    userId?: true
    relationId?: true
    valueFrom?: true
    valueTo?: true
    created?: true
  }

  export type LogCountAggregateInputType = {
    id?: true
    userId?: true
    relationId?: true
    valueFrom?: true
    valueTo?: true
    created?: true
    _all?: true
  }

  export type LogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Log to aggregate.
     */
    where?: LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Logs to fetch.
     */
    orderBy?: LogOrderByWithRelationInput | LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Logs
    **/
    _count?: true | LogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LogMaxAggregateInputType
  }

  export type GetLogAggregateType<T extends LogAggregateArgs> = {
        [P in keyof T & keyof AggregateLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLog[P]>
      : GetScalarType<T[P], AggregateLog[P]>
  }




  export type LogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LogWhereInput
    orderBy?: LogOrderByWithAggregationInput | LogOrderByWithAggregationInput[]
    by: LogScalarFieldEnum[] | LogScalarFieldEnum
    having?: LogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LogCountAggregateInputType | true
    _avg?: LogAvgAggregateInputType
    _sum?: LogSumAggregateInputType
    _min?: LogMinAggregateInputType
    _max?: LogMaxAggregateInputType
  }

  export type LogGroupByOutputType = {
    id: number
    userId: number
    relationId: number | null
    valueFrom: string | null
    valueTo: string | null
    created: Date
    _count: LogCountAggregateOutputType | null
    _avg: LogAvgAggregateOutputType | null
    _sum: LogSumAggregateOutputType | null
    _min: LogMinAggregateOutputType | null
    _max: LogMaxAggregateOutputType | null
  }

  type GetLogGroupByPayload<T extends LogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LogGroupByOutputType[P]>
            : GetScalarType<T[P], LogGroupByOutputType[P]>
        }
      >
    >


  export type LogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    relationId?: boolean
    valueFrom?: boolean
    valueTo?: boolean
    created?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["log"]>



  export type LogSelectScalar = {
    id?: boolean
    userId?: boolean
    relationId?: boolean
    valueFrom?: boolean
    valueTo?: boolean
    created?: boolean
  }

  export type LogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "relationId" | "valueFrom" | "valueTo" | "created", ExtArgs["result"]["log"]>
  export type LogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Log"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      relationId: number | null
      valueFrom: string | null
      valueTo: string | null
      created: Date
    }, ExtArgs["result"]["log"]>
    composites: {}
  }

  type LogGetPayload<S extends boolean | null | undefined | LogDefaultArgs> = $Result.GetResult<Prisma.$LogPayload, S>

  type LogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LogCountAggregateInputType | true
    }

  export interface LogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Log'], meta: { name: 'Log' } }
    /**
     * Find zero or one Log that matches the filter.
     * @param {LogFindUniqueArgs} args - Arguments to find a Log
     * @example
     * // Get one Log
     * const log = await prisma.log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LogFindUniqueArgs>(args: SelectSubset<T, LogFindUniqueArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LogFindUniqueOrThrowArgs} args - Arguments to find a Log
     * @example
     * // Get one Log
     * const log = await prisma.log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LogFindUniqueOrThrowArgs>(args: SelectSubset<T, LogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogFindFirstArgs} args - Arguments to find a Log
     * @example
     * // Get one Log
     * const log = await prisma.log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LogFindFirstArgs>(args?: SelectSubset<T, LogFindFirstArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogFindFirstOrThrowArgs} args - Arguments to find a Log
     * @example
     * // Get one Log
     * const log = await prisma.log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LogFindFirstOrThrowArgs>(args?: SelectSubset<T, LogFindFirstOrThrowArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Logs
     * const logs = await prisma.log.findMany()
     * 
     * // Get first 10 Logs
     * const logs = await prisma.log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const logWithIdOnly = await prisma.log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LogFindManyArgs>(args?: SelectSubset<T, LogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Log.
     * @param {LogCreateArgs} args - Arguments to create a Log.
     * @example
     * // Create one Log
     * const Log = await prisma.log.create({
     *   data: {
     *     // ... data to create a Log
     *   }
     * })
     * 
     */
    create<T extends LogCreateArgs>(args: SelectSubset<T, LogCreateArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Logs.
     * @param {LogCreateManyArgs} args - Arguments to create many Logs.
     * @example
     * // Create many Logs
     * const log = await prisma.log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LogCreateManyArgs>(args?: SelectSubset<T, LogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Log.
     * @param {LogDeleteArgs} args - Arguments to delete one Log.
     * @example
     * // Delete one Log
     * const Log = await prisma.log.delete({
     *   where: {
     *     // ... filter to delete one Log
     *   }
     * })
     * 
     */
    delete<T extends LogDeleteArgs>(args: SelectSubset<T, LogDeleteArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Log.
     * @param {LogUpdateArgs} args - Arguments to update one Log.
     * @example
     * // Update one Log
     * const log = await prisma.log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LogUpdateArgs>(args: SelectSubset<T, LogUpdateArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Logs.
     * @param {LogDeleteManyArgs} args - Arguments to filter Logs to delete.
     * @example
     * // Delete a few Logs
     * const { count } = await prisma.log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LogDeleteManyArgs>(args?: SelectSubset<T, LogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Logs
     * const log = await prisma.log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LogUpdateManyArgs>(args: SelectSubset<T, LogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Log.
     * @param {LogUpsertArgs} args - Arguments to update or create a Log.
     * @example
     * // Update or create a Log
     * const log = await prisma.log.upsert({
     *   create: {
     *     // ... data to create a Log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Log we want to update
     *   }
     * })
     */
    upsert<T extends LogUpsertArgs>(args: SelectSubset<T, LogUpsertArgs<ExtArgs>>): Prisma__LogClient<$Result.GetResult<Prisma.$LogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogCountArgs} args - Arguments to filter Logs to count.
     * @example
     * // Count the number of Logs
     * const count = await prisma.log.count({
     *   where: {
     *     // ... the filter for the Logs we want to count
     *   }
     * })
    **/
    count<T extends LogCountArgs>(
      args?: Subset<T, LogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LogAggregateArgs>(args: Subset<T, LogAggregateArgs>): Prisma.PrismaPromise<GetLogAggregateType<T>>

    /**
     * Group by Log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LogGroupByArgs['orderBy'] }
        : { orderBy?: LogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Log model
   */
  readonly fields: LogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Log model
   */
  interface LogFieldRefs {
    readonly id: FieldRef<"Log", 'Int'>
    readonly userId: FieldRef<"Log", 'Int'>
    readonly relationId: FieldRef<"Log", 'Int'>
    readonly valueFrom: FieldRef<"Log", 'String'>
    readonly valueTo: FieldRef<"Log", 'String'>
    readonly created: FieldRef<"Log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Log findUnique
   */
  export type LogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter, which Log to fetch.
     */
    where: LogWhereUniqueInput
  }

  /**
   * Log findUniqueOrThrow
   */
  export type LogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter, which Log to fetch.
     */
    where: LogWhereUniqueInput
  }

  /**
   * Log findFirst
   */
  export type LogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter, which Log to fetch.
     */
    where?: LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Logs to fetch.
     */
    orderBy?: LogOrderByWithRelationInput | LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Logs.
     */
    cursor?: LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Logs.
     */
    distinct?: LogScalarFieldEnum | LogScalarFieldEnum[]
  }

  /**
   * Log findFirstOrThrow
   */
  export type LogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter, which Log to fetch.
     */
    where?: LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Logs to fetch.
     */
    orderBy?: LogOrderByWithRelationInput | LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Logs.
     */
    cursor?: LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Logs.
     */
    distinct?: LogScalarFieldEnum | LogScalarFieldEnum[]
  }

  /**
   * Log findMany
   */
  export type LogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter, which Logs to fetch.
     */
    where?: LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Logs to fetch.
     */
    orderBy?: LogOrderByWithRelationInput | LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Logs.
     */
    cursor?: LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Logs.
     */
    skip?: number
    distinct?: LogScalarFieldEnum | LogScalarFieldEnum[]
  }

  /**
   * Log create
   */
  export type LogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * The data needed to create a Log.
     */
    data: XOR<LogCreateInput, LogUncheckedCreateInput>
  }

  /**
   * Log createMany
   */
  export type LogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Logs.
     */
    data: LogCreateManyInput | LogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Log update
   */
  export type LogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * The data needed to update a Log.
     */
    data: XOR<LogUpdateInput, LogUncheckedUpdateInput>
    /**
     * Choose, which Log to update.
     */
    where: LogWhereUniqueInput
  }

  /**
   * Log updateMany
   */
  export type LogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Logs.
     */
    data: XOR<LogUpdateManyMutationInput, LogUncheckedUpdateManyInput>
    /**
     * Filter which Logs to update
     */
    where?: LogWhereInput
    /**
     * Limit how many Logs to update.
     */
    limit?: number
  }

  /**
   * Log upsert
   */
  export type LogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * The filter to search for the Log to update in case it exists.
     */
    where: LogWhereUniqueInput
    /**
     * In case the Log found by the `where` argument doesn't exist, create a new Log with this data.
     */
    create: XOR<LogCreateInput, LogUncheckedCreateInput>
    /**
     * In case the Log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LogUpdateInput, LogUncheckedUpdateInput>
  }

  /**
   * Log delete
   */
  export type LogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
    /**
     * Filter which Log to delete.
     */
    where: LogWhereUniqueInput
  }

  /**
   * Log deleteMany
   */
  export type LogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Logs to delete
     */
    where?: LogWhereInput
    /**
     * Limit how many Logs to delete.
     */
    limit?: number
  }

  /**
   * Log without action
   */
  export type LogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Log
     */
    select?: LogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Log
     */
    omit?: LogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LogInclude<ExtArgs> | null
  }


  /**
   * Model Service
   */

  export type AggregateService = {
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  export type ServiceAvgAggregateOutputType = {
    id: number | null
  }

  export type ServiceSumAggregateOutputType = {
    id: number | null
  }

  export type ServiceMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type ServiceMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type ServiceCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type ServiceAvgAggregateInputType = {
    id?: true
  }

  export type ServiceSumAggregateInputType = {
    id?: true
  }

  export type ServiceMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type ServiceMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type ServiceCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type ServiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Service to aggregate.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Services
    **/
    _count?: true | ServiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServiceMaxAggregateInputType
  }

  export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
        [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateService[P]>
      : GetScalarType<T[P], AggregateService[P]>
  }




  export type ServiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ServiceWhereInput
    orderBy?: ServiceOrderByWithAggregationInput | ServiceOrderByWithAggregationInput[]
    by: ServiceScalarFieldEnum[] | ServiceScalarFieldEnum
    having?: ServiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServiceCountAggregateInputType | true
    _avg?: ServiceAvgAggregateInputType
    _sum?: ServiceSumAggregateInputType
    _min?: ServiceMinAggregateInputType
    _max?: ServiceMaxAggregateInputType
  }

  export type ServiceGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: ServiceCountAggregateOutputType | null
    _avg: ServiceAvgAggregateOutputType | null
    _sum: ServiceSumAggregateOutputType | null
    _min: ServiceMinAggregateOutputType | null
    _max: ServiceMaxAggregateOutputType | null
  }

  type GetServiceGroupByPayload<T extends ServiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServiceGroupByOutputType[P]>
            : GetScalarType<T[P], ServiceGroupByOutputType[P]>
        }
      >
    >


  export type ServiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    kpiData?: boolean | Service$kpiDataArgs<ExtArgs>
    relations?: boolean | Service$relationsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["service"]>



  export type ServiceSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type ServiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created" | "modified" | "expired", ExtArgs["result"]["service"]>
  export type ServiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | Service$kpiDataArgs<ExtArgs>
    relations?: boolean | Service$relationsArgs<ExtArgs>
    _count?: boolean | ServiceCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ServicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Service"
    objects: {
      kpiData: Prisma.$KPI_DataPayload<ExtArgs>[]
      relations: Prisma.$RelationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["service"]>
    composites: {}
  }

  type ServiceGetPayload<S extends boolean | null | undefined | ServiceDefaultArgs> = $Result.GetResult<Prisma.$ServicePayload, S>

  type ServiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServiceCountAggregateInputType | true
    }

  export interface ServiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Service'], meta: { name: 'Service' } }
    /**
     * Find zero or one Service that matches the filter.
     * @param {ServiceFindUniqueArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ServiceFindUniqueArgs>(args: SelectSubset<T, ServiceFindUniqueArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Service that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ServiceFindUniqueOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ServiceFindUniqueOrThrowArgs>(args: SelectSubset<T, ServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ServiceFindFirstArgs>(args?: SelectSubset<T, ServiceFindFirstArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Service that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindFirstOrThrowArgs} args - Arguments to find a Service
     * @example
     * // Get one Service
     * const service = await prisma.service.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ServiceFindFirstOrThrowArgs>(args?: SelectSubset<T, ServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.service.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.service.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ServiceFindManyArgs>(args?: SelectSubset<T, ServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Service.
     * @param {ServiceCreateArgs} args - Arguments to create a Service.
     * @example
     * // Create one Service
     * const Service = await prisma.service.create({
     *   data: {
     *     // ... data to create a Service
     *   }
     * })
     * 
     */
    create<T extends ServiceCreateArgs>(args: SelectSubset<T, ServiceCreateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Services.
     * @param {ServiceCreateManyArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const service = await prisma.service.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ServiceCreateManyArgs>(args?: SelectSubset<T, ServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Service.
     * @param {ServiceDeleteArgs} args - Arguments to delete one Service.
     * @example
     * // Delete one Service
     * const Service = await prisma.service.delete({
     *   where: {
     *     // ... filter to delete one Service
     *   }
     * })
     * 
     */
    delete<T extends ServiceDeleteArgs>(args: SelectSubset<T, ServiceDeleteArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Service.
     * @param {ServiceUpdateArgs} args - Arguments to update one Service.
     * @example
     * // Update one Service
     * const service = await prisma.service.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ServiceUpdateArgs>(args: SelectSubset<T, ServiceUpdateArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Services.
     * @param {ServiceDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.service.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ServiceDeleteManyArgs>(args?: SelectSubset<T, ServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const service = await prisma.service.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ServiceUpdateManyArgs>(args: SelectSubset<T, ServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Service.
     * @param {ServiceUpsertArgs} args - Arguments to update or create a Service.
     * @example
     * // Update or create a Service
     * const service = await prisma.service.upsert({
     *   create: {
     *     // ... data to create a Service
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Service we want to update
     *   }
     * })
     */
    upsert<T extends ServiceUpsertArgs>(args: SelectSubset<T, ServiceUpsertArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.service.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends ServiceCountArgs>(
      args?: Subset<T, ServiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServiceAggregateArgs>(args: Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

    /**
     * Group by Service.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ServiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ServiceGroupByArgs['orderBy'] }
        : { orderBy?: ServiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Service model
   */
  readonly fields: ServiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Service.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ServiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kpiData<T extends Service$kpiDataArgs<ExtArgs> = {}>(args?: Subset<T, Service$kpiDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    relations<T extends Service$relationsArgs<ExtArgs> = {}>(args?: Subset<T, Service$relationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Service model
   */
  interface ServiceFieldRefs {
    readonly id: FieldRef<"Service", 'Int'>
    readonly name: FieldRef<"Service", 'String'>
    readonly description: FieldRef<"Service", 'String'>
    readonly created: FieldRef<"Service", 'DateTime'>
    readonly modified: FieldRef<"Service", 'DateTime'>
    readonly expired: FieldRef<"Service", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Service findUnique
   */
  export type ServiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findUniqueOrThrow
   */
  export type ServiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service findFirst
   */
  export type ServiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findFirstOrThrow
   */
  export type ServiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Service to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Services.
     */
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service findMany
   */
  export type ServiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter, which Services to fetch.
     */
    where?: ServiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Services to fetch.
     */
    orderBy?: ServiceOrderByWithRelationInput | ServiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Services.
     */
    cursor?: ServiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Services.
     */
    skip?: number
    distinct?: ServiceScalarFieldEnum | ServiceScalarFieldEnum[]
  }

  /**
   * Service create
   */
  export type ServiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Service.
     */
    data: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
  }

  /**
   * Service createMany
   */
  export type ServiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Services.
     */
    data: ServiceCreateManyInput | ServiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Service update
   */
  export type ServiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Service.
     */
    data: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
    /**
     * Choose, which Service to update.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service updateMany
   */
  export type ServiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Services.
     */
    data: XOR<ServiceUpdateManyMutationInput, ServiceUncheckedUpdateManyInput>
    /**
     * Filter which Services to update
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to update.
     */
    limit?: number
  }

  /**
   * Service upsert
   */
  export type ServiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Service to update in case it exists.
     */
    where: ServiceWhereUniqueInput
    /**
     * In case the Service found by the `where` argument doesn't exist, create a new Service with this data.
     */
    create: XOR<ServiceCreateInput, ServiceUncheckedCreateInput>
    /**
     * In case the Service was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ServiceUpdateInput, ServiceUncheckedUpdateInput>
  }

  /**
   * Service delete
   */
  export type ServiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
    /**
     * Filter which Service to delete.
     */
    where: ServiceWhereUniqueInput
  }

  /**
   * Service deleteMany
   */
  export type ServiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Services to delete
     */
    where?: ServiceWhereInput
    /**
     * Limit how many Services to delete.
     */
    limit?: number
  }

  /**
   * Service.kpiData
   */
  export type Service$kpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * Service.relations
   */
  export type Service$relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    where?: RelationWhereInput
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    cursor?: RelationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RelationScalarFieldEnum | RelationScalarFieldEnum[]
  }

  /**
   * Service without action
   */
  export type ServiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Service
     */
    select?: ServiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Service
     */
    omit?: ServiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ServiceInclude<ExtArgs> | null
  }


  /**
   * Model KPI_Data
   */

  export type AggregateKPI_Data = {
    _count: KPI_DataCountAggregateOutputType | null
    _avg: KPI_DataAvgAggregateOutputType | null
    _sum: KPI_DataSumAggregateOutputType | null
    _min: KPI_DataMinAggregateOutputType | null
    _max: KPI_DataMaxAggregateOutputType | null
  }

  export type KPI_DataAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    serviceId: number | null
    userId: number | null
    companyId: number | null
    systemId: number | null
    value: number | null
    approverId: number | null
  }

  export type KPI_DataSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    serviceId: number | null
    userId: number | null
    companyId: number | null
    systemId: number | null
    value: number | null
    approverId: number | null
  }

  export type KPI_DataMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    serviceId: number | null
    userId: number | null
    companyId: number | null
    systemId: number | null
    date: Date | null
    value: number | null
    approved: boolean | null
    approverId: number | null
    approvalDate: Date | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type KPI_DataMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    serviceId: number | null
    userId: number | null
    companyId: number | null
    systemId: number | null
    date: Date | null
    value: number | null
    approved: boolean | null
    approverId: number | null
    approvalDate: Date | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type KPI_DataCountAggregateOutputType = {
    id: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: number
    value: number
    approved: number
    approverId: number
    approvalDate: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type KPI_DataAvgAggregateInputType = {
    id?: true
    itemId?: true
    serviceId?: true
    userId?: true
    companyId?: true
    systemId?: true
    value?: true
    approverId?: true
  }

  export type KPI_DataSumAggregateInputType = {
    id?: true
    itemId?: true
    serviceId?: true
    userId?: true
    companyId?: true
    systemId?: true
    value?: true
    approverId?: true
  }

  export type KPI_DataMinAggregateInputType = {
    id?: true
    itemId?: true
    serviceId?: true
    userId?: true
    companyId?: true
    systemId?: true
    date?: true
    value?: true
    approved?: true
    approverId?: true
    approvalDate?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type KPI_DataMaxAggregateInputType = {
    id?: true
    itemId?: true
    serviceId?: true
    userId?: true
    companyId?: true
    systemId?: true
    date?: true
    value?: true
    approved?: true
    approverId?: true
    approvalDate?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type KPI_DataCountAggregateInputType = {
    id?: true
    itemId?: true
    serviceId?: true
    userId?: true
    companyId?: true
    systemId?: true
    date?: true
    value?: true
    approved?: true
    approverId?: true
    approvalDate?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type KPI_DataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KPI_Data to aggregate.
     */
    where?: KPI_DataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KPI_Data to fetch.
     */
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KPI_DataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KPI_Data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KPI_Data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned KPI_Data
    **/
    _count?: true | KPI_DataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KPI_DataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KPI_DataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KPI_DataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KPI_DataMaxAggregateInputType
  }

  export type GetKPI_DataAggregateType<T extends KPI_DataAggregateArgs> = {
        [P in keyof T & keyof AggregateKPI_Data]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKPI_Data[P]>
      : GetScalarType<T[P], AggregateKPI_Data[P]>
  }




  export type KPI_DataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithAggregationInput | KPI_DataOrderByWithAggregationInput[]
    by: KPI_DataScalarFieldEnum[] | KPI_DataScalarFieldEnum
    having?: KPI_DataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KPI_DataCountAggregateInputType | true
    _avg?: KPI_DataAvgAggregateInputType
    _sum?: KPI_DataSumAggregateInputType
    _min?: KPI_DataMinAggregateInputType
    _max?: KPI_DataMaxAggregateInputType
  }

  export type KPI_DataGroupByOutputType = {
    id: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date
    value: number
    approved: boolean
    approverId: number | null
    approvalDate: Date | null
    created: Date
    modified: Date
    expired: Date | null
    _count: KPI_DataCountAggregateOutputType | null
    _avg: KPI_DataAvgAggregateOutputType | null
    _sum: KPI_DataSumAggregateOutputType | null
    _min: KPI_DataMinAggregateOutputType | null
    _max: KPI_DataMaxAggregateOutputType | null
  }

  type GetKPI_DataGroupByPayload<T extends KPI_DataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KPI_DataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KPI_DataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KPI_DataGroupByOutputType[P]>
            : GetScalarType<T[P], KPI_DataGroupByOutputType[P]>
        }
      >
    >


  export type KPI_DataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    serviceId?: boolean
    userId?: boolean
    companyId?: boolean
    systemId?: boolean
    date?: boolean
    value?: boolean
    approved?: boolean
    approverId?: boolean
    approvalDate?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    item?: boolean | ItemDefaultArgs<ExtArgs>
    service?: boolean | ServiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
    approver?: boolean | KPI_Data$approverArgs<ExtArgs>
  }, ExtArgs["result"]["kPI_Data"]>



  export type KPI_DataSelectScalar = {
    id?: boolean
    itemId?: boolean
    serviceId?: boolean
    userId?: boolean
    companyId?: boolean
    systemId?: boolean
    date?: boolean
    value?: boolean
    approved?: boolean
    approverId?: boolean
    approvalDate?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type KPI_DataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "serviceId" | "userId" | "companyId" | "systemId" | "date" | "value" | "approved" | "approverId" | "approvalDate" | "created" | "modified" | "expired", ExtArgs["result"]["kPI_Data"]>
  export type KPI_DataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | ItemDefaultArgs<ExtArgs>
    service?: boolean | ServiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
    approver?: boolean | KPI_Data$approverArgs<ExtArgs>
  }

  export type $KPI_DataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "KPI_Data"
    objects: {
      item: Prisma.$ItemPayload<ExtArgs>
      service: Prisma.$ServicePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
      system: Prisma.$SystemPayload<ExtArgs>
      approver: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      serviceId: number
      userId: number
      companyId: number
      systemId: number
      date: Date
      value: number
      approved: boolean
      approverId: number | null
      approvalDate: Date | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["kPI_Data"]>
    composites: {}
  }

  type KPI_DataGetPayload<S extends boolean | null | undefined | KPI_DataDefaultArgs> = $Result.GetResult<Prisma.$KPI_DataPayload, S>

  type KPI_DataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KPI_DataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KPI_DataCountAggregateInputType | true
    }

  export interface KPI_DataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['KPI_Data'], meta: { name: 'KPI_Data' } }
    /**
     * Find zero or one KPI_Data that matches the filter.
     * @param {KPI_DataFindUniqueArgs} args - Arguments to find a KPI_Data
     * @example
     * // Get one KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KPI_DataFindUniqueArgs>(args: SelectSubset<T, KPI_DataFindUniqueArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one KPI_Data that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KPI_DataFindUniqueOrThrowArgs} args - Arguments to find a KPI_Data
     * @example
     * // Get one KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KPI_DataFindUniqueOrThrowArgs>(args: SelectSubset<T, KPI_DataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first KPI_Data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataFindFirstArgs} args - Arguments to find a KPI_Data
     * @example
     * // Get one KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KPI_DataFindFirstArgs>(args?: SelectSubset<T, KPI_DataFindFirstArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first KPI_Data that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataFindFirstOrThrowArgs} args - Arguments to find a KPI_Data
     * @example
     * // Get one KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KPI_DataFindFirstOrThrowArgs>(args?: SelectSubset<T, KPI_DataFindFirstOrThrowArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more KPI_Data that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findMany()
     * 
     * // Get first 10 KPI_Data
     * const kPI_Data = await prisma.kPI_Data.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kPI_DataWithIdOnly = await prisma.kPI_Data.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends KPI_DataFindManyArgs>(args?: SelectSubset<T, KPI_DataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a KPI_Data.
     * @param {KPI_DataCreateArgs} args - Arguments to create a KPI_Data.
     * @example
     * // Create one KPI_Data
     * const KPI_Data = await prisma.kPI_Data.create({
     *   data: {
     *     // ... data to create a KPI_Data
     *   }
     * })
     * 
     */
    create<T extends KPI_DataCreateArgs>(args: SelectSubset<T, KPI_DataCreateArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many KPI_Data.
     * @param {KPI_DataCreateManyArgs} args - Arguments to create many KPI_Data.
     * @example
     * // Create many KPI_Data
     * const kPI_Data = await prisma.kPI_Data.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KPI_DataCreateManyArgs>(args?: SelectSubset<T, KPI_DataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a KPI_Data.
     * @param {KPI_DataDeleteArgs} args - Arguments to delete one KPI_Data.
     * @example
     * // Delete one KPI_Data
     * const KPI_Data = await prisma.kPI_Data.delete({
     *   where: {
     *     // ... filter to delete one KPI_Data
     *   }
     * })
     * 
     */
    delete<T extends KPI_DataDeleteArgs>(args: SelectSubset<T, KPI_DataDeleteArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one KPI_Data.
     * @param {KPI_DataUpdateArgs} args - Arguments to update one KPI_Data.
     * @example
     * // Update one KPI_Data
     * const kPI_Data = await prisma.kPI_Data.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KPI_DataUpdateArgs>(args: SelectSubset<T, KPI_DataUpdateArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more KPI_Data.
     * @param {KPI_DataDeleteManyArgs} args - Arguments to filter KPI_Data to delete.
     * @example
     * // Delete a few KPI_Data
     * const { count } = await prisma.kPI_Data.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KPI_DataDeleteManyArgs>(args?: SelectSubset<T, KPI_DataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more KPI_Data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many KPI_Data
     * const kPI_Data = await prisma.kPI_Data.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KPI_DataUpdateManyArgs>(args: SelectSubset<T, KPI_DataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one KPI_Data.
     * @param {KPI_DataUpsertArgs} args - Arguments to update or create a KPI_Data.
     * @example
     * // Update or create a KPI_Data
     * const kPI_Data = await prisma.kPI_Data.upsert({
     *   create: {
     *     // ... data to create a KPI_Data
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the KPI_Data we want to update
     *   }
     * })
     */
    upsert<T extends KPI_DataUpsertArgs>(args: SelectSubset<T, KPI_DataUpsertArgs<ExtArgs>>): Prisma__KPI_DataClient<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of KPI_Data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataCountArgs} args - Arguments to filter KPI_Data to count.
     * @example
     * // Count the number of KPI_Data
     * const count = await prisma.kPI_Data.count({
     *   where: {
     *     // ... the filter for the KPI_Data we want to count
     *   }
     * })
    **/
    count<T extends KPI_DataCountArgs>(
      args?: Subset<T, KPI_DataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KPI_DataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a KPI_Data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KPI_DataAggregateArgs>(args: Subset<T, KPI_DataAggregateArgs>): Prisma.PrismaPromise<GetKPI_DataAggregateType<T>>

    /**
     * Group by KPI_Data.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KPI_DataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KPI_DataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KPI_DataGroupByArgs['orderBy'] }
        : { orderBy?: KPI_DataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KPI_DataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKPI_DataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the KPI_Data model
   */
  readonly fields: KPI_DataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for KPI_Data.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KPI_DataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    system<T extends SystemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SystemDefaultArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    approver<T extends KPI_Data$approverArgs<ExtArgs> = {}>(args?: Subset<T, KPI_Data$approverArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the KPI_Data model
   */
  interface KPI_DataFieldRefs {
    readonly id: FieldRef<"KPI_Data", 'Int'>
    readonly itemId: FieldRef<"KPI_Data", 'Int'>
    readonly serviceId: FieldRef<"KPI_Data", 'Int'>
    readonly userId: FieldRef<"KPI_Data", 'Int'>
    readonly companyId: FieldRef<"KPI_Data", 'Int'>
    readonly systemId: FieldRef<"KPI_Data", 'Int'>
    readonly date: FieldRef<"KPI_Data", 'DateTime'>
    readonly value: FieldRef<"KPI_Data", 'Float'>
    readonly approved: FieldRef<"KPI_Data", 'Boolean'>
    readonly approverId: FieldRef<"KPI_Data", 'Int'>
    readonly approvalDate: FieldRef<"KPI_Data", 'DateTime'>
    readonly created: FieldRef<"KPI_Data", 'DateTime'>
    readonly modified: FieldRef<"KPI_Data", 'DateTime'>
    readonly expired: FieldRef<"KPI_Data", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * KPI_Data findUnique
   */
  export type KPI_DataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter, which KPI_Data to fetch.
     */
    where: KPI_DataWhereUniqueInput
  }

  /**
   * KPI_Data findUniqueOrThrow
   */
  export type KPI_DataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter, which KPI_Data to fetch.
     */
    where: KPI_DataWhereUniqueInput
  }

  /**
   * KPI_Data findFirst
   */
  export type KPI_DataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter, which KPI_Data to fetch.
     */
    where?: KPI_DataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KPI_Data to fetch.
     */
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KPI_Data.
     */
    cursor?: KPI_DataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KPI_Data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KPI_Data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KPI_Data.
     */
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * KPI_Data findFirstOrThrow
   */
  export type KPI_DataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter, which KPI_Data to fetch.
     */
    where?: KPI_DataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KPI_Data to fetch.
     */
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KPI_Data.
     */
    cursor?: KPI_DataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KPI_Data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KPI_Data.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KPI_Data.
     */
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * KPI_Data findMany
   */
  export type KPI_DataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter, which KPI_Data to fetch.
     */
    where?: KPI_DataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KPI_Data to fetch.
     */
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing KPI_Data.
     */
    cursor?: KPI_DataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KPI_Data from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KPI_Data.
     */
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * KPI_Data create
   */
  export type KPI_DataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * The data needed to create a KPI_Data.
     */
    data: XOR<KPI_DataCreateInput, KPI_DataUncheckedCreateInput>
  }

  /**
   * KPI_Data createMany
   */
  export type KPI_DataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many KPI_Data.
     */
    data: KPI_DataCreateManyInput | KPI_DataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * KPI_Data update
   */
  export type KPI_DataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * The data needed to update a KPI_Data.
     */
    data: XOR<KPI_DataUpdateInput, KPI_DataUncheckedUpdateInput>
    /**
     * Choose, which KPI_Data to update.
     */
    where: KPI_DataWhereUniqueInput
  }

  /**
   * KPI_Data updateMany
   */
  export type KPI_DataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update KPI_Data.
     */
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyInput>
    /**
     * Filter which KPI_Data to update
     */
    where?: KPI_DataWhereInput
    /**
     * Limit how many KPI_Data to update.
     */
    limit?: number
  }

  /**
   * KPI_Data upsert
   */
  export type KPI_DataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * The filter to search for the KPI_Data to update in case it exists.
     */
    where: KPI_DataWhereUniqueInput
    /**
     * In case the KPI_Data found by the `where` argument doesn't exist, create a new KPI_Data with this data.
     */
    create: XOR<KPI_DataCreateInput, KPI_DataUncheckedCreateInput>
    /**
     * In case the KPI_Data was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KPI_DataUpdateInput, KPI_DataUncheckedUpdateInput>
  }

  /**
   * KPI_Data delete
   */
  export type KPI_DataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    /**
     * Filter which KPI_Data to delete.
     */
    where: KPI_DataWhereUniqueInput
  }

  /**
   * KPI_Data deleteMany
   */
  export type KPI_DataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KPI_Data to delete
     */
    where?: KPI_DataWhereInput
    /**
     * Limit how many KPI_Data to delete.
     */
    limit?: number
  }

  /**
   * KPI_Data.approver
   */
  export type KPI_Data$approverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * KPI_Data without action
   */
  export type KPI_DataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
  }


  /**
   * Model Item
   */

  export type AggregateItem = {
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  export type ItemAvgAggregateOutputType = {
    id: number | null
  }

  export type ItemSumAggregateOutputType = {
    id: number | null
  }

  export type ItemMinAggregateOutputType = {
    id: number | null
    code: string | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type ItemMaxAggregateOutputType = {
    id: number | null
    code: string | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type ItemCountAggregateOutputType = {
    id: number
    code: number
    name: number
    description: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type ItemAvgAggregateInputType = {
    id?: true
  }

  export type ItemSumAggregateInputType = {
    id?: true
  }

  export type ItemMinAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type ItemMaxAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type ItemCountAggregateInputType = {
    id?: true
    code?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type ItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Item to aggregate.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Items
    **/
    _count?: true | ItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemMaxAggregateInputType
  }

  export type GetItemAggregateType<T extends ItemAggregateArgs> = {
        [P in keyof T & keyof AggregateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItem[P]>
      : GetScalarType<T[P], AggregateItem[P]>
  }




  export type ItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithAggregationInput | ItemOrderByWithAggregationInput[]
    by: ItemScalarFieldEnum[] | ItemScalarFieldEnum
    having?: ItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemCountAggregateInputType | true
    _avg?: ItemAvgAggregateInputType
    _sum?: ItemSumAggregateInputType
    _min?: ItemMinAggregateInputType
    _max?: ItemMaxAggregateInputType
  }

  export type ItemGroupByOutputType = {
    id: number
    code: string
    name: string
    description: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  type GetItemGroupByPayload<T extends ItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemGroupByOutputType[P]>
            : GetScalarType<T[P], ItemGroupByOutputType[P]>
        }
      >
    >


  export type ItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    kpiData?: boolean | Item$kpiDataArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>



  export type ItemSelectScalar = {
    id?: boolean
    code?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type ItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "name" | "description" | "created" | "modified" | "expired", ExtArgs["result"]["item"]>
  export type ItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | Item$kpiDataArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Item"
    objects: {
      kpiData: Prisma.$KPI_DataPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      code: string
      name: string
      description: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["item"]>
    composites: {}
  }

  type ItemGetPayload<S extends boolean | null | undefined | ItemDefaultArgs> = $Result.GetResult<Prisma.$ItemPayload, S>

  type ItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemCountAggregateInputType | true
    }

  export interface ItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Item'], meta: { name: 'Item' } }
    /**
     * Find zero or one Item that matches the filter.
     * @param {ItemFindUniqueArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItemFindUniqueArgs>(args: SelectSubset<T, ItemFindUniqueArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItemFindUniqueOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItemFindFirstArgs>(args?: SelectSubset<T, ItemFindFirstArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.item.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.item.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemWithIdOnly = await prisma.item.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ItemFindManyArgs>(args?: SelectSubset<T, ItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Item.
     * @param {ItemCreateArgs} args - Arguments to create a Item.
     * @example
     * // Create one Item
     * const Item = await prisma.item.create({
     *   data: {
     *     // ... data to create a Item
     *   }
     * })
     * 
     */
    create<T extends ItemCreateArgs>(args: SelectSubset<T, ItemCreateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Items.
     * @param {ItemCreateManyArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItemCreateManyArgs>(args?: SelectSubset<T, ItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Item.
     * @param {ItemDeleteArgs} args - Arguments to delete one Item.
     * @example
     * // Delete one Item
     * const Item = await prisma.item.delete({
     *   where: {
     *     // ... filter to delete one Item
     *   }
     * })
     * 
     */
    delete<T extends ItemDeleteArgs>(args: SelectSubset<T, ItemDeleteArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Item.
     * @param {ItemUpdateArgs} args - Arguments to update one Item.
     * @example
     * // Update one Item
     * const item = await prisma.item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItemUpdateArgs>(args: SelectSubset<T, ItemUpdateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Items.
     * @param {ItemDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItemDeleteManyArgs>(args?: SelectSubset<T, ItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItemUpdateManyArgs>(args: SelectSubset<T, ItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Item.
     * @param {ItemUpsertArgs} args - Arguments to update or create a Item.
     * @example
     * // Update or create a Item
     * const item = await prisma.item.upsert({
     *   create: {
     *     // ... data to create a Item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Item we want to update
     *   }
     * })
     */
    upsert<T extends ItemUpsertArgs>(args: SelectSubset<T, ItemUpsertArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.item.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends ItemCountArgs>(
      args?: Subset<T, ItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemAggregateArgs>(args: Subset<T, ItemAggregateArgs>): Prisma.PrismaPromise<GetItemAggregateType<T>>

    /**
     * Group by Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemGroupByArgs['orderBy'] }
        : { orderBy?: ItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Item model
   */
  readonly fields: ItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kpiData<T extends Item$kpiDataArgs<ExtArgs> = {}>(args?: Subset<T, Item$kpiDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Item model
   */
  interface ItemFieldRefs {
    readonly id: FieldRef<"Item", 'Int'>
    readonly code: FieldRef<"Item", 'String'>
    readonly name: FieldRef<"Item", 'String'>
    readonly description: FieldRef<"Item", 'String'>
    readonly created: FieldRef<"Item", 'DateTime'>
    readonly modified: FieldRef<"Item", 'DateTime'>
    readonly expired: FieldRef<"Item", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Item findUnique
   */
  export type ItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findUniqueOrThrow
   */
  export type ItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findFirst
   */
  export type ItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findFirstOrThrow
   */
  export type ItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findMany
   */
  export type ItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item create
   */
  export type ItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to create a Item.
     */
    data: XOR<ItemCreateInput, ItemUncheckedCreateInput>
  }

  /**
   * Item createMany
   */
  export type ItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Items.
     */
    data: ItemCreateManyInput | ItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Item update
   */
  export type ItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to update a Item.
     */
    data: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
    /**
     * Choose, which Item to update.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item updateMany
   */
  export type ItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Items.
     */
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyInput>
    /**
     * Filter which Items to update
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to update.
     */
    limit?: number
  }

  /**
   * Item upsert
   */
  export type ItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The filter to search for the Item to update in case it exists.
     */
    where: ItemWhereUniqueInput
    /**
     * In case the Item found by the `where` argument doesn't exist, create a new Item with this data.
     */
    create: XOR<ItemCreateInput, ItemUncheckedCreateInput>
    /**
     * In case the Item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
  }

  /**
   * Item delete
   */
  export type ItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter which Item to delete.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item deleteMany
   */
  export type ItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Items to delete
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to delete.
     */
    limit?: number
  }

  /**
   * Item.kpiData
   */
  export type Item$kpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * Item without action
   */
  export type ItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    id: number | null
  }

  export type CompanySumAggregateOutputType = {
    id: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    id?: true
  }

  export type CompanySumAggregateInputType = {
    id?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    kpiData?: boolean | Company$kpiDataArgs<ExtArgs>
    systems?: boolean | Company$systemsArgs<ExtArgs>
    incidents?: boolean | Company$incidentsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>



  export type CompanySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type CompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "created" | "modified" | "expired", ExtArgs["result"]["company"]>
  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | Company$kpiDataArgs<ExtArgs>
    systems?: boolean | Company$systemsArgs<ExtArgs>
    incidents?: boolean | Company$incidentsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      kpiData: Prisma.$KPI_DataPayload<ExtArgs>[]
      systems: Prisma.$SystemPayload<ExtArgs>[]
      incidents: Prisma.$IncidentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kpiData<T extends Company$kpiDataArgs<ExtArgs> = {}>(args?: Subset<T, Company$kpiDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    systems<T extends Company$systemsArgs<ExtArgs> = {}>(args?: Subset<T, Company$systemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidents<T extends Company$incidentsArgs<ExtArgs> = {}>(args?: Subset<T, Company$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'Int'>
    readonly name: FieldRef<"Company", 'String'>
    readonly description: FieldRef<"Company", 'String'>
    readonly created: FieldRef<"Company", 'DateTime'>
    readonly modified: FieldRef<"Company", 'DateTime'>
    readonly expired: FieldRef<"Company", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to update.
     */
    limit?: number
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to delete.
     */
    limit?: number
  }

  /**
   * Company.kpiData
   */
  export type Company$kpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * Company.systems
   */
  export type Company$systemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    cursor?: SystemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * Company.incidents
   */
  export type Company$incidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    cursor?: IncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model System
   */

  export type AggregateSystem = {
    _count: SystemCountAggregateOutputType | null
    _avg: SystemAvgAggregateOutputType | null
    _sum: SystemSumAggregateOutputType | null
    _min: SystemMinAggregateOutputType | null
    _max: SystemMaxAggregateOutputType | null
  }

  export type SystemAvgAggregateOutputType = {
    id: number | null
    analystId: number | null
    applicationOperatorId: number | null
    platformOperatorId: number | null
    infrastructureOperatorId: number | null
    companyId: number | null
  }

  export type SystemSumAggregateOutputType = {
    id: number | null
    analystId: number | null
    applicationOperatorId: number | null
    platformOperatorId: number | null
    infrastructureOperatorId: number | null
    companyId: number | null
  }

  export type SystemMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    criticality: string | null
    availability: string | null
    recoverability: string | null
    maintainability: string | null
    integrity: string | null
    confidentiality: string | null
    analystId: number | null
    applicationOperatorId: number | null
    platformOperatorId: number | null
    infrastructureOperatorId: number | null
    companyId: number | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type SystemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    criticality: string | null
    availability: string | null
    recoverability: string | null
    maintainability: string | null
    integrity: string | null
    confidentiality: string | null
    analystId: number | null
    applicationOperatorId: number | null
    platformOperatorId: number | null
    infrastructureOperatorId: number | null
    companyId: number | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type SystemCountAggregateOutputType = {
    id: number
    name: number
    description: number
    criticality: number
    availability: number
    recoverability: number
    maintainability: number
    integrity: number
    confidentiality: number
    analystId: number
    applicationOperatorId: number
    platformOperatorId: number
    infrastructureOperatorId: number
    companyId: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type SystemAvgAggregateInputType = {
    id?: true
    analystId?: true
    applicationOperatorId?: true
    platformOperatorId?: true
    infrastructureOperatorId?: true
    companyId?: true
  }

  export type SystemSumAggregateInputType = {
    id?: true
    analystId?: true
    applicationOperatorId?: true
    platformOperatorId?: true
    infrastructureOperatorId?: true
    companyId?: true
  }

  export type SystemMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    criticality?: true
    availability?: true
    recoverability?: true
    maintainability?: true
    integrity?: true
    confidentiality?: true
    analystId?: true
    applicationOperatorId?: true
    platformOperatorId?: true
    infrastructureOperatorId?: true
    companyId?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type SystemMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    criticality?: true
    availability?: true
    recoverability?: true
    maintainability?: true
    integrity?: true
    confidentiality?: true
    analystId?: true
    applicationOperatorId?: true
    platformOperatorId?: true
    infrastructureOperatorId?: true
    companyId?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type SystemCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    criticality?: true
    availability?: true
    recoverability?: true
    maintainability?: true
    integrity?: true
    confidentiality?: true
    analystId?: true
    applicationOperatorId?: true
    platformOperatorId?: true
    infrastructureOperatorId?: true
    companyId?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type SystemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which System to aggregate.
     */
    where?: SystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Systems to fetch.
     */
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Systems
    **/
    _count?: true | SystemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SystemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SystemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SystemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SystemMaxAggregateInputType
  }

  export type GetSystemAggregateType<T extends SystemAggregateArgs> = {
        [P in keyof T & keyof AggregateSystem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSystem[P]>
      : GetScalarType<T[P], AggregateSystem[P]>
  }




  export type SystemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SystemWhereInput
    orderBy?: SystemOrderByWithAggregationInput | SystemOrderByWithAggregationInput[]
    by: SystemScalarFieldEnum[] | SystemScalarFieldEnum
    having?: SystemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SystemCountAggregateInputType | true
    _avg?: SystemAvgAggregateInputType
    _sum?: SystemSumAggregateInputType
    _min?: SystemMinAggregateInputType
    _max?: SystemMaxAggregateInputType
  }

  export type SystemGroupByOutputType = {
    id: number
    name: string
    description: string | null
    criticality: string | null
    availability: string | null
    recoverability: string | null
    maintainability: string | null
    integrity: string | null
    confidentiality: string | null
    analystId: number | null
    applicationOperatorId: number | null
    platformOperatorId: number | null
    infrastructureOperatorId: number | null
    companyId: number
    created: Date
    modified: Date
    expired: Date | null
    _count: SystemCountAggregateOutputType | null
    _avg: SystemAvgAggregateOutputType | null
    _sum: SystemSumAggregateOutputType | null
    _min: SystemMinAggregateOutputType | null
    _max: SystemMaxAggregateOutputType | null
  }

  type GetSystemGroupByPayload<T extends SystemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SystemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SystemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SystemGroupByOutputType[P]>
            : GetScalarType<T[P], SystemGroupByOutputType[P]>
        }
      >
    >


  export type SystemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    criticality?: boolean
    availability?: boolean
    recoverability?: boolean
    maintainability?: boolean
    integrity?: boolean
    confidentiality?: boolean
    analystId?: boolean
    applicationOperatorId?: boolean
    platformOperatorId?: boolean
    infrastructureOperatorId?: boolean
    companyId?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    kpiData?: boolean | System$kpiDataArgs<ExtArgs>
    incidents?: boolean | System$incidentsArgs<ExtArgs>
    relations?: boolean | System$relationsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    analyst?: boolean | System$analystArgs<ExtArgs>
    applicationOperator?: boolean | System$applicationOperatorArgs<ExtArgs>
    platformOperator?: boolean | System$platformOperatorArgs<ExtArgs>
    infrastructureOperator?: boolean | System$infrastructureOperatorArgs<ExtArgs>
    _count?: boolean | SystemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["system"]>



  export type SystemSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    criticality?: boolean
    availability?: boolean
    recoverability?: boolean
    maintainability?: boolean
    integrity?: boolean
    confidentiality?: boolean
    analystId?: boolean
    applicationOperatorId?: boolean
    platformOperatorId?: boolean
    infrastructureOperatorId?: boolean
    companyId?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type SystemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "criticality" | "availability" | "recoverability" | "maintainability" | "integrity" | "confidentiality" | "analystId" | "applicationOperatorId" | "platformOperatorId" | "infrastructureOperatorId" | "companyId" | "created" | "modified" | "expired", ExtArgs["result"]["system"]>
  export type SystemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kpiData?: boolean | System$kpiDataArgs<ExtArgs>
    incidents?: boolean | System$incidentsArgs<ExtArgs>
    relations?: boolean | System$relationsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    analyst?: boolean | System$analystArgs<ExtArgs>
    applicationOperator?: boolean | System$applicationOperatorArgs<ExtArgs>
    platformOperator?: boolean | System$platformOperatorArgs<ExtArgs>
    infrastructureOperator?: boolean | System$infrastructureOperatorArgs<ExtArgs>
    _count?: boolean | SystemCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SystemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "System"
    objects: {
      kpiData: Prisma.$KPI_DataPayload<ExtArgs>[]
      incidents: Prisma.$IncidentPayload<ExtArgs>[]
      relations: Prisma.$RelationPayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs>
      analyst: Prisma.$UserPayload<ExtArgs> | null
      applicationOperator: Prisma.$UserPayload<ExtArgs> | null
      platformOperator: Prisma.$UserPayload<ExtArgs> | null
      infrastructureOperator: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      criticality: string | null
      availability: string | null
      recoverability: string | null
      maintainability: string | null
      integrity: string | null
      confidentiality: string | null
      analystId: number | null
      applicationOperatorId: number | null
      platformOperatorId: number | null
      infrastructureOperatorId: number | null
      companyId: number
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["system"]>
    composites: {}
  }

  type SystemGetPayload<S extends boolean | null | undefined | SystemDefaultArgs> = $Result.GetResult<Prisma.$SystemPayload, S>

  type SystemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SystemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SystemCountAggregateInputType | true
    }

  export interface SystemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['System'], meta: { name: 'System' } }
    /**
     * Find zero or one System that matches the filter.
     * @param {SystemFindUniqueArgs} args - Arguments to find a System
     * @example
     * // Get one System
     * const system = await prisma.system.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SystemFindUniqueArgs>(args: SelectSubset<T, SystemFindUniqueArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one System that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SystemFindUniqueOrThrowArgs} args - Arguments to find a System
     * @example
     * // Get one System
     * const system = await prisma.system.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SystemFindUniqueOrThrowArgs>(args: SelectSubset<T, SystemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first System that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemFindFirstArgs} args - Arguments to find a System
     * @example
     * // Get one System
     * const system = await prisma.system.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SystemFindFirstArgs>(args?: SelectSubset<T, SystemFindFirstArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first System that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemFindFirstOrThrowArgs} args - Arguments to find a System
     * @example
     * // Get one System
     * const system = await prisma.system.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SystemFindFirstOrThrowArgs>(args?: SelectSubset<T, SystemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Systems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Systems
     * const systems = await prisma.system.findMany()
     * 
     * // Get first 10 Systems
     * const systems = await prisma.system.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const systemWithIdOnly = await prisma.system.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SystemFindManyArgs>(args?: SelectSubset<T, SystemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a System.
     * @param {SystemCreateArgs} args - Arguments to create a System.
     * @example
     * // Create one System
     * const System = await prisma.system.create({
     *   data: {
     *     // ... data to create a System
     *   }
     * })
     * 
     */
    create<T extends SystemCreateArgs>(args: SelectSubset<T, SystemCreateArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Systems.
     * @param {SystemCreateManyArgs} args - Arguments to create many Systems.
     * @example
     * // Create many Systems
     * const system = await prisma.system.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SystemCreateManyArgs>(args?: SelectSubset<T, SystemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a System.
     * @param {SystemDeleteArgs} args - Arguments to delete one System.
     * @example
     * // Delete one System
     * const System = await prisma.system.delete({
     *   where: {
     *     // ... filter to delete one System
     *   }
     * })
     * 
     */
    delete<T extends SystemDeleteArgs>(args: SelectSubset<T, SystemDeleteArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one System.
     * @param {SystemUpdateArgs} args - Arguments to update one System.
     * @example
     * // Update one System
     * const system = await prisma.system.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SystemUpdateArgs>(args: SelectSubset<T, SystemUpdateArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Systems.
     * @param {SystemDeleteManyArgs} args - Arguments to filter Systems to delete.
     * @example
     * // Delete a few Systems
     * const { count } = await prisma.system.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SystemDeleteManyArgs>(args?: SelectSubset<T, SystemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Systems
     * const system = await prisma.system.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SystemUpdateManyArgs>(args: SelectSubset<T, SystemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one System.
     * @param {SystemUpsertArgs} args - Arguments to update or create a System.
     * @example
     * // Update or create a System
     * const system = await prisma.system.upsert({
     *   create: {
     *     // ... data to create a System
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the System we want to update
     *   }
     * })
     */
    upsert<T extends SystemUpsertArgs>(args: SelectSubset<T, SystemUpsertArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Systems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemCountArgs} args - Arguments to filter Systems to count.
     * @example
     * // Count the number of Systems
     * const count = await prisma.system.count({
     *   where: {
     *     // ... the filter for the Systems we want to count
     *   }
     * })
    **/
    count<T extends SystemCountArgs>(
      args?: Subset<T, SystemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SystemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a System.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SystemAggregateArgs>(args: Subset<T, SystemAggregateArgs>): Prisma.PrismaPromise<GetSystemAggregateType<T>>

    /**
     * Group by System.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SystemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SystemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SystemGroupByArgs['orderBy'] }
        : { orderBy?: SystemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SystemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSystemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the System model
   */
  readonly fields: SystemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for System.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SystemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kpiData<T extends System$kpiDataArgs<ExtArgs> = {}>(args?: Subset<T, System$kpiDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KPI_DataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incidents<T extends System$incidentsArgs<ExtArgs> = {}>(args?: Subset<T, System$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    relations<T extends System$relationsArgs<ExtArgs> = {}>(args?: Subset<T, System$relationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    analyst<T extends System$analystArgs<ExtArgs> = {}>(args?: Subset<T, System$analystArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    applicationOperator<T extends System$applicationOperatorArgs<ExtArgs> = {}>(args?: Subset<T, System$applicationOperatorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    platformOperator<T extends System$platformOperatorArgs<ExtArgs> = {}>(args?: Subset<T, System$platformOperatorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    infrastructureOperator<T extends System$infrastructureOperatorArgs<ExtArgs> = {}>(args?: Subset<T, System$infrastructureOperatorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the System model
   */
  interface SystemFieldRefs {
    readonly id: FieldRef<"System", 'Int'>
    readonly name: FieldRef<"System", 'String'>
    readonly description: FieldRef<"System", 'String'>
    readonly criticality: FieldRef<"System", 'String'>
    readonly availability: FieldRef<"System", 'String'>
    readonly recoverability: FieldRef<"System", 'String'>
    readonly maintainability: FieldRef<"System", 'String'>
    readonly integrity: FieldRef<"System", 'String'>
    readonly confidentiality: FieldRef<"System", 'String'>
    readonly analystId: FieldRef<"System", 'Int'>
    readonly applicationOperatorId: FieldRef<"System", 'Int'>
    readonly platformOperatorId: FieldRef<"System", 'Int'>
    readonly infrastructureOperatorId: FieldRef<"System", 'Int'>
    readonly companyId: FieldRef<"System", 'Int'>
    readonly created: FieldRef<"System", 'DateTime'>
    readonly modified: FieldRef<"System", 'DateTime'>
    readonly expired: FieldRef<"System", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * System findUnique
   */
  export type SystemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter, which System to fetch.
     */
    where: SystemWhereUniqueInput
  }

  /**
   * System findUniqueOrThrow
   */
  export type SystemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter, which System to fetch.
     */
    where: SystemWhereUniqueInput
  }

  /**
   * System findFirst
   */
  export type SystemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter, which System to fetch.
     */
    where?: SystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Systems to fetch.
     */
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Systems.
     */
    cursor?: SystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Systems.
     */
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * System findFirstOrThrow
   */
  export type SystemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter, which System to fetch.
     */
    where?: SystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Systems to fetch.
     */
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Systems.
     */
    cursor?: SystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Systems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Systems.
     */
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * System findMany
   */
  export type SystemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter, which Systems to fetch.
     */
    where?: SystemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Systems to fetch.
     */
    orderBy?: SystemOrderByWithRelationInput | SystemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Systems.
     */
    cursor?: SystemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Systems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Systems.
     */
    skip?: number
    distinct?: SystemScalarFieldEnum | SystemScalarFieldEnum[]
  }

  /**
   * System create
   */
  export type SystemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * The data needed to create a System.
     */
    data: XOR<SystemCreateInput, SystemUncheckedCreateInput>
  }

  /**
   * System createMany
   */
  export type SystemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Systems.
     */
    data: SystemCreateManyInput | SystemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * System update
   */
  export type SystemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * The data needed to update a System.
     */
    data: XOR<SystemUpdateInput, SystemUncheckedUpdateInput>
    /**
     * Choose, which System to update.
     */
    where: SystemWhereUniqueInput
  }

  /**
   * System updateMany
   */
  export type SystemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Systems.
     */
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyInput>
    /**
     * Filter which Systems to update
     */
    where?: SystemWhereInput
    /**
     * Limit how many Systems to update.
     */
    limit?: number
  }

  /**
   * System upsert
   */
  export type SystemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * The filter to search for the System to update in case it exists.
     */
    where: SystemWhereUniqueInput
    /**
     * In case the System found by the `where` argument doesn't exist, create a new System with this data.
     */
    create: XOR<SystemCreateInput, SystemUncheckedCreateInput>
    /**
     * In case the System was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SystemUpdateInput, SystemUncheckedUpdateInput>
  }

  /**
   * System delete
   */
  export type SystemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
    /**
     * Filter which System to delete.
     */
    where: SystemWhereUniqueInput
  }

  /**
   * System deleteMany
   */
  export type SystemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Systems to delete
     */
    where?: SystemWhereInput
    /**
     * Limit how many Systems to delete.
     */
    limit?: number
  }

  /**
   * System.kpiData
   */
  export type System$kpiDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KPI_Data
     */
    select?: KPI_DataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the KPI_Data
     */
    omit?: KPI_DataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KPI_DataInclude<ExtArgs> | null
    where?: KPI_DataWhereInput
    orderBy?: KPI_DataOrderByWithRelationInput | KPI_DataOrderByWithRelationInput[]
    cursor?: KPI_DataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KPI_DataScalarFieldEnum | KPI_DataScalarFieldEnum[]
  }

  /**
   * System.incidents
   */
  export type System$incidentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    cursor?: IncidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * System.relations
   */
  export type System$relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    where?: RelationWhereInput
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    cursor?: RelationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RelationScalarFieldEnum | RelationScalarFieldEnum[]
  }

  /**
   * System.analyst
   */
  export type System$analystArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * System.applicationOperator
   */
  export type System$applicationOperatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * System.platformOperator
   */
  export type System$platformOperatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * System.infrastructureOperator
   */
  export type System$infrastructureOperatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * System without action
   */
  export type SystemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the System
     */
    select?: SystemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the System
     */
    omit?: SystemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SystemInclude<ExtArgs> | null
  }


  /**
   * Model Relation
   */

  export type AggregateRelation = {
    _count: RelationCountAggregateOutputType | null
    _avg: RelationAvgAggregateOutputType | null
    _sum: RelationSumAggregateOutputType | null
    _min: RelationMinAggregateOutputType | null
    _max: RelationMaxAggregateOutputType | null
  }

  export type RelationAvgAggregateOutputType = {
    id: number | null
    serviceId: number | null
    systemId: number | null
  }

  export type RelationSumAggregateOutputType = {
    id: number | null
    serviceId: number | null
    systemId: number | null
  }

  export type RelationMinAggregateOutputType = {
    id: number | null
    serviceId: number | null
    systemId: number | null
    validFrom: Date | null
    validTo: Date | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RelationMaxAggregateOutputType = {
    id: number | null
    serviceId: number | null
    systemId: number | null
    validFrom: Date | null
    validTo: Date | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type RelationCountAggregateOutputType = {
    id: number
    serviceId: number
    systemId: number
    validFrom: number
    validTo: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type RelationAvgAggregateInputType = {
    id?: true
    serviceId?: true
    systemId?: true
  }

  export type RelationSumAggregateInputType = {
    id?: true
    serviceId?: true
    systemId?: true
  }

  export type RelationMinAggregateInputType = {
    id?: true
    serviceId?: true
    systemId?: true
    validFrom?: true
    validTo?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RelationMaxAggregateInputType = {
    id?: true
    serviceId?: true
    systemId?: true
    validFrom?: true
    validTo?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type RelationCountAggregateInputType = {
    id?: true
    serviceId?: true
    systemId?: true
    validFrom?: true
    validTo?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type RelationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Relation to aggregate.
     */
    where?: RelationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Relations to fetch.
     */
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RelationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Relations
    **/
    _count?: true | RelationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RelationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RelationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RelationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RelationMaxAggregateInputType
  }

  export type GetRelationAggregateType<T extends RelationAggregateArgs> = {
        [P in keyof T & keyof AggregateRelation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRelation[P]>
      : GetScalarType<T[P], AggregateRelation[P]>
  }




  export type RelationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RelationWhereInput
    orderBy?: RelationOrderByWithAggregationInput | RelationOrderByWithAggregationInput[]
    by: RelationScalarFieldEnum[] | RelationScalarFieldEnum
    having?: RelationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RelationCountAggregateInputType | true
    _avg?: RelationAvgAggregateInputType
    _sum?: RelationSumAggregateInputType
    _min?: RelationMinAggregateInputType
    _max?: RelationMaxAggregateInputType
  }

  export type RelationGroupByOutputType = {
    id: number
    serviceId: number
    systemId: number
    validFrom: Date
    validTo: Date | null
    created: Date
    modified: Date
    expired: Date | null
    _count: RelationCountAggregateOutputType | null
    _avg: RelationAvgAggregateOutputType | null
    _sum: RelationSumAggregateOutputType | null
    _min: RelationMinAggregateOutputType | null
    _max: RelationMaxAggregateOutputType | null
  }

  type GetRelationGroupByPayload<T extends RelationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RelationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RelationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RelationGroupByOutputType[P]>
            : GetScalarType<T[P], RelationGroupByOutputType[P]>
        }
      >
    >


  export type RelationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    serviceId?: boolean
    systemId?: boolean
    validFrom?: boolean
    validTo?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    service?: boolean | ServiceDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["relation"]>



  export type RelationSelectScalar = {
    id?: boolean
    serviceId?: boolean
    systemId?: boolean
    validFrom?: boolean
    validTo?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type RelationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "serviceId" | "systemId" | "validFrom" | "validTo" | "created" | "modified" | "expired", ExtArgs["result"]["relation"]>
  export type RelationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    service?: boolean | ServiceDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
  }

  export type $RelationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Relation"
    objects: {
      service: Prisma.$ServicePayload<ExtArgs>
      system: Prisma.$SystemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      serviceId: number
      systemId: number
      validFrom: Date
      validTo: Date | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["relation"]>
    composites: {}
  }

  type RelationGetPayload<S extends boolean | null | undefined | RelationDefaultArgs> = $Result.GetResult<Prisma.$RelationPayload, S>

  type RelationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RelationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RelationCountAggregateInputType | true
    }

  export interface RelationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Relation'], meta: { name: 'Relation' } }
    /**
     * Find zero or one Relation that matches the filter.
     * @param {RelationFindUniqueArgs} args - Arguments to find a Relation
     * @example
     * // Get one Relation
     * const relation = await prisma.relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RelationFindUniqueArgs>(args: SelectSubset<T, RelationFindUniqueArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RelationFindUniqueOrThrowArgs} args - Arguments to find a Relation
     * @example
     * // Get one Relation
     * const relation = await prisma.relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RelationFindUniqueOrThrowArgs>(args: SelectSubset<T, RelationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationFindFirstArgs} args - Arguments to find a Relation
     * @example
     * // Get one Relation
     * const relation = await prisma.relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RelationFindFirstArgs>(args?: SelectSubset<T, RelationFindFirstArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationFindFirstOrThrowArgs} args - Arguments to find a Relation
     * @example
     * // Get one Relation
     * const relation = await prisma.relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RelationFindFirstOrThrowArgs>(args?: SelectSubset<T, RelationFindFirstOrThrowArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Relations
     * const relations = await prisma.relation.findMany()
     * 
     * // Get first 10 Relations
     * const relations = await prisma.relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const relationWithIdOnly = await prisma.relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RelationFindManyArgs>(args?: SelectSubset<T, RelationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Relation.
     * @param {RelationCreateArgs} args - Arguments to create a Relation.
     * @example
     * // Create one Relation
     * const Relation = await prisma.relation.create({
     *   data: {
     *     // ... data to create a Relation
     *   }
     * })
     * 
     */
    create<T extends RelationCreateArgs>(args: SelectSubset<T, RelationCreateArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Relations.
     * @param {RelationCreateManyArgs} args - Arguments to create many Relations.
     * @example
     * // Create many Relations
     * const relation = await prisma.relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RelationCreateManyArgs>(args?: SelectSubset<T, RelationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Relation.
     * @param {RelationDeleteArgs} args - Arguments to delete one Relation.
     * @example
     * // Delete one Relation
     * const Relation = await prisma.relation.delete({
     *   where: {
     *     // ... filter to delete one Relation
     *   }
     * })
     * 
     */
    delete<T extends RelationDeleteArgs>(args: SelectSubset<T, RelationDeleteArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Relation.
     * @param {RelationUpdateArgs} args - Arguments to update one Relation.
     * @example
     * // Update one Relation
     * const relation = await prisma.relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RelationUpdateArgs>(args: SelectSubset<T, RelationUpdateArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Relations.
     * @param {RelationDeleteManyArgs} args - Arguments to filter Relations to delete.
     * @example
     * // Delete a few Relations
     * const { count } = await prisma.relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RelationDeleteManyArgs>(args?: SelectSubset<T, RelationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Relations
     * const relation = await prisma.relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RelationUpdateManyArgs>(args: SelectSubset<T, RelationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Relation.
     * @param {RelationUpsertArgs} args - Arguments to update or create a Relation.
     * @example
     * // Update or create a Relation
     * const relation = await prisma.relation.upsert({
     *   create: {
     *     // ... data to create a Relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Relation we want to update
     *   }
     * })
     */
    upsert<T extends RelationUpsertArgs>(args: SelectSubset<T, RelationUpsertArgs<ExtArgs>>): Prisma__RelationClient<$Result.GetResult<Prisma.$RelationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationCountArgs} args - Arguments to filter Relations to count.
     * @example
     * // Count the number of Relations
     * const count = await prisma.relation.count({
     *   where: {
     *     // ... the filter for the Relations we want to count
     *   }
     * })
    **/
    count<T extends RelationCountArgs>(
      args?: Subset<T, RelationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RelationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RelationAggregateArgs>(args: Subset<T, RelationAggregateArgs>): Prisma.PrismaPromise<GetRelationAggregateType<T>>

    /**
     * Group by Relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RelationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RelationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RelationGroupByArgs['orderBy'] }
        : { orderBy?: RelationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RelationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRelationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Relation model
   */
  readonly fields: RelationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RelationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    service<T extends ServiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ServiceDefaultArgs<ExtArgs>>): Prisma__ServiceClient<$Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    system<T extends SystemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SystemDefaultArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Relation model
   */
  interface RelationFieldRefs {
    readonly id: FieldRef<"Relation", 'Int'>
    readonly serviceId: FieldRef<"Relation", 'Int'>
    readonly systemId: FieldRef<"Relation", 'Int'>
    readonly validFrom: FieldRef<"Relation", 'DateTime'>
    readonly validTo: FieldRef<"Relation", 'DateTime'>
    readonly created: FieldRef<"Relation", 'DateTime'>
    readonly modified: FieldRef<"Relation", 'DateTime'>
    readonly expired: FieldRef<"Relation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Relation findUnique
   */
  export type RelationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter, which Relation to fetch.
     */
    where: RelationWhereUniqueInput
  }

  /**
   * Relation findUniqueOrThrow
   */
  export type RelationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter, which Relation to fetch.
     */
    where: RelationWhereUniqueInput
  }

  /**
   * Relation findFirst
   */
  export type RelationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter, which Relation to fetch.
     */
    where?: RelationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Relations to fetch.
     */
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Relations.
     */
    cursor?: RelationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Relations.
     */
    distinct?: RelationScalarFieldEnum | RelationScalarFieldEnum[]
  }

  /**
   * Relation findFirstOrThrow
   */
  export type RelationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter, which Relation to fetch.
     */
    where?: RelationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Relations to fetch.
     */
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Relations.
     */
    cursor?: RelationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Relations.
     */
    distinct?: RelationScalarFieldEnum | RelationScalarFieldEnum[]
  }

  /**
   * Relation findMany
   */
  export type RelationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter, which Relations to fetch.
     */
    where?: RelationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Relations to fetch.
     */
    orderBy?: RelationOrderByWithRelationInput | RelationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Relations.
     */
    cursor?: RelationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Relations.
     */
    skip?: number
    distinct?: RelationScalarFieldEnum | RelationScalarFieldEnum[]
  }

  /**
   * Relation create
   */
  export type RelationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * The data needed to create a Relation.
     */
    data: XOR<RelationCreateInput, RelationUncheckedCreateInput>
  }

  /**
   * Relation createMany
   */
  export type RelationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Relations.
     */
    data: RelationCreateManyInput | RelationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Relation update
   */
  export type RelationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * The data needed to update a Relation.
     */
    data: XOR<RelationUpdateInput, RelationUncheckedUpdateInput>
    /**
     * Choose, which Relation to update.
     */
    where: RelationWhereUniqueInput
  }

  /**
   * Relation updateMany
   */
  export type RelationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Relations.
     */
    data: XOR<RelationUpdateManyMutationInput, RelationUncheckedUpdateManyInput>
    /**
     * Filter which Relations to update
     */
    where?: RelationWhereInput
    /**
     * Limit how many Relations to update.
     */
    limit?: number
  }

  /**
   * Relation upsert
   */
  export type RelationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * The filter to search for the Relation to update in case it exists.
     */
    where: RelationWhereUniqueInput
    /**
     * In case the Relation found by the `where` argument doesn't exist, create a new Relation with this data.
     */
    create: XOR<RelationCreateInput, RelationUncheckedCreateInput>
    /**
     * In case the Relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RelationUpdateInput, RelationUncheckedUpdateInput>
  }

  /**
   * Relation delete
   */
  export type RelationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
    /**
     * Filter which Relation to delete.
     */
    where: RelationWhereUniqueInput
  }

  /**
   * Relation deleteMany
   */
  export type RelationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Relations to delete
     */
    where?: RelationWhereInput
    /**
     * Limit how many Relations to delete.
     */
    limit?: number
  }

  /**
   * Relation without action
   */
  export type RelationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Relation
     */
    select?: RelationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Relation
     */
    omit?: RelationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RelationInclude<ExtArgs> | null
  }


  /**
   * Model Incident
   */

  export type AggregateIncident = {
    _count: IncidentCountAggregateOutputType | null
    _avg: IncidentAvgAggregateOutputType | null
    _sum: IncidentSumAggregateOutputType | null
    _min: IncidentMinAggregateOutputType | null
    _max: IncidentMaxAggregateOutputType | null
  }

  export type IncidentAvgAggregateOutputType = {
    id: number | null
    reporterId: number | null
    systemId: number | null
    companyId: number | null
    creatorId: number | null
    handlerId: number | null
  }

  export type IncidentSumAggregateOutputType = {
    id: number | null
    reporterId: number | null
    systemId: number | null
    companyId: number | null
    creatorId: number | null
    handlerId: number | null
  }

  export type IncidentMinAggregateOutputType = {
    id: number | null
    ready: boolean | null
    reporterId: number | null
    detectionTime: Date | null
    notificationId: string | null
    beginning: Date | null
    end: Date | null
    type: string | null
    systemId: number | null
    companyId: number | null
    urgency: string | null
    criticality: string | null
    description: string | null
    creatorId: number | null
    handlerId: number | null
    cause: string | null
    measure: string | null
    notification: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type IncidentMaxAggregateOutputType = {
    id: number | null
    ready: boolean | null
    reporterId: number | null
    detectionTime: Date | null
    notificationId: string | null
    beginning: Date | null
    end: Date | null
    type: string | null
    systemId: number | null
    companyId: number | null
    urgency: string | null
    criticality: string | null
    description: string | null
    creatorId: number | null
    handlerId: number | null
    cause: string | null
    measure: string | null
    notification: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type IncidentCountAggregateOutputType = {
    id: number
    ready: number
    reporterId: number
    detectionTime: number
    notificationId: number
    beginning: number
    end: number
    type: number
    systemId: number
    companyId: number
    urgency: number
    criticality: number
    description: number
    creatorId: number
    handlerId: number
    cause: number
    measure: number
    notification: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type IncidentAvgAggregateInputType = {
    id?: true
    reporterId?: true
    systemId?: true
    companyId?: true
    creatorId?: true
    handlerId?: true
  }

  export type IncidentSumAggregateInputType = {
    id?: true
    reporterId?: true
    systemId?: true
    companyId?: true
    creatorId?: true
    handlerId?: true
  }

  export type IncidentMinAggregateInputType = {
    id?: true
    ready?: true
    reporterId?: true
    detectionTime?: true
    notificationId?: true
    beginning?: true
    end?: true
    type?: true
    systemId?: true
    companyId?: true
    urgency?: true
    criticality?: true
    description?: true
    creatorId?: true
    handlerId?: true
    cause?: true
    measure?: true
    notification?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type IncidentMaxAggregateInputType = {
    id?: true
    ready?: true
    reporterId?: true
    detectionTime?: true
    notificationId?: true
    beginning?: true
    end?: true
    type?: true
    systemId?: true
    companyId?: true
    urgency?: true
    criticality?: true
    description?: true
    creatorId?: true
    handlerId?: true
    cause?: true
    measure?: true
    notification?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type IncidentCountAggregateInputType = {
    id?: true
    ready?: true
    reporterId?: true
    detectionTime?: true
    notificationId?: true
    beginning?: true
    end?: true
    type?: true
    systemId?: true
    companyId?: true
    urgency?: true
    criticality?: true
    description?: true
    creatorId?: true
    handlerId?: true
    cause?: true
    measure?: true
    notification?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type IncidentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Incident to aggregate.
     */
    where?: IncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incidents to fetch.
     */
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Incidents
    **/
    _count?: true | IncidentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IncidentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IncidentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IncidentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IncidentMaxAggregateInputType
  }

  export type GetIncidentAggregateType<T extends IncidentAggregateArgs> = {
        [P in keyof T & keyof AggregateIncident]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncident[P]>
      : GetScalarType<T[P], AggregateIncident[P]>
  }




  export type IncidentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IncidentWhereInput
    orderBy?: IncidentOrderByWithAggregationInput | IncidentOrderByWithAggregationInput[]
    by: IncidentScalarFieldEnum[] | IncidentScalarFieldEnum
    having?: IncidentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IncidentCountAggregateInputType | true
    _avg?: IncidentAvgAggregateInputType
    _sum?: IncidentSumAggregateInputType
    _min?: IncidentMinAggregateInputType
    _max?: IncidentMaxAggregateInputType
  }

  export type IncidentGroupByOutputType = {
    id: number
    ready: boolean
    reporterId: number
    detectionTime: Date
    notificationId: string | null
    beginning: Date
    end: Date
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause: string | null
    measure: string | null
    notification: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: IncidentCountAggregateOutputType | null
    _avg: IncidentAvgAggregateOutputType | null
    _sum: IncidentSumAggregateOutputType | null
    _min: IncidentMinAggregateOutputType | null
    _max: IncidentMaxAggregateOutputType | null
  }

  type GetIncidentGroupByPayload<T extends IncidentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IncidentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IncidentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IncidentGroupByOutputType[P]>
            : GetScalarType<T[P], IncidentGroupByOutputType[P]>
        }
      >
    >


  export type IncidentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ready?: boolean
    reporterId?: boolean
    detectionTime?: boolean
    notificationId?: boolean
    beginning?: boolean
    end?: boolean
    type?: boolean
    systemId?: boolean
    companyId?: boolean
    urgency?: boolean
    criticality?: boolean
    description?: boolean
    creatorId?: boolean
    handlerId?: boolean
    cause?: boolean
    measure?: boolean
    notification?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    handler?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incident"]>



  export type IncidentSelectScalar = {
    id?: boolean
    ready?: boolean
    reporterId?: boolean
    detectionTime?: boolean
    notificationId?: boolean
    beginning?: boolean
    end?: boolean
    type?: boolean
    systemId?: boolean
    companyId?: boolean
    urgency?: boolean
    criticality?: boolean
    description?: boolean
    creatorId?: boolean
    handlerId?: boolean
    cause?: boolean
    measure?: boolean
    notification?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type IncidentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "ready" | "reporterId" | "detectionTime" | "notificationId" | "beginning" | "end" | "type" | "systemId" | "companyId" | "urgency" | "criticality" | "description" | "creatorId" | "handlerId" | "cause" | "measure" | "notification" | "created" | "modified" | "expired", ExtArgs["result"]["incident"]>
  export type IncidentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reporter?: boolean | UserDefaultArgs<ExtArgs>
    system?: boolean | SystemDefaultArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    handler?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $IncidentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Incident"
    objects: {
      reporter: Prisma.$UserPayload<ExtArgs>
      system: Prisma.$SystemPayload<ExtArgs>
      company: Prisma.$CompanyPayload<ExtArgs>
      creator: Prisma.$UserPayload<ExtArgs>
      handler: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ready: boolean
      reporterId: number
      detectionTime: Date
      notificationId: string | null
      beginning: Date
      end: Date
      type: string
      systemId: number
      companyId: number
      urgency: string
      criticality: string
      description: string
      creatorId: number
      handlerId: number
      cause: string | null
      measure: string | null
      notification: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["incident"]>
    composites: {}
  }

  type IncidentGetPayload<S extends boolean | null | undefined | IncidentDefaultArgs> = $Result.GetResult<Prisma.$IncidentPayload, S>

  type IncidentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<IncidentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IncidentCountAggregateInputType | true
    }

  export interface IncidentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Incident'], meta: { name: 'Incident' } }
    /**
     * Find zero or one Incident that matches the filter.
     * @param {IncidentFindUniqueArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IncidentFindUniqueArgs>(args: SelectSubset<T, IncidentFindUniqueArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incident that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {IncidentFindUniqueOrThrowArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IncidentFindUniqueOrThrowArgs>(args: SelectSubset<T, IncidentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentFindFirstArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IncidentFindFirstArgs>(args?: SelectSubset<T, IncidentFindFirstArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentFindFirstOrThrowArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IncidentFindFirstOrThrowArgs>(args?: SelectSubset<T, IncidentFindFirstOrThrowArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incidents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incidents
     * const incidents = await prisma.incident.findMany()
     * 
     * // Get first 10 Incidents
     * const incidents = await prisma.incident.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incidentWithIdOnly = await prisma.incident.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IncidentFindManyArgs>(args?: SelectSubset<T, IncidentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incident.
     * @param {IncidentCreateArgs} args - Arguments to create a Incident.
     * @example
     * // Create one Incident
     * const Incident = await prisma.incident.create({
     *   data: {
     *     // ... data to create a Incident
     *   }
     * })
     * 
     */
    create<T extends IncidentCreateArgs>(args: SelectSubset<T, IncidentCreateArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incidents.
     * @param {IncidentCreateManyArgs} args - Arguments to create many Incidents.
     * @example
     * // Create many Incidents
     * const incident = await prisma.incident.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IncidentCreateManyArgs>(args?: SelectSubset<T, IncidentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Incident.
     * @param {IncidentDeleteArgs} args - Arguments to delete one Incident.
     * @example
     * // Delete one Incident
     * const Incident = await prisma.incident.delete({
     *   where: {
     *     // ... filter to delete one Incident
     *   }
     * })
     * 
     */
    delete<T extends IncidentDeleteArgs>(args: SelectSubset<T, IncidentDeleteArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incident.
     * @param {IncidentUpdateArgs} args - Arguments to update one Incident.
     * @example
     * // Update one Incident
     * const incident = await prisma.incident.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IncidentUpdateArgs>(args: SelectSubset<T, IncidentUpdateArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incidents.
     * @param {IncidentDeleteManyArgs} args - Arguments to filter Incidents to delete.
     * @example
     * // Delete a few Incidents
     * const { count } = await prisma.incident.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IncidentDeleteManyArgs>(args?: SelectSubset<T, IncidentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incidents
     * const incident = await prisma.incident.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IncidentUpdateManyArgs>(args: SelectSubset<T, IncidentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Incident.
     * @param {IncidentUpsertArgs} args - Arguments to update or create a Incident.
     * @example
     * // Update or create a Incident
     * const incident = await prisma.incident.upsert({
     *   create: {
     *     // ... data to create a Incident
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incident we want to update
     *   }
     * })
     */
    upsert<T extends IncidentUpsertArgs>(args: SelectSubset<T, IncidentUpsertArgs<ExtArgs>>): Prisma__IncidentClient<$Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentCountArgs} args - Arguments to filter Incidents to count.
     * @example
     * // Count the number of Incidents
     * const count = await prisma.incident.count({
     *   where: {
     *     // ... the filter for the Incidents we want to count
     *   }
     * })
    **/
    count<T extends IncidentCountArgs>(
      args?: Subset<T, IncidentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IncidentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IncidentAggregateArgs>(args: Subset<T, IncidentAggregateArgs>): Prisma.PrismaPromise<GetIncidentAggregateType<T>>

    /**
     * Group by Incident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IncidentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IncidentGroupByArgs['orderBy'] }
        : { orderBy?: IncidentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IncidentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncidentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Incident model
   */
  readonly fields: IncidentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Incident.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IncidentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reporter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    system<T extends SystemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SystemDefaultArgs<ExtArgs>>): Prisma__SystemClient<$Result.GetResult<Prisma.$SystemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    handler<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Incident model
   */
  interface IncidentFieldRefs {
    readonly id: FieldRef<"Incident", 'Int'>
    readonly ready: FieldRef<"Incident", 'Boolean'>
    readonly reporterId: FieldRef<"Incident", 'Int'>
    readonly detectionTime: FieldRef<"Incident", 'DateTime'>
    readonly notificationId: FieldRef<"Incident", 'String'>
    readonly beginning: FieldRef<"Incident", 'DateTime'>
    readonly end: FieldRef<"Incident", 'DateTime'>
    readonly type: FieldRef<"Incident", 'String'>
    readonly systemId: FieldRef<"Incident", 'Int'>
    readonly companyId: FieldRef<"Incident", 'Int'>
    readonly urgency: FieldRef<"Incident", 'String'>
    readonly criticality: FieldRef<"Incident", 'String'>
    readonly description: FieldRef<"Incident", 'String'>
    readonly creatorId: FieldRef<"Incident", 'Int'>
    readonly handlerId: FieldRef<"Incident", 'Int'>
    readonly cause: FieldRef<"Incident", 'String'>
    readonly measure: FieldRef<"Incident", 'String'>
    readonly notification: FieldRef<"Incident", 'String'>
    readonly created: FieldRef<"Incident", 'DateTime'>
    readonly modified: FieldRef<"Incident", 'DateTime'>
    readonly expired: FieldRef<"Incident", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Incident findUnique
   */
  export type IncidentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter, which Incident to fetch.
     */
    where: IncidentWhereUniqueInput
  }

  /**
   * Incident findUniqueOrThrow
   */
  export type IncidentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter, which Incident to fetch.
     */
    where: IncidentWhereUniqueInput
  }

  /**
   * Incident findFirst
   */
  export type IncidentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter, which Incident to fetch.
     */
    where?: IncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incidents to fetch.
     */
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Incidents.
     */
    cursor?: IncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Incidents.
     */
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * Incident findFirstOrThrow
   */
  export type IncidentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter, which Incident to fetch.
     */
    where?: IncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incidents to fetch.
     */
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Incidents.
     */
    cursor?: IncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Incidents.
     */
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * Incident findMany
   */
  export type IncidentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter, which Incidents to fetch.
     */
    where?: IncidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Incidents to fetch.
     */
    orderBy?: IncidentOrderByWithRelationInput | IncidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Incidents.
     */
    cursor?: IncidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Incidents.
     */
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * Incident create
   */
  export type IncidentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * The data needed to create a Incident.
     */
    data: XOR<IncidentCreateInput, IncidentUncheckedCreateInput>
  }

  /**
   * Incident createMany
   */
  export type IncidentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Incidents.
     */
    data: IncidentCreateManyInput | IncidentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Incident update
   */
  export type IncidentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * The data needed to update a Incident.
     */
    data: XOR<IncidentUpdateInput, IncidentUncheckedUpdateInput>
    /**
     * Choose, which Incident to update.
     */
    where: IncidentWhereUniqueInput
  }

  /**
   * Incident updateMany
   */
  export type IncidentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Incidents.
     */
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyInput>
    /**
     * Filter which Incidents to update
     */
    where?: IncidentWhereInput
    /**
     * Limit how many Incidents to update.
     */
    limit?: number
  }

  /**
   * Incident upsert
   */
  export type IncidentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * The filter to search for the Incident to update in case it exists.
     */
    where: IncidentWhereUniqueInput
    /**
     * In case the Incident found by the `where` argument doesn't exist, create a new Incident with this data.
     */
    create: XOR<IncidentCreateInput, IncidentUncheckedCreateInput>
    /**
     * In case the Incident was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IncidentUpdateInput, IncidentUncheckedUpdateInput>
  }

  /**
   * Incident delete
   */
  export type IncidentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
    /**
     * Filter which Incident to delete.
     */
    where: IncidentWhereUniqueInput
  }

  /**
   * Incident deleteMany
   */
  export type IncidentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Incidents to delete
     */
    where?: IncidentWhereInput
    /**
     * Limit how many Incidents to delete.
     */
    limit?: number
  }

  /**
   * Incident without action
   */
  export type IncidentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident
     */
    select?: IncidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Incident
     */
    omit?: IncidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IncidentInclude<ExtArgs> | null
  }


  /**
   * Model Guide
   */

  export type AggregateGuide = {
    _count: GuideCountAggregateOutputType | null
    _avg: GuideAvgAggregateOutputType | null
    _sum: GuideSumAggregateOutputType | null
    _min: GuideMinAggregateOutputType | null
    _max: GuideMaxAggregateOutputType | null
  }

  export type GuideAvgAggregateOutputType = {
    id: number | null
  }

  export type GuideSumAggregateOutputType = {
    id: number | null
  }

  export type GuideMinAggregateOutputType = {
    id: number | null
    column: string | null
    description: string | null
    responsible: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type GuideMaxAggregateOutputType = {
    id: number | null
    column: string | null
    description: string | null
    responsible: string | null
    created: Date | null
    modified: Date | null
    expired: Date | null
  }

  export type GuideCountAggregateOutputType = {
    id: number
    column: number
    description: number
    responsible: number
    created: number
    modified: number
    expired: number
    _all: number
  }


  export type GuideAvgAggregateInputType = {
    id?: true
  }

  export type GuideSumAggregateInputType = {
    id?: true
  }

  export type GuideMinAggregateInputType = {
    id?: true
    column?: true
    description?: true
    responsible?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type GuideMaxAggregateInputType = {
    id?: true
    column?: true
    description?: true
    responsible?: true
    created?: true
    modified?: true
    expired?: true
  }

  export type GuideCountAggregateInputType = {
    id?: true
    column?: true
    description?: true
    responsible?: true
    created?: true
    modified?: true
    expired?: true
    _all?: true
  }

  export type GuideAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Guide to aggregate.
     */
    where?: GuideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Guides to fetch.
     */
    orderBy?: GuideOrderByWithRelationInput | GuideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GuideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Guides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Guides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Guides
    **/
    _count?: true | GuideCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GuideAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GuideSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GuideMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GuideMaxAggregateInputType
  }

  export type GetGuideAggregateType<T extends GuideAggregateArgs> = {
        [P in keyof T & keyof AggregateGuide]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGuide[P]>
      : GetScalarType<T[P], AggregateGuide[P]>
  }




  export type GuideGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GuideWhereInput
    orderBy?: GuideOrderByWithAggregationInput | GuideOrderByWithAggregationInput[]
    by: GuideScalarFieldEnum[] | GuideScalarFieldEnum
    having?: GuideScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GuideCountAggregateInputType | true
    _avg?: GuideAvgAggregateInputType
    _sum?: GuideSumAggregateInputType
    _min?: GuideMinAggregateInputType
    _max?: GuideMaxAggregateInputType
  }

  export type GuideGroupByOutputType = {
    id: number
    column: string
    description: string | null
    responsible: string | null
    created: Date
    modified: Date
    expired: Date | null
    _count: GuideCountAggregateOutputType | null
    _avg: GuideAvgAggregateOutputType | null
    _sum: GuideSumAggregateOutputType | null
    _min: GuideMinAggregateOutputType | null
    _max: GuideMaxAggregateOutputType | null
  }

  type GetGuideGroupByPayload<T extends GuideGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GuideGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GuideGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GuideGroupByOutputType[P]>
            : GetScalarType<T[P], GuideGroupByOutputType[P]>
        }
      >
    >


  export type GuideSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    column?: boolean
    description?: boolean
    responsible?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }, ExtArgs["result"]["guide"]>



  export type GuideSelectScalar = {
    id?: boolean
    column?: boolean
    description?: boolean
    responsible?: boolean
    created?: boolean
    modified?: boolean
    expired?: boolean
  }

  export type GuideOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "column" | "description" | "responsible" | "created" | "modified" | "expired", ExtArgs["result"]["guide"]>

  export type $GuidePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Guide"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      column: string
      description: string | null
      responsible: string | null
      created: Date
      modified: Date
      expired: Date | null
    }, ExtArgs["result"]["guide"]>
    composites: {}
  }

  type GuideGetPayload<S extends boolean | null | undefined | GuideDefaultArgs> = $Result.GetResult<Prisma.$GuidePayload, S>

  type GuideCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<GuideFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: GuideCountAggregateInputType | true
    }

  export interface GuideDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Guide'], meta: { name: 'Guide' } }
    /**
     * Find zero or one Guide that matches the filter.
     * @param {GuideFindUniqueArgs} args - Arguments to find a Guide
     * @example
     * // Get one Guide
     * const guide = await prisma.guide.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends GuideFindUniqueArgs>(args: SelectSubset<T, GuideFindUniqueArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Guide that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {GuideFindUniqueOrThrowArgs} args - Arguments to find a Guide
     * @example
     * // Get one Guide
     * const guide = await prisma.guide.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends GuideFindUniqueOrThrowArgs>(args: SelectSubset<T, GuideFindUniqueOrThrowArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Guide that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideFindFirstArgs} args - Arguments to find a Guide
     * @example
     * // Get one Guide
     * const guide = await prisma.guide.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends GuideFindFirstArgs>(args?: SelectSubset<T, GuideFindFirstArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Guide that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideFindFirstOrThrowArgs} args - Arguments to find a Guide
     * @example
     * // Get one Guide
     * const guide = await prisma.guide.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends GuideFindFirstOrThrowArgs>(args?: SelectSubset<T, GuideFindFirstOrThrowArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Guides that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Guides
     * const guides = await prisma.guide.findMany()
     * 
     * // Get first 10 Guides
     * const guides = await prisma.guide.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const guideWithIdOnly = await prisma.guide.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends GuideFindManyArgs>(args?: SelectSubset<T, GuideFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Guide.
     * @param {GuideCreateArgs} args - Arguments to create a Guide.
     * @example
     * // Create one Guide
     * const Guide = await prisma.guide.create({
     *   data: {
     *     // ... data to create a Guide
     *   }
     * })
     * 
     */
    create<T extends GuideCreateArgs>(args: SelectSubset<T, GuideCreateArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Guides.
     * @param {GuideCreateManyArgs} args - Arguments to create many Guides.
     * @example
     * // Create many Guides
     * const guide = await prisma.guide.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends GuideCreateManyArgs>(args?: SelectSubset<T, GuideCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Guide.
     * @param {GuideDeleteArgs} args - Arguments to delete one Guide.
     * @example
     * // Delete one Guide
     * const Guide = await prisma.guide.delete({
     *   where: {
     *     // ... filter to delete one Guide
     *   }
     * })
     * 
     */
    delete<T extends GuideDeleteArgs>(args: SelectSubset<T, GuideDeleteArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Guide.
     * @param {GuideUpdateArgs} args - Arguments to update one Guide.
     * @example
     * // Update one Guide
     * const guide = await prisma.guide.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends GuideUpdateArgs>(args: SelectSubset<T, GuideUpdateArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Guides.
     * @param {GuideDeleteManyArgs} args - Arguments to filter Guides to delete.
     * @example
     * // Delete a few Guides
     * const { count } = await prisma.guide.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends GuideDeleteManyArgs>(args?: SelectSubset<T, GuideDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Guides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Guides
     * const guide = await prisma.guide.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends GuideUpdateManyArgs>(args: SelectSubset<T, GuideUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Guide.
     * @param {GuideUpsertArgs} args - Arguments to update or create a Guide.
     * @example
     * // Update or create a Guide
     * const guide = await prisma.guide.upsert({
     *   create: {
     *     // ... data to create a Guide
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Guide we want to update
     *   }
     * })
     */
    upsert<T extends GuideUpsertArgs>(args: SelectSubset<T, GuideUpsertArgs<ExtArgs>>): Prisma__GuideClient<$Result.GetResult<Prisma.$GuidePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Guides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideCountArgs} args - Arguments to filter Guides to count.
     * @example
     * // Count the number of Guides
     * const count = await prisma.guide.count({
     *   where: {
     *     // ... the filter for the Guides we want to count
     *   }
     * })
    **/
    count<T extends GuideCountArgs>(
      args?: Subset<T, GuideCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GuideCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Guide.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GuideAggregateArgs>(args: Subset<T, GuideAggregateArgs>): Prisma.PrismaPromise<GetGuideAggregateType<T>>

    /**
     * Group by Guide.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GuideGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GuideGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GuideGroupByArgs['orderBy'] }
        : { orderBy?: GuideGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GuideGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGuideGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Guide model
   */
  readonly fields: GuideFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Guide.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GuideClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Guide model
   */
  interface GuideFieldRefs {
    readonly id: FieldRef<"Guide", 'Int'>
    readonly column: FieldRef<"Guide", 'String'>
    readonly description: FieldRef<"Guide", 'String'>
    readonly responsible: FieldRef<"Guide", 'String'>
    readonly created: FieldRef<"Guide", 'DateTime'>
    readonly modified: FieldRef<"Guide", 'DateTime'>
    readonly expired: FieldRef<"Guide", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Guide findUnique
   */
  export type GuideFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter, which Guide to fetch.
     */
    where: GuideWhereUniqueInput
  }

  /**
   * Guide findUniqueOrThrow
   */
  export type GuideFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter, which Guide to fetch.
     */
    where: GuideWhereUniqueInput
  }

  /**
   * Guide findFirst
   */
  export type GuideFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter, which Guide to fetch.
     */
    where?: GuideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Guides to fetch.
     */
    orderBy?: GuideOrderByWithRelationInput | GuideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Guides.
     */
    cursor?: GuideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Guides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Guides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Guides.
     */
    distinct?: GuideScalarFieldEnum | GuideScalarFieldEnum[]
  }

  /**
   * Guide findFirstOrThrow
   */
  export type GuideFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter, which Guide to fetch.
     */
    where?: GuideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Guides to fetch.
     */
    orderBy?: GuideOrderByWithRelationInput | GuideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Guides.
     */
    cursor?: GuideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Guides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Guides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Guides.
     */
    distinct?: GuideScalarFieldEnum | GuideScalarFieldEnum[]
  }

  /**
   * Guide findMany
   */
  export type GuideFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter, which Guides to fetch.
     */
    where?: GuideWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Guides to fetch.
     */
    orderBy?: GuideOrderByWithRelationInput | GuideOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Guides.
     */
    cursor?: GuideWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Guides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Guides.
     */
    skip?: number
    distinct?: GuideScalarFieldEnum | GuideScalarFieldEnum[]
  }

  /**
   * Guide create
   */
  export type GuideCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * The data needed to create a Guide.
     */
    data: XOR<GuideCreateInput, GuideUncheckedCreateInput>
  }

  /**
   * Guide createMany
   */
  export type GuideCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Guides.
     */
    data: GuideCreateManyInput | GuideCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Guide update
   */
  export type GuideUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * The data needed to update a Guide.
     */
    data: XOR<GuideUpdateInput, GuideUncheckedUpdateInput>
    /**
     * Choose, which Guide to update.
     */
    where: GuideWhereUniqueInput
  }

  /**
   * Guide updateMany
   */
  export type GuideUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Guides.
     */
    data: XOR<GuideUpdateManyMutationInput, GuideUncheckedUpdateManyInput>
    /**
     * Filter which Guides to update
     */
    where?: GuideWhereInput
    /**
     * Limit how many Guides to update.
     */
    limit?: number
  }

  /**
   * Guide upsert
   */
  export type GuideUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * The filter to search for the Guide to update in case it exists.
     */
    where: GuideWhereUniqueInput
    /**
     * In case the Guide found by the `where` argument doesn't exist, create a new Guide with this data.
     */
    create: XOR<GuideCreateInput, GuideUncheckedCreateInput>
    /**
     * In case the Guide was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GuideUpdateInput, GuideUncheckedUpdateInput>
  }

  /**
   * Guide delete
   */
  export type GuideDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
    /**
     * Filter which Guide to delete.
     */
    where: GuideWhereUniqueInput
  }

  /**
   * Guide deleteMany
   */
  export type GuideDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Guides to delete
     */
    where?: GuideWhereInput
    /**
     * Limit how many Guides to delete.
     */
    limit?: number
  }

  /**
   * Guide without action
   */
  export type GuideDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Guide
     */
    select?: GuideSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Guide
     */
    omit?: GuideOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    login: 'login',
    name: 'name',
    description: 'description',
    email: 'email',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RightScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type RightScalarFieldEnum = (typeof RightScalarFieldEnum)[keyof typeof RightScalarFieldEnum]


  export const UserRoleScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    roleId: 'roleId',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type UserRoleScalarFieldEnum = (typeof UserRoleScalarFieldEnum)[keyof typeof UserRoleScalarFieldEnum]


  export const RoleRightScalarFieldEnum: {
    id: 'id',
    roleId: 'roleId',
    rightId: 'rightId',
    permission: 'permission',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type RoleRightScalarFieldEnum = (typeof RoleRightScalarFieldEnum)[keyof typeof RoleRightScalarFieldEnum]


  export const UserRightScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    rightId: 'rightId',
    permission: 'permission',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type UserRightScalarFieldEnum = (typeof UserRightScalarFieldEnum)[keyof typeof UserRightScalarFieldEnum]


  export const LogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    relationId: 'relationId',
    valueFrom: 'valueFrom',
    valueTo: 'valueTo',
    created: 'created'
  };

  export type LogScalarFieldEnum = (typeof LogScalarFieldEnum)[keyof typeof LogScalarFieldEnum]


  export const ServiceScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type ServiceScalarFieldEnum = (typeof ServiceScalarFieldEnum)[keyof typeof ServiceScalarFieldEnum]


  export const KPI_DataScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    serviceId: 'serviceId',
    userId: 'userId',
    companyId: 'companyId',
    systemId: 'systemId',
    date: 'date',
    value: 'value',
    approved: 'approved',
    approverId: 'approverId',
    approvalDate: 'approvalDate',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type KPI_DataScalarFieldEnum = (typeof KPI_DataScalarFieldEnum)[keyof typeof KPI_DataScalarFieldEnum]


  export const ItemScalarFieldEnum: {
    id: 'id',
    code: 'code',
    name: 'name',
    description: 'description',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type ItemScalarFieldEnum = (typeof ItemScalarFieldEnum)[keyof typeof ItemScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const SystemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    criticality: 'criticality',
    availability: 'availability',
    recoverability: 'recoverability',
    maintainability: 'maintainability',
    integrity: 'integrity',
    confidentiality: 'confidentiality',
    analystId: 'analystId',
    applicationOperatorId: 'applicationOperatorId',
    platformOperatorId: 'platformOperatorId',
    infrastructureOperatorId: 'infrastructureOperatorId',
    companyId: 'companyId',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type SystemScalarFieldEnum = (typeof SystemScalarFieldEnum)[keyof typeof SystemScalarFieldEnum]


  export const RelationScalarFieldEnum: {
    id: 'id',
    serviceId: 'serviceId',
    systemId: 'systemId',
    validFrom: 'validFrom',
    validTo: 'validTo',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type RelationScalarFieldEnum = (typeof RelationScalarFieldEnum)[keyof typeof RelationScalarFieldEnum]


  export const IncidentScalarFieldEnum: {
    id: 'id',
    ready: 'ready',
    reporterId: 'reporterId',
    detectionTime: 'detectionTime',
    notificationId: 'notificationId',
    beginning: 'beginning',
    end: 'end',
    type: 'type',
    systemId: 'systemId',
    companyId: 'companyId',
    urgency: 'urgency',
    criticality: 'criticality',
    description: 'description',
    creatorId: 'creatorId',
    handlerId: 'handlerId',
    cause: 'cause',
    measure: 'measure',
    notification: 'notification',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type IncidentScalarFieldEnum = (typeof IncidentScalarFieldEnum)[keyof typeof IncidentScalarFieldEnum]


  export const GuideScalarFieldEnum: {
    id: 'id',
    column: 'column',
    description: 'description',
    responsible: 'responsible',
    created: 'created',
    modified: 'modified',
    expired: 'expired'
  };

  export type GuideScalarFieldEnum = (typeof GuideScalarFieldEnum)[keyof typeof GuideScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UserOrderByRelevanceFieldEnum: {
    login: 'login',
    name: 'name',
    description: 'description',
    email: 'email'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const RoleOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type RoleOrderByRelevanceFieldEnum = (typeof RoleOrderByRelevanceFieldEnum)[keyof typeof RoleOrderByRelevanceFieldEnum]


  export const RightOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type RightOrderByRelevanceFieldEnum = (typeof RightOrderByRelevanceFieldEnum)[keyof typeof RightOrderByRelevanceFieldEnum]


  export const RoleRightOrderByRelevanceFieldEnum: {
    permission: 'permission'
  };

  export type RoleRightOrderByRelevanceFieldEnum = (typeof RoleRightOrderByRelevanceFieldEnum)[keyof typeof RoleRightOrderByRelevanceFieldEnum]


  export const UserRightOrderByRelevanceFieldEnum: {
    permission: 'permission'
  };

  export type UserRightOrderByRelevanceFieldEnum = (typeof UserRightOrderByRelevanceFieldEnum)[keyof typeof UserRightOrderByRelevanceFieldEnum]


  export const LogOrderByRelevanceFieldEnum: {
    valueFrom: 'valueFrom',
    valueTo: 'valueTo'
  };

  export type LogOrderByRelevanceFieldEnum = (typeof LogOrderByRelevanceFieldEnum)[keyof typeof LogOrderByRelevanceFieldEnum]


  export const ServiceOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type ServiceOrderByRelevanceFieldEnum = (typeof ServiceOrderByRelevanceFieldEnum)[keyof typeof ServiceOrderByRelevanceFieldEnum]


  export const ItemOrderByRelevanceFieldEnum: {
    code: 'code',
    name: 'name',
    description: 'description'
  };

  export type ItemOrderByRelevanceFieldEnum = (typeof ItemOrderByRelevanceFieldEnum)[keyof typeof ItemOrderByRelevanceFieldEnum]


  export const CompanyOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type CompanyOrderByRelevanceFieldEnum = (typeof CompanyOrderByRelevanceFieldEnum)[keyof typeof CompanyOrderByRelevanceFieldEnum]


  export const SystemOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description',
    criticality: 'criticality',
    availability: 'availability',
    recoverability: 'recoverability',
    maintainability: 'maintainability',
    integrity: 'integrity',
    confidentiality: 'confidentiality'
  };

  export type SystemOrderByRelevanceFieldEnum = (typeof SystemOrderByRelevanceFieldEnum)[keyof typeof SystemOrderByRelevanceFieldEnum]


  export const IncidentOrderByRelevanceFieldEnum: {
    notificationId: 'notificationId',
    type: 'type',
    urgency: 'urgency',
    criticality: 'criticality',
    description: 'description',
    cause: 'cause',
    measure: 'measure',
    notification: 'notification'
  };

  export type IncidentOrderByRelevanceFieldEnum = (typeof IncidentOrderByRelevanceFieldEnum)[keyof typeof IncidentOrderByRelevanceFieldEnum]


  export const GuideOrderByRelevanceFieldEnum: {
    column: 'column',
    description: 'description',
    responsible: 'responsible'
  };

  export type GuideOrderByRelevanceFieldEnum = (typeof GuideOrderByRelevanceFieldEnum)[keyof typeof GuideOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    login?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    description?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    created?: DateTimeFilter<"User"> | Date | string
    modified?: DateTimeFilter<"User"> | Date | string
    expired?: DateTimeNullableFilter<"User"> | Date | string | null
    userRoles?: UserRoleListRelationFilter
    userRights?: UserRightListRelationFilter
    logs?: LogListRelationFilter
    kpiData?: KPI_DataListRelationFilter
    approvedKPI?: KPI_DataListRelationFilter
    reportedIncidents?: IncidentListRelationFilter
    createdIncidents?: IncidentListRelationFilter
    handledIncidents?: IncidentListRelationFilter
    analystSystems?: SystemListRelationFilter
    appOperatorSystems?: SystemListRelationFilter
    platformOperatorSystems?: SystemListRelationFilter
    infraOperatorSystems?: SystemListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    login?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    userRoles?: UserRoleOrderByRelationAggregateInput
    userRights?: UserRightOrderByRelationAggregateInput
    logs?: LogOrderByRelationAggregateInput
    kpiData?: KPI_DataOrderByRelationAggregateInput
    approvedKPI?: KPI_DataOrderByRelationAggregateInput
    reportedIncidents?: IncidentOrderByRelationAggregateInput
    createdIncidents?: IncidentOrderByRelationAggregateInput
    handledIncidents?: IncidentOrderByRelationAggregateInput
    analystSystems?: SystemOrderByRelationAggregateInput
    appOperatorSystems?: SystemOrderByRelationAggregateInput
    platformOperatorSystems?: SystemOrderByRelationAggregateInput
    infraOperatorSystems?: SystemOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    login?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    description?: StringNullableFilter<"User"> | string | null
    created?: DateTimeFilter<"User"> | Date | string
    modified?: DateTimeFilter<"User"> | Date | string
    expired?: DateTimeNullableFilter<"User"> | Date | string | null
    userRoles?: UserRoleListRelationFilter
    userRights?: UserRightListRelationFilter
    logs?: LogListRelationFilter
    kpiData?: KPI_DataListRelationFilter
    approvedKPI?: KPI_DataListRelationFilter
    reportedIncidents?: IncidentListRelationFilter
    createdIncidents?: IncidentListRelationFilter
    handledIncidents?: IncidentListRelationFilter
    analystSystems?: SystemListRelationFilter
    appOperatorSystems?: SystemListRelationFilter
    platformOperatorSystems?: SystemListRelationFilter
    infraOperatorSystems?: SystemListRelationFilter
  }, "id" | "login" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    login?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    login?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    description?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    created?: DateTimeWithAggregatesFilter<"User"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"User"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    description?: StringNullableFilter<"Role"> | string | null
    created?: DateTimeFilter<"Role"> | Date | string
    modified?: DateTimeFilter<"Role"> | Date | string
    expired?: DateTimeNullableFilter<"Role"> | Date | string | null
    userRoles?: UserRoleListRelationFilter
    roleRights?: RoleRightListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    userRoles?: UserRoleOrderByRelationAggregateInput
    roleRights?: RoleRightOrderByRelationAggregateInput
    _relevance?: RoleOrderByRelevanceInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    description?: StringNullableFilter<"Role"> | string | null
    created?: DateTimeFilter<"Role"> | Date | string
    modified?: DateTimeFilter<"Role"> | Date | string
    expired?: DateTimeNullableFilter<"Role"> | Date | string | null
    userRoles?: UserRoleListRelationFilter
    roleRights?: RoleRightListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    description?: StringNullableWithAggregatesFilter<"Role"> | string | null
    created?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
  }

  export type RightWhereInput = {
    AND?: RightWhereInput | RightWhereInput[]
    OR?: RightWhereInput[]
    NOT?: RightWhereInput | RightWhereInput[]
    id?: IntFilter<"Right"> | number
    name?: StringFilter<"Right"> | string
    description?: StringNullableFilter<"Right"> | string | null
    created?: DateTimeFilter<"Right"> | Date | string
    modified?: DateTimeFilter<"Right"> | Date | string
    expired?: DateTimeNullableFilter<"Right"> | Date | string | null
    roleRights?: RoleRightListRelationFilter
    userRights?: UserRightListRelationFilter
  }

  export type RightOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    roleRights?: RoleRightOrderByRelationAggregateInput
    userRights?: UserRightOrderByRelationAggregateInput
    _relevance?: RightOrderByRelevanceInput
  }

  export type RightWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RightWhereInput | RightWhereInput[]
    OR?: RightWhereInput[]
    NOT?: RightWhereInput | RightWhereInput[]
    description?: StringNullableFilter<"Right"> | string | null
    created?: DateTimeFilter<"Right"> | Date | string
    modified?: DateTimeFilter<"Right"> | Date | string
    expired?: DateTimeNullableFilter<"Right"> | Date | string | null
    roleRights?: RoleRightListRelationFilter
    userRights?: UserRightListRelationFilter
  }, "id" | "name">

  export type RightOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: RightCountOrderByAggregateInput
    _avg?: RightAvgOrderByAggregateInput
    _max?: RightMaxOrderByAggregateInput
    _min?: RightMinOrderByAggregateInput
    _sum?: RightSumOrderByAggregateInput
  }

  export type RightScalarWhereWithAggregatesInput = {
    AND?: RightScalarWhereWithAggregatesInput | RightScalarWhereWithAggregatesInput[]
    OR?: RightScalarWhereWithAggregatesInput[]
    NOT?: RightScalarWhereWithAggregatesInput | RightScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Right"> | number
    name?: StringWithAggregatesFilter<"Right"> | string
    description?: StringNullableWithAggregatesFilter<"Right"> | string | null
    created?: DateTimeWithAggregatesFilter<"Right"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Right"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Right"> | Date | string | null
  }

  export type UserRoleWhereInput = {
    AND?: UserRoleWhereInput | UserRoleWhereInput[]
    OR?: UserRoleWhereInput[]
    NOT?: UserRoleWhereInput | UserRoleWhereInput[]
    id?: IntFilter<"UserRole"> | number
    userId?: IntFilter<"UserRole"> | number
    roleId?: IntFilter<"UserRole"> | number
    created?: DateTimeFilter<"UserRole"> | Date | string
    modified?: DateTimeFilter<"UserRole"> | Date | string
    expired?: DateTimeNullableFilter<"UserRole"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type UserRoleOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    role?: RoleOrderByWithRelationInput
  }

  export type UserRoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_roleId?: UserRoleUserIdRoleIdCompoundUniqueInput
    AND?: UserRoleWhereInput | UserRoleWhereInput[]
    OR?: UserRoleWhereInput[]
    NOT?: UserRoleWhereInput | UserRoleWhereInput[]
    userId?: IntFilter<"UserRole"> | number
    roleId?: IntFilter<"UserRole"> | number
    created?: DateTimeFilter<"UserRole"> | Date | string
    modified?: DateTimeFilter<"UserRole"> | Date | string
    expired?: DateTimeNullableFilter<"UserRole"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id" | "userId_roleId">

  export type UserRoleOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: UserRoleCountOrderByAggregateInput
    _avg?: UserRoleAvgOrderByAggregateInput
    _max?: UserRoleMaxOrderByAggregateInput
    _min?: UserRoleMinOrderByAggregateInput
    _sum?: UserRoleSumOrderByAggregateInput
  }

  export type UserRoleScalarWhereWithAggregatesInput = {
    AND?: UserRoleScalarWhereWithAggregatesInput | UserRoleScalarWhereWithAggregatesInput[]
    OR?: UserRoleScalarWhereWithAggregatesInput[]
    NOT?: UserRoleScalarWhereWithAggregatesInput | UserRoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserRole"> | number
    userId?: IntWithAggregatesFilter<"UserRole"> | number
    roleId?: IntWithAggregatesFilter<"UserRole"> | number
    created?: DateTimeWithAggregatesFilter<"UserRole"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"UserRole"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"UserRole"> | Date | string | null
  }

  export type RoleRightWhereInput = {
    AND?: RoleRightWhereInput | RoleRightWhereInput[]
    OR?: RoleRightWhereInput[]
    NOT?: RoleRightWhereInput | RoleRightWhereInput[]
    id?: IntFilter<"RoleRight"> | number
    roleId?: IntFilter<"RoleRight"> | number
    rightId?: IntFilter<"RoleRight"> | number
    permission?: StringFilter<"RoleRight"> | string
    created?: DateTimeFilter<"RoleRight"> | Date | string
    modified?: DateTimeFilter<"RoleRight"> | Date | string
    expired?: DateTimeNullableFilter<"RoleRight"> | Date | string | null
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    right?: XOR<RightScalarRelationFilter, RightWhereInput>
  }

  export type RoleRightOrderByWithRelationInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    role?: RoleOrderByWithRelationInput
    right?: RightOrderByWithRelationInput
    _relevance?: RoleRightOrderByRelevanceInput
  }

  export type RoleRightWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roleId_rightId?: RoleRightRoleIdRightIdCompoundUniqueInput
    AND?: RoleRightWhereInput | RoleRightWhereInput[]
    OR?: RoleRightWhereInput[]
    NOT?: RoleRightWhereInput | RoleRightWhereInput[]
    roleId?: IntFilter<"RoleRight"> | number
    rightId?: IntFilter<"RoleRight"> | number
    permission?: StringFilter<"RoleRight"> | string
    created?: DateTimeFilter<"RoleRight"> | Date | string
    modified?: DateTimeFilter<"RoleRight"> | Date | string
    expired?: DateTimeNullableFilter<"RoleRight"> | Date | string | null
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    right?: XOR<RightScalarRelationFilter, RightWhereInput>
  }, "id" | "roleId_rightId">

  export type RoleRightOrderByWithAggregationInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: RoleRightCountOrderByAggregateInput
    _avg?: RoleRightAvgOrderByAggregateInput
    _max?: RoleRightMaxOrderByAggregateInput
    _min?: RoleRightMinOrderByAggregateInput
    _sum?: RoleRightSumOrderByAggregateInput
  }

  export type RoleRightScalarWhereWithAggregatesInput = {
    AND?: RoleRightScalarWhereWithAggregatesInput | RoleRightScalarWhereWithAggregatesInput[]
    OR?: RoleRightScalarWhereWithAggregatesInput[]
    NOT?: RoleRightScalarWhereWithAggregatesInput | RoleRightScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RoleRight"> | number
    roleId?: IntWithAggregatesFilter<"RoleRight"> | number
    rightId?: IntWithAggregatesFilter<"RoleRight"> | number
    permission?: StringWithAggregatesFilter<"RoleRight"> | string
    created?: DateTimeWithAggregatesFilter<"RoleRight"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"RoleRight"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"RoleRight"> | Date | string | null
  }

  export type UserRightWhereInput = {
    AND?: UserRightWhereInput | UserRightWhereInput[]
    OR?: UserRightWhereInput[]
    NOT?: UserRightWhereInput | UserRightWhereInput[]
    id?: IntFilter<"UserRight"> | number
    userId?: IntFilter<"UserRight"> | number
    rightId?: IntFilter<"UserRight"> | number
    permission?: StringFilter<"UserRight"> | string
    created?: DateTimeFilter<"UserRight"> | Date | string
    modified?: DateTimeFilter<"UserRight"> | Date | string
    expired?: DateTimeNullableFilter<"UserRight"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    right?: XOR<RightScalarRelationFilter, RightWhereInput>
  }

  export type UserRightOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    right?: RightOrderByWithRelationInput
    _relevance?: UserRightOrderByRelevanceInput
  }

  export type UserRightWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_rightId?: UserRightUserIdRightIdCompoundUniqueInput
    AND?: UserRightWhereInput | UserRightWhereInput[]
    OR?: UserRightWhereInput[]
    NOT?: UserRightWhereInput | UserRightWhereInput[]
    userId?: IntFilter<"UserRight"> | number
    rightId?: IntFilter<"UserRight"> | number
    permission?: StringFilter<"UserRight"> | string
    created?: DateTimeFilter<"UserRight"> | Date | string
    modified?: DateTimeFilter<"UserRight"> | Date | string
    expired?: DateTimeNullableFilter<"UserRight"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    right?: XOR<RightScalarRelationFilter, RightWhereInput>
  }, "id" | "userId_rightId">

  export type UserRightOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: UserRightCountOrderByAggregateInput
    _avg?: UserRightAvgOrderByAggregateInput
    _max?: UserRightMaxOrderByAggregateInput
    _min?: UserRightMinOrderByAggregateInput
    _sum?: UserRightSumOrderByAggregateInput
  }

  export type UserRightScalarWhereWithAggregatesInput = {
    AND?: UserRightScalarWhereWithAggregatesInput | UserRightScalarWhereWithAggregatesInput[]
    OR?: UserRightScalarWhereWithAggregatesInput[]
    NOT?: UserRightScalarWhereWithAggregatesInput | UserRightScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserRight"> | number
    userId?: IntWithAggregatesFilter<"UserRight"> | number
    rightId?: IntWithAggregatesFilter<"UserRight"> | number
    permission?: StringWithAggregatesFilter<"UserRight"> | string
    created?: DateTimeWithAggregatesFilter<"UserRight"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"UserRight"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"UserRight"> | Date | string | null
  }

  export type LogWhereInput = {
    AND?: LogWhereInput | LogWhereInput[]
    OR?: LogWhereInput[]
    NOT?: LogWhereInput | LogWhereInput[]
    id?: IntFilter<"Log"> | number
    userId?: IntFilter<"Log"> | number
    relationId?: IntNullableFilter<"Log"> | number | null
    valueFrom?: StringNullableFilter<"Log"> | string | null
    valueTo?: StringNullableFilter<"Log"> | string | null
    created?: DateTimeFilter<"Log"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type LogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrderInput | SortOrder
    valueFrom?: SortOrderInput | SortOrder
    valueTo?: SortOrderInput | SortOrder
    created?: SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: LogOrderByRelevanceInput
  }

  export type LogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LogWhereInput | LogWhereInput[]
    OR?: LogWhereInput[]
    NOT?: LogWhereInput | LogWhereInput[]
    userId?: IntFilter<"Log"> | number
    relationId?: IntNullableFilter<"Log"> | number | null
    valueFrom?: StringNullableFilter<"Log"> | string | null
    valueTo?: StringNullableFilter<"Log"> | string | null
    created?: DateTimeFilter<"Log"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type LogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrderInput | SortOrder
    valueFrom?: SortOrderInput | SortOrder
    valueTo?: SortOrderInput | SortOrder
    created?: SortOrder
    _count?: LogCountOrderByAggregateInput
    _avg?: LogAvgOrderByAggregateInput
    _max?: LogMaxOrderByAggregateInput
    _min?: LogMinOrderByAggregateInput
    _sum?: LogSumOrderByAggregateInput
  }

  export type LogScalarWhereWithAggregatesInput = {
    AND?: LogScalarWhereWithAggregatesInput | LogScalarWhereWithAggregatesInput[]
    OR?: LogScalarWhereWithAggregatesInput[]
    NOT?: LogScalarWhereWithAggregatesInput | LogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Log"> | number
    userId?: IntWithAggregatesFilter<"Log"> | number
    relationId?: IntNullableWithAggregatesFilter<"Log"> | number | null
    valueFrom?: StringNullableWithAggregatesFilter<"Log"> | string | null
    valueTo?: StringNullableWithAggregatesFilter<"Log"> | string | null
    created?: DateTimeWithAggregatesFilter<"Log"> | Date | string
  }

  export type ServiceWhereInput = {
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    id?: IntFilter<"Service"> | number
    name?: StringFilter<"Service"> | string
    description?: StringNullableFilter<"Service"> | string | null
    created?: DateTimeFilter<"Service"> | Date | string
    modified?: DateTimeFilter<"Service"> | Date | string
    expired?: DateTimeNullableFilter<"Service"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    relations?: RelationListRelationFilter
  }

  export type ServiceOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    kpiData?: KPI_DataOrderByRelationAggregateInput
    relations?: RelationOrderByRelationAggregateInput
    _relevance?: ServiceOrderByRelevanceInput
  }

  export type ServiceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: ServiceWhereInput | ServiceWhereInput[]
    OR?: ServiceWhereInput[]
    NOT?: ServiceWhereInput | ServiceWhereInput[]
    description?: StringNullableFilter<"Service"> | string | null
    created?: DateTimeFilter<"Service"> | Date | string
    modified?: DateTimeFilter<"Service"> | Date | string
    expired?: DateTimeNullableFilter<"Service"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    relations?: RelationListRelationFilter
  }, "id" | "name">

  export type ServiceOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: ServiceCountOrderByAggregateInput
    _avg?: ServiceAvgOrderByAggregateInput
    _max?: ServiceMaxOrderByAggregateInput
    _min?: ServiceMinOrderByAggregateInput
    _sum?: ServiceSumOrderByAggregateInput
  }

  export type ServiceScalarWhereWithAggregatesInput = {
    AND?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    OR?: ServiceScalarWhereWithAggregatesInput[]
    NOT?: ServiceScalarWhereWithAggregatesInput | ServiceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Service"> | number
    name?: StringWithAggregatesFilter<"Service"> | string
    description?: StringNullableWithAggregatesFilter<"Service"> | string | null
    created?: DateTimeWithAggregatesFilter<"Service"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Service"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Service"> | Date | string | null
  }

  export type KPI_DataWhereInput = {
    AND?: KPI_DataWhereInput | KPI_DataWhereInput[]
    OR?: KPI_DataWhereInput[]
    NOT?: KPI_DataWhereInput | KPI_DataWhereInput[]
    id?: IntFilter<"KPI_Data"> | number
    itemId?: IntFilter<"KPI_Data"> | number
    serviceId?: IntFilter<"KPI_Data"> | number
    userId?: IntFilter<"KPI_Data"> | number
    companyId?: IntFilter<"KPI_Data"> | number
    systemId?: IntFilter<"KPI_Data"> | number
    date?: DateTimeFilter<"KPI_Data"> | Date | string
    value?: FloatFilter<"KPI_Data"> | number
    approved?: BoolFilter<"KPI_Data"> | boolean
    approverId?: IntNullableFilter<"KPI_Data"> | number | null
    approvalDate?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
    created?: DateTimeFilter<"KPI_Data"> | Date | string
    modified?: DateTimeFilter<"KPI_Data"> | Date | string
    expired?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
    approver?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type KPI_DataOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    date?: SortOrder
    value?: SortOrder
    approved?: SortOrder
    approverId?: SortOrderInput | SortOrder
    approvalDate?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    item?: ItemOrderByWithRelationInput
    service?: ServiceOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    system?: SystemOrderByWithRelationInput
    approver?: UserOrderByWithRelationInput
  }

  export type KPI_DataWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: KPI_DataWhereInput | KPI_DataWhereInput[]
    OR?: KPI_DataWhereInput[]
    NOT?: KPI_DataWhereInput | KPI_DataWhereInput[]
    itemId?: IntFilter<"KPI_Data"> | number
    serviceId?: IntFilter<"KPI_Data"> | number
    userId?: IntFilter<"KPI_Data"> | number
    companyId?: IntFilter<"KPI_Data"> | number
    systemId?: IntFilter<"KPI_Data"> | number
    date?: DateTimeFilter<"KPI_Data"> | Date | string
    value?: FloatFilter<"KPI_Data"> | number
    approved?: BoolFilter<"KPI_Data"> | boolean
    approverId?: IntNullableFilter<"KPI_Data"> | number | null
    approvalDate?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
    created?: DateTimeFilter<"KPI_Data"> | Date | string
    modified?: DateTimeFilter<"KPI_Data"> | Date | string
    expired?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
    approver?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type KPI_DataOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    date?: SortOrder
    value?: SortOrder
    approved?: SortOrder
    approverId?: SortOrderInput | SortOrder
    approvalDate?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: KPI_DataCountOrderByAggregateInput
    _avg?: KPI_DataAvgOrderByAggregateInput
    _max?: KPI_DataMaxOrderByAggregateInput
    _min?: KPI_DataMinOrderByAggregateInput
    _sum?: KPI_DataSumOrderByAggregateInput
  }

  export type KPI_DataScalarWhereWithAggregatesInput = {
    AND?: KPI_DataScalarWhereWithAggregatesInput | KPI_DataScalarWhereWithAggregatesInput[]
    OR?: KPI_DataScalarWhereWithAggregatesInput[]
    NOT?: KPI_DataScalarWhereWithAggregatesInput | KPI_DataScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"KPI_Data"> | number
    itemId?: IntWithAggregatesFilter<"KPI_Data"> | number
    serviceId?: IntWithAggregatesFilter<"KPI_Data"> | number
    userId?: IntWithAggregatesFilter<"KPI_Data"> | number
    companyId?: IntWithAggregatesFilter<"KPI_Data"> | number
    systemId?: IntWithAggregatesFilter<"KPI_Data"> | number
    date?: DateTimeWithAggregatesFilter<"KPI_Data"> | Date | string
    value?: FloatWithAggregatesFilter<"KPI_Data"> | number
    approved?: BoolWithAggregatesFilter<"KPI_Data"> | boolean
    approverId?: IntNullableWithAggregatesFilter<"KPI_Data"> | number | null
    approvalDate?: DateTimeNullableWithAggregatesFilter<"KPI_Data"> | Date | string | null
    created?: DateTimeWithAggregatesFilter<"KPI_Data"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"KPI_Data"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"KPI_Data"> | Date | string | null
  }

  export type ItemWhereInput = {
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    id?: IntFilter<"Item"> | number
    code?: StringFilter<"Item"> | string
    name?: StringFilter<"Item"> | string
    description?: StringNullableFilter<"Item"> | string | null
    created?: DateTimeFilter<"Item"> | Date | string
    modified?: DateTimeFilter<"Item"> | Date | string
    expired?: DateTimeNullableFilter<"Item"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
  }

  export type ItemOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    kpiData?: KPI_DataOrderByRelationAggregateInput
    _relevance?: ItemOrderByRelevanceInput
  }

  export type ItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    code?: string
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    name?: StringFilter<"Item"> | string
    description?: StringNullableFilter<"Item"> | string | null
    created?: DateTimeFilter<"Item"> | Date | string
    modified?: DateTimeFilter<"Item"> | Date | string
    expired?: DateTimeNullableFilter<"Item"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
  }, "id" | "code">

  export type ItemOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: ItemCountOrderByAggregateInput
    _avg?: ItemAvgOrderByAggregateInput
    _max?: ItemMaxOrderByAggregateInput
    _min?: ItemMinOrderByAggregateInput
    _sum?: ItemSumOrderByAggregateInput
  }

  export type ItemScalarWhereWithAggregatesInput = {
    AND?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    OR?: ItemScalarWhereWithAggregatesInput[]
    NOT?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Item"> | number
    code?: StringWithAggregatesFilter<"Item"> | string
    name?: StringWithAggregatesFilter<"Item"> | string
    description?: StringNullableWithAggregatesFilter<"Item"> | string | null
    created?: DateTimeWithAggregatesFilter<"Item"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Item"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Item"> | Date | string | null
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: IntFilter<"Company"> | number
    name?: StringFilter<"Company"> | string
    description?: StringNullableFilter<"Company"> | string | null
    created?: DateTimeFilter<"Company"> | Date | string
    modified?: DateTimeFilter<"Company"> | Date | string
    expired?: DateTimeNullableFilter<"Company"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    systems?: SystemListRelationFilter
    incidents?: IncidentListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    kpiData?: KPI_DataOrderByRelationAggregateInput
    systems?: SystemOrderByRelationAggregateInput
    incidents?: IncidentOrderByRelationAggregateInput
    _relevance?: CompanyOrderByRelevanceInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    description?: StringNullableFilter<"Company"> | string | null
    created?: DateTimeFilter<"Company"> | Date | string
    modified?: DateTimeFilter<"Company"> | Date | string
    expired?: DateTimeNullableFilter<"Company"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    systems?: SystemListRelationFilter
    incidents?: IncidentListRelationFilter
  }, "id" | "name">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Company"> | number
    name?: StringWithAggregatesFilter<"Company"> | string
    description?: StringNullableWithAggregatesFilter<"Company"> | string | null
    created?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
  }

  export type SystemWhereInput = {
    AND?: SystemWhereInput | SystemWhereInput[]
    OR?: SystemWhereInput[]
    NOT?: SystemWhereInput | SystemWhereInput[]
    id?: IntFilter<"System"> | number
    name?: StringFilter<"System"> | string
    description?: StringNullableFilter<"System"> | string | null
    criticality?: StringNullableFilter<"System"> | string | null
    availability?: StringNullableFilter<"System"> | string | null
    recoverability?: StringNullableFilter<"System"> | string | null
    maintainability?: StringNullableFilter<"System"> | string | null
    integrity?: StringNullableFilter<"System"> | string | null
    confidentiality?: StringNullableFilter<"System"> | string | null
    analystId?: IntNullableFilter<"System"> | number | null
    applicationOperatorId?: IntNullableFilter<"System"> | number | null
    platformOperatorId?: IntNullableFilter<"System"> | number | null
    infrastructureOperatorId?: IntNullableFilter<"System"> | number | null
    companyId?: IntFilter<"System"> | number
    created?: DateTimeFilter<"System"> | Date | string
    modified?: DateTimeFilter<"System"> | Date | string
    expired?: DateTimeNullableFilter<"System"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    incidents?: IncidentListRelationFilter
    relations?: RelationListRelationFilter
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    analyst?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    applicationOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    platformOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    infrastructureOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type SystemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    recoverability?: SortOrderInput | SortOrder
    maintainability?: SortOrderInput | SortOrder
    integrity?: SortOrderInput | SortOrder
    confidentiality?: SortOrderInput | SortOrder
    analystId?: SortOrderInput | SortOrder
    applicationOperatorId?: SortOrderInput | SortOrder
    platformOperatorId?: SortOrderInput | SortOrder
    infrastructureOperatorId?: SortOrderInput | SortOrder
    companyId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    kpiData?: KPI_DataOrderByRelationAggregateInput
    incidents?: IncidentOrderByRelationAggregateInput
    relations?: RelationOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
    analyst?: UserOrderByWithRelationInput
    applicationOperator?: UserOrderByWithRelationInput
    platformOperator?: UserOrderByWithRelationInput
    infrastructureOperator?: UserOrderByWithRelationInput
    _relevance?: SystemOrderByRelevanceInput
  }

  export type SystemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: SystemWhereInput | SystemWhereInput[]
    OR?: SystemWhereInput[]
    NOT?: SystemWhereInput | SystemWhereInput[]
    description?: StringNullableFilter<"System"> | string | null
    criticality?: StringNullableFilter<"System"> | string | null
    availability?: StringNullableFilter<"System"> | string | null
    recoverability?: StringNullableFilter<"System"> | string | null
    maintainability?: StringNullableFilter<"System"> | string | null
    integrity?: StringNullableFilter<"System"> | string | null
    confidentiality?: StringNullableFilter<"System"> | string | null
    analystId?: IntNullableFilter<"System"> | number | null
    applicationOperatorId?: IntNullableFilter<"System"> | number | null
    platformOperatorId?: IntNullableFilter<"System"> | number | null
    infrastructureOperatorId?: IntNullableFilter<"System"> | number | null
    companyId?: IntFilter<"System"> | number
    created?: DateTimeFilter<"System"> | Date | string
    modified?: DateTimeFilter<"System"> | Date | string
    expired?: DateTimeNullableFilter<"System"> | Date | string | null
    kpiData?: KPI_DataListRelationFilter
    incidents?: IncidentListRelationFilter
    relations?: RelationListRelationFilter
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    analyst?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    applicationOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    platformOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    infrastructureOperator?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "name">

  export type SystemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    criticality?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    recoverability?: SortOrderInput | SortOrder
    maintainability?: SortOrderInput | SortOrder
    integrity?: SortOrderInput | SortOrder
    confidentiality?: SortOrderInput | SortOrder
    analystId?: SortOrderInput | SortOrder
    applicationOperatorId?: SortOrderInput | SortOrder
    platformOperatorId?: SortOrderInput | SortOrder
    infrastructureOperatorId?: SortOrderInput | SortOrder
    companyId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: SystemCountOrderByAggregateInput
    _avg?: SystemAvgOrderByAggregateInput
    _max?: SystemMaxOrderByAggregateInput
    _min?: SystemMinOrderByAggregateInput
    _sum?: SystemSumOrderByAggregateInput
  }

  export type SystemScalarWhereWithAggregatesInput = {
    AND?: SystemScalarWhereWithAggregatesInput | SystemScalarWhereWithAggregatesInput[]
    OR?: SystemScalarWhereWithAggregatesInput[]
    NOT?: SystemScalarWhereWithAggregatesInput | SystemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"System"> | number
    name?: StringWithAggregatesFilter<"System"> | string
    description?: StringNullableWithAggregatesFilter<"System"> | string | null
    criticality?: StringNullableWithAggregatesFilter<"System"> | string | null
    availability?: StringNullableWithAggregatesFilter<"System"> | string | null
    recoverability?: StringNullableWithAggregatesFilter<"System"> | string | null
    maintainability?: StringNullableWithAggregatesFilter<"System"> | string | null
    integrity?: StringNullableWithAggregatesFilter<"System"> | string | null
    confidentiality?: StringNullableWithAggregatesFilter<"System"> | string | null
    analystId?: IntNullableWithAggregatesFilter<"System"> | number | null
    applicationOperatorId?: IntNullableWithAggregatesFilter<"System"> | number | null
    platformOperatorId?: IntNullableWithAggregatesFilter<"System"> | number | null
    infrastructureOperatorId?: IntNullableWithAggregatesFilter<"System"> | number | null
    companyId?: IntWithAggregatesFilter<"System"> | number
    created?: DateTimeWithAggregatesFilter<"System"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"System"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"System"> | Date | string | null
  }

  export type RelationWhereInput = {
    AND?: RelationWhereInput | RelationWhereInput[]
    OR?: RelationWhereInput[]
    NOT?: RelationWhereInput | RelationWhereInput[]
    id?: IntFilter<"Relation"> | number
    serviceId?: IntFilter<"Relation"> | number
    systemId?: IntFilter<"Relation"> | number
    validFrom?: DateTimeFilter<"Relation"> | Date | string
    validTo?: DateTimeNullableFilter<"Relation"> | Date | string | null
    created?: DateTimeFilter<"Relation"> | Date | string
    modified?: DateTimeFilter<"Relation"> | Date | string
    expired?: DateTimeNullableFilter<"Relation"> | Date | string | null
    service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
  }

  export type RelationOrderByWithRelationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    service?: ServiceOrderByWithRelationInput
    system?: SystemOrderByWithRelationInput
  }

  export type RelationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RelationWhereInput | RelationWhereInput[]
    OR?: RelationWhereInput[]
    NOT?: RelationWhereInput | RelationWhereInput[]
    serviceId?: IntFilter<"Relation"> | number
    systemId?: IntFilter<"Relation"> | number
    validFrom?: DateTimeFilter<"Relation"> | Date | string
    validTo?: DateTimeNullableFilter<"Relation"> | Date | string | null
    created?: DateTimeFilter<"Relation"> | Date | string
    modified?: DateTimeFilter<"Relation"> | Date | string
    expired?: DateTimeNullableFilter<"Relation"> | Date | string | null
    service?: XOR<ServiceScalarRelationFilter, ServiceWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
  }, "id">

  export type RelationOrderByWithAggregationInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: RelationCountOrderByAggregateInput
    _avg?: RelationAvgOrderByAggregateInput
    _max?: RelationMaxOrderByAggregateInput
    _min?: RelationMinOrderByAggregateInput
    _sum?: RelationSumOrderByAggregateInput
  }

  export type RelationScalarWhereWithAggregatesInput = {
    AND?: RelationScalarWhereWithAggregatesInput | RelationScalarWhereWithAggregatesInput[]
    OR?: RelationScalarWhereWithAggregatesInput[]
    NOT?: RelationScalarWhereWithAggregatesInput | RelationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Relation"> | number
    serviceId?: IntWithAggregatesFilter<"Relation"> | number
    systemId?: IntWithAggregatesFilter<"Relation"> | number
    validFrom?: DateTimeWithAggregatesFilter<"Relation"> | Date | string
    validTo?: DateTimeNullableWithAggregatesFilter<"Relation"> | Date | string | null
    created?: DateTimeWithAggregatesFilter<"Relation"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Relation"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Relation"> | Date | string | null
  }

  export type IncidentWhereInput = {
    AND?: IncidentWhereInput | IncidentWhereInput[]
    OR?: IncidentWhereInput[]
    NOT?: IncidentWhereInput | IncidentWhereInput[]
    id?: IntFilter<"Incident"> | number
    ready?: BoolFilter<"Incident"> | boolean
    reporterId?: IntFilter<"Incident"> | number
    detectionTime?: DateTimeFilter<"Incident"> | Date | string
    notificationId?: StringNullableFilter<"Incident"> | string | null
    beginning?: DateTimeFilter<"Incident"> | Date | string
    end?: DateTimeFilter<"Incident"> | Date | string
    type?: StringFilter<"Incident"> | string
    systemId?: IntFilter<"Incident"> | number
    companyId?: IntFilter<"Incident"> | number
    urgency?: StringFilter<"Incident"> | string
    criticality?: StringFilter<"Incident"> | string
    description?: StringFilter<"Incident"> | string
    creatorId?: IntFilter<"Incident"> | number
    handlerId?: IntFilter<"Incident"> | number
    cause?: StringNullableFilter<"Incident"> | string | null
    measure?: StringNullableFilter<"Incident"> | string | null
    notification?: StringNullableFilter<"Incident"> | string | null
    created?: DateTimeFilter<"Incident"> | Date | string
    modified?: DateTimeFilter<"Incident"> | Date | string
    expired?: DateTimeNullableFilter<"Incident"> | Date | string | null
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    handler?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type IncidentOrderByWithRelationInput = {
    id?: SortOrder
    ready?: SortOrder
    reporterId?: SortOrder
    detectionTime?: SortOrder
    notificationId?: SortOrderInput | SortOrder
    beginning?: SortOrder
    end?: SortOrder
    type?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    urgency?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
    cause?: SortOrderInput | SortOrder
    measure?: SortOrderInput | SortOrder
    notification?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    reporter?: UserOrderByWithRelationInput
    system?: SystemOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    creator?: UserOrderByWithRelationInput
    handler?: UserOrderByWithRelationInput
    _relevance?: IncidentOrderByRelevanceInput
  }

  export type IncidentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: IncidentWhereInput | IncidentWhereInput[]
    OR?: IncidentWhereInput[]
    NOT?: IncidentWhereInput | IncidentWhereInput[]
    ready?: BoolFilter<"Incident"> | boolean
    reporterId?: IntFilter<"Incident"> | number
    detectionTime?: DateTimeFilter<"Incident"> | Date | string
    notificationId?: StringNullableFilter<"Incident"> | string | null
    beginning?: DateTimeFilter<"Incident"> | Date | string
    end?: DateTimeFilter<"Incident"> | Date | string
    type?: StringFilter<"Incident"> | string
    systemId?: IntFilter<"Incident"> | number
    companyId?: IntFilter<"Incident"> | number
    urgency?: StringFilter<"Incident"> | string
    criticality?: StringFilter<"Incident"> | string
    description?: StringFilter<"Incident"> | string
    creatorId?: IntFilter<"Incident"> | number
    handlerId?: IntFilter<"Incident"> | number
    cause?: StringNullableFilter<"Incident"> | string | null
    measure?: StringNullableFilter<"Incident"> | string | null
    notification?: StringNullableFilter<"Incident"> | string | null
    created?: DateTimeFilter<"Incident"> | Date | string
    modified?: DateTimeFilter<"Incident"> | Date | string
    expired?: DateTimeNullableFilter<"Incident"> | Date | string | null
    reporter?: XOR<UserScalarRelationFilter, UserWhereInput>
    system?: XOR<SystemScalarRelationFilter, SystemWhereInput>
    company?: XOR<CompanyScalarRelationFilter, CompanyWhereInput>
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    handler?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type IncidentOrderByWithAggregationInput = {
    id?: SortOrder
    ready?: SortOrder
    reporterId?: SortOrder
    detectionTime?: SortOrder
    notificationId?: SortOrderInput | SortOrder
    beginning?: SortOrder
    end?: SortOrder
    type?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    urgency?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
    cause?: SortOrderInput | SortOrder
    measure?: SortOrderInput | SortOrder
    notification?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: IncidentCountOrderByAggregateInput
    _avg?: IncidentAvgOrderByAggregateInput
    _max?: IncidentMaxOrderByAggregateInput
    _min?: IncidentMinOrderByAggregateInput
    _sum?: IncidentSumOrderByAggregateInput
  }

  export type IncidentScalarWhereWithAggregatesInput = {
    AND?: IncidentScalarWhereWithAggregatesInput | IncidentScalarWhereWithAggregatesInput[]
    OR?: IncidentScalarWhereWithAggregatesInput[]
    NOT?: IncidentScalarWhereWithAggregatesInput | IncidentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Incident"> | number
    ready?: BoolWithAggregatesFilter<"Incident"> | boolean
    reporterId?: IntWithAggregatesFilter<"Incident"> | number
    detectionTime?: DateTimeWithAggregatesFilter<"Incident"> | Date | string
    notificationId?: StringNullableWithAggregatesFilter<"Incident"> | string | null
    beginning?: DateTimeWithAggregatesFilter<"Incident"> | Date | string
    end?: DateTimeWithAggregatesFilter<"Incident"> | Date | string
    type?: StringWithAggregatesFilter<"Incident"> | string
    systemId?: IntWithAggregatesFilter<"Incident"> | number
    companyId?: IntWithAggregatesFilter<"Incident"> | number
    urgency?: StringWithAggregatesFilter<"Incident"> | string
    criticality?: StringWithAggregatesFilter<"Incident"> | string
    description?: StringWithAggregatesFilter<"Incident"> | string
    creatorId?: IntWithAggregatesFilter<"Incident"> | number
    handlerId?: IntWithAggregatesFilter<"Incident"> | number
    cause?: StringNullableWithAggregatesFilter<"Incident"> | string | null
    measure?: StringNullableWithAggregatesFilter<"Incident"> | string | null
    notification?: StringNullableWithAggregatesFilter<"Incident"> | string | null
    created?: DateTimeWithAggregatesFilter<"Incident"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Incident"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Incident"> | Date | string | null
  }

  export type GuideWhereInput = {
    AND?: GuideWhereInput | GuideWhereInput[]
    OR?: GuideWhereInput[]
    NOT?: GuideWhereInput | GuideWhereInput[]
    id?: IntFilter<"Guide"> | number
    column?: StringFilter<"Guide"> | string
    description?: StringNullableFilter<"Guide"> | string | null
    responsible?: StringNullableFilter<"Guide"> | string | null
    created?: DateTimeFilter<"Guide"> | Date | string
    modified?: DateTimeFilter<"Guide"> | Date | string
    expired?: DateTimeNullableFilter<"Guide"> | Date | string | null
  }

  export type GuideOrderByWithRelationInput = {
    id?: SortOrder
    column?: SortOrder
    description?: SortOrderInput | SortOrder
    responsible?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _relevance?: GuideOrderByRelevanceInput
  }

  export type GuideWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: GuideWhereInput | GuideWhereInput[]
    OR?: GuideWhereInput[]
    NOT?: GuideWhereInput | GuideWhereInput[]
    column?: StringFilter<"Guide"> | string
    description?: StringNullableFilter<"Guide"> | string | null
    responsible?: StringNullableFilter<"Guide"> | string | null
    created?: DateTimeFilter<"Guide"> | Date | string
    modified?: DateTimeFilter<"Guide"> | Date | string
    expired?: DateTimeNullableFilter<"Guide"> | Date | string | null
  }, "id">

  export type GuideOrderByWithAggregationInput = {
    id?: SortOrder
    column?: SortOrder
    description?: SortOrderInput | SortOrder
    responsible?: SortOrderInput | SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrderInput | SortOrder
    _count?: GuideCountOrderByAggregateInput
    _avg?: GuideAvgOrderByAggregateInput
    _max?: GuideMaxOrderByAggregateInput
    _min?: GuideMinOrderByAggregateInput
    _sum?: GuideSumOrderByAggregateInput
  }

  export type GuideScalarWhereWithAggregatesInput = {
    AND?: GuideScalarWhereWithAggregatesInput | GuideScalarWhereWithAggregatesInput[]
    OR?: GuideScalarWhereWithAggregatesInput[]
    NOT?: GuideScalarWhereWithAggregatesInput | GuideScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Guide"> | number
    column?: StringWithAggregatesFilter<"Guide"> | string
    description?: StringNullableWithAggregatesFilter<"Guide"> | string | null
    responsible?: StringNullableWithAggregatesFilter<"Guide"> | string | null
    created?: DateTimeWithAggregatesFilter<"Guide"> | Date | string
    modified?: DateTimeWithAggregatesFilter<"Guide"> | Date | string
    expired?: DateTimeNullableWithAggregatesFilter<"Guide"> | Date | string | null
  }

  export type UserCreateInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUpdateInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleCreateInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutRoleInput
    roleRights?: RoleRightCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutRoleInput
    roleRights?: RoleRightUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutRoleNestedInput
    roleRights?: RoleRightUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutRoleNestedInput
    roleRights?: RoleRightUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RightCreateInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightCreateNestedManyWithoutRightInput
    userRights?: UserRightCreateNestedManyWithoutRightInput
  }

  export type RightUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightUncheckedCreateNestedManyWithoutRightInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutRightInput
  }

  export type RightUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUpdateManyWithoutRightNestedInput
    userRights?: UserRightUpdateManyWithoutRightNestedInput
  }

  export type RightUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUncheckedUpdateManyWithoutRightNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutRightNestedInput
  }

  export type RightCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RightUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RightUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleCreateInput = {
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    user: UserCreateNestedOneWithoutUserRolesInput
    role: RoleCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleUncheckedCreateInput = {
    id?: number
    userId: number
    roleId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleUpdateInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserRolesNestedInput
    role?: RoleUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleCreateManyInput = {
    id?: number
    userId: number
    roleId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleUpdateManyMutationInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightCreateInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    role: RoleCreateNestedOneWithoutRoleRightsInput
    right: RightCreateNestedOneWithoutRoleRightsInput
  }

  export type RoleRightUncheckedCreateInput = {
    id?: number
    roleId: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightUpdateInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: RoleUpdateOneRequiredWithoutRoleRightsNestedInput
    right?: RightUpdateOneRequiredWithoutRoleRightsNestedInput
  }

  export type RoleRightUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightCreateManyInput = {
    id?: number
    roleId: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightUpdateManyMutationInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightCreateInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    user: UserCreateNestedOneWithoutUserRightsInput
    right: RightCreateNestedOneWithoutUserRightsInput
  }

  export type UserRightUncheckedCreateInput = {
    id?: number
    userId: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightUpdateInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserRightsNestedInput
    right?: RightUpdateOneRequiredWithoutUserRightsNestedInput
  }

  export type UserRightUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightCreateManyInput = {
    id?: number
    userId: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightUpdateManyMutationInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LogCreateInput = {
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
    user: UserCreateNestedOneWithoutLogsInput
  }

  export type LogUncheckedCreateInput = {
    id?: number
    userId: number
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
  }

  export type LogUpdateInput = {
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutLogsNestedInput
  }

  export type LogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogCreateManyInput = {
    id?: number
    userId: number
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
  }

  export type LogUpdateManyMutationInput = {
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ServiceCreateInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutServiceInput
    relations?: RelationCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutServiceInput
    relations?: RelationUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutServiceNestedInput
    relations?: RelationUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutServiceNestedInput
    relations?: RelationUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type ServiceCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type ServiceUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    service: ServiceCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateManyInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateManyMutationInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemCreateInput = {
    code: string
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateInput = {
    id?: number
    code: string
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemCreateManyInput = {
    id?: number
    code: string
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type ItemUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CompanyCreateInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutCompanyInput
    systems?: SystemCreateNestedManyWithoutCompanyInput
    incidents?: IncidentCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutCompanyInput
    systems?: SystemUncheckedCreateNestedManyWithoutCompanyInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutCompanyNestedInput
    systems?: SystemUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutCompanyNestedInput
    systems?: SystemUncheckedUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type CompanyUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemCreateInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationCreateInput = {
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    service: ServiceCreateNestedOneWithoutRelationsInput
    system: SystemCreateNestedOneWithoutRelationsInput
  }

  export type RelationUncheckedCreateInput = {
    id?: number
    serviceId: number
    systemId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationUpdateInput = {
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    service?: ServiceUpdateOneRequiredWithoutRelationsNestedInput
    system?: SystemUpdateOneRequiredWithoutRelationsNestedInput
  }

  export type RelationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationCreateManyInput = {
    id?: number
    serviceId: number
    systemId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationUpdateManyMutationInput = {
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentCreateInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    reporter: UserCreateNestedOneWithoutReportedIncidentsInput
    system: SystemCreateNestedOneWithoutIncidentsInput
    company: CompanyCreateNestedOneWithoutIncidentsInput
    creator: UserCreateNestedOneWithoutCreatedIncidentsInput
    handler: UserCreateNestedOneWithoutHandledIncidentsInput
  }

  export type IncidentUncheckedCreateInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentUpdateInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reporter?: UserUpdateOneRequiredWithoutReportedIncidentsNestedInput
    system?: SystemUpdateOneRequiredWithoutIncidentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutIncidentsNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput
    handler?: UserUpdateOneRequiredWithoutHandledIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentCreateManyInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentUpdateManyMutationInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GuideCreateInput = {
    column: string
    description?: string | null
    responsible?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type GuideUncheckedCreateInput = {
    id?: number
    column: string
    description?: string | null
    responsible?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type GuideUpdateInput = {
    column?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    responsible?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GuideUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    column?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    responsible?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GuideCreateManyInput = {
    id?: number
    column: string
    description?: string | null
    responsible?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type GuideUpdateManyMutationInput = {
    column?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    responsible?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type GuideUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    column?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    responsible?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UserRoleListRelationFilter = {
    every?: UserRoleWhereInput
    some?: UserRoleWhereInput
    none?: UserRoleWhereInput
  }

  export type UserRightListRelationFilter = {
    every?: UserRightWhereInput
    some?: UserRightWhereInput
    none?: UserRightWhereInput
  }

  export type LogListRelationFilter = {
    every?: LogWhereInput
    some?: LogWhereInput
    none?: LogWhereInput
  }

  export type KPI_DataListRelationFilter = {
    every?: KPI_DataWhereInput
    some?: KPI_DataWhereInput
    none?: KPI_DataWhereInput
  }

  export type IncidentListRelationFilter = {
    every?: IncidentWhereInput
    some?: IncidentWhereInput
    none?: IncidentWhereInput
  }

  export type SystemListRelationFilter = {
    every?: SystemWhereInput
    some?: SystemWhereInput
    none?: SystemWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserRoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserRightOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KPI_DataOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type IncidentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SystemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    login?: SortOrder
    name?: SortOrder
    description?: SortOrder
    email?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    login?: SortOrder
    name?: SortOrder
    description?: SortOrder
    email?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    login?: SortOrder
    name?: SortOrder
    description?: SortOrder
    email?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type RoleRightListRelationFilter = {
    every?: RoleRightWhereInput
    some?: RoleRightWhereInput
    none?: RoleRightWhereInput
  }

  export type RoleRightOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleOrderByRelevanceInput = {
    fields: RoleOrderByRelevanceFieldEnum | RoleOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RightOrderByRelevanceInput = {
    fields: RightOrderByRelevanceFieldEnum | RightOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RightCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RightAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RightMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RightMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RightSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type UserRoleUserIdRoleIdCompoundUniqueInput = {
    userId: number
    roleId: number
  }

  export type UserRoleCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRoleAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type UserRoleMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRoleMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRoleSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type RightScalarRelationFilter = {
    is?: RightWhereInput
    isNot?: RightWhereInput
  }

  export type RoleRightOrderByRelevanceInput = {
    fields: RoleRightOrderByRelevanceFieldEnum | RoleRightOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RoleRightRoleIdRightIdCompoundUniqueInput = {
    roleId: number
    rightId: number
  }

  export type RoleRightCountOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleRightAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
  }

  export type RoleRightMaxOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleRightMinOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RoleRightSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    rightId?: SortOrder
  }

  export type UserRightOrderByRelevanceInput = {
    fields: UserRightOrderByRelevanceFieldEnum | UserRightOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserRightUserIdRightIdCompoundUniqueInput = {
    userId: number
    rightId: number
  }

  export type UserRightCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRightAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
  }

  export type UserRightMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRightMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
    permission?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type UserRightSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    rightId?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type LogOrderByRelevanceInput = {
    fields: LogOrderByRelevanceFieldEnum | LogOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type LogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrder
    valueFrom?: SortOrder
    valueTo?: SortOrder
    created?: SortOrder
  }

  export type LogAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrder
  }

  export type LogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrder
    valueFrom?: SortOrder
    valueTo?: SortOrder
    created?: SortOrder
  }

  export type LogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrder
    valueFrom?: SortOrder
    valueTo?: SortOrder
    created?: SortOrder
  }

  export type LogSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    relationId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type RelationListRelationFilter = {
    every?: RelationWhereInput
    some?: RelationWhereInput
    none?: RelationWhereInput
  }

  export type RelationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ServiceOrderByRelevanceInput = {
    fields: ServiceOrderByRelevanceFieldEnum | ServiceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ServiceCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ServiceAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ServiceMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ServiceMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ServiceSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ItemScalarRelationFilter = {
    is?: ItemWhereInput
    isNot?: ItemWhereInput
  }

  export type ServiceScalarRelationFilter = {
    is?: ServiceWhereInput
    isNot?: ServiceWhereInput
  }

  export type CompanyScalarRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type SystemScalarRelationFilter = {
    is?: SystemWhereInput
    isNot?: SystemWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type KPI_DataCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    date?: SortOrder
    value?: SortOrder
    approved?: SortOrder
    approverId?: SortOrder
    approvalDate?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type KPI_DataAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    value?: SortOrder
    approverId?: SortOrder
  }

  export type KPI_DataMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    date?: SortOrder
    value?: SortOrder
    approved?: SortOrder
    approverId?: SortOrder
    approvalDate?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type KPI_DataMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    date?: SortOrder
    value?: SortOrder
    approved?: SortOrder
    approverId?: SortOrder
    approvalDate?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type KPI_DataSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    serviceId?: SortOrder
    userId?: SortOrder
    companyId?: SortOrder
    systemId?: SortOrder
    value?: SortOrder
    approverId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ItemOrderByRelevanceInput = {
    fields: ItemOrderByRelevanceFieldEnum | ItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ItemCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ItemAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ItemMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ItemMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type ItemSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CompanyOrderByRelevanceInput = {
    fields: CompanyOrderByRelevanceFieldEnum | CompanyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SystemOrderByRelevanceInput = {
    fields: SystemOrderByRelevanceFieldEnum | SystemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SystemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    criticality?: SortOrder
    availability?: SortOrder
    recoverability?: SortOrder
    maintainability?: SortOrder
    integrity?: SortOrder
    confidentiality?: SortOrder
    analystId?: SortOrder
    applicationOperatorId?: SortOrder
    platformOperatorId?: SortOrder
    infrastructureOperatorId?: SortOrder
    companyId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type SystemAvgOrderByAggregateInput = {
    id?: SortOrder
    analystId?: SortOrder
    applicationOperatorId?: SortOrder
    platformOperatorId?: SortOrder
    infrastructureOperatorId?: SortOrder
    companyId?: SortOrder
  }

  export type SystemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    criticality?: SortOrder
    availability?: SortOrder
    recoverability?: SortOrder
    maintainability?: SortOrder
    integrity?: SortOrder
    confidentiality?: SortOrder
    analystId?: SortOrder
    applicationOperatorId?: SortOrder
    platformOperatorId?: SortOrder
    infrastructureOperatorId?: SortOrder
    companyId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type SystemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    criticality?: SortOrder
    availability?: SortOrder
    recoverability?: SortOrder
    maintainability?: SortOrder
    integrity?: SortOrder
    confidentiality?: SortOrder
    analystId?: SortOrder
    applicationOperatorId?: SortOrder
    platformOperatorId?: SortOrder
    infrastructureOperatorId?: SortOrder
    companyId?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type SystemSumOrderByAggregateInput = {
    id?: SortOrder
    analystId?: SortOrder
    applicationOperatorId?: SortOrder
    platformOperatorId?: SortOrder
    infrastructureOperatorId?: SortOrder
    companyId?: SortOrder
  }

  export type RelationCountOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RelationAvgOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
  }

  export type RelationMaxOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RelationMinOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type RelationSumOrderByAggregateInput = {
    id?: SortOrder
    serviceId?: SortOrder
    systemId?: SortOrder
  }

  export type IncidentOrderByRelevanceInput = {
    fields: IncidentOrderByRelevanceFieldEnum | IncidentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type IncidentCountOrderByAggregateInput = {
    id?: SortOrder
    ready?: SortOrder
    reporterId?: SortOrder
    detectionTime?: SortOrder
    notificationId?: SortOrder
    beginning?: SortOrder
    end?: SortOrder
    type?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    urgency?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
    cause?: SortOrder
    measure?: SortOrder
    notification?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type IncidentAvgOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
  }

  export type IncidentMaxOrderByAggregateInput = {
    id?: SortOrder
    ready?: SortOrder
    reporterId?: SortOrder
    detectionTime?: SortOrder
    notificationId?: SortOrder
    beginning?: SortOrder
    end?: SortOrder
    type?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    urgency?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
    cause?: SortOrder
    measure?: SortOrder
    notification?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type IncidentMinOrderByAggregateInput = {
    id?: SortOrder
    ready?: SortOrder
    reporterId?: SortOrder
    detectionTime?: SortOrder
    notificationId?: SortOrder
    beginning?: SortOrder
    end?: SortOrder
    type?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    urgency?: SortOrder
    criticality?: SortOrder
    description?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
    cause?: SortOrder
    measure?: SortOrder
    notification?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type IncidentSumOrderByAggregateInput = {
    id?: SortOrder
    reporterId?: SortOrder
    systemId?: SortOrder
    companyId?: SortOrder
    creatorId?: SortOrder
    handlerId?: SortOrder
  }

  export type GuideOrderByRelevanceInput = {
    fields: GuideOrderByRelevanceFieldEnum | GuideOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type GuideCountOrderByAggregateInput = {
    id?: SortOrder
    column?: SortOrder
    description?: SortOrder
    responsible?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type GuideAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type GuideMaxOrderByAggregateInput = {
    id?: SortOrder
    column?: SortOrder
    description?: SortOrder
    responsible?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type GuideMinOrderByAggregateInput = {
    id?: SortOrder
    column?: SortOrder
    description?: SortOrder
    responsible?: SortOrder
    created?: SortOrder
    modified?: SortOrder
    expired?: SortOrder
  }

  export type GuideSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserRoleCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput> | UserRoleCreateWithoutUserInput[] | UserRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutUserInput | UserRoleCreateOrConnectWithoutUserInput[]
    createMany?: UserRoleCreateManyUserInputEnvelope
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
  }

  export type UserRightCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput> | UserRightCreateWithoutUserInput[] | UserRightUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutUserInput | UserRightCreateOrConnectWithoutUserInput[]
    createMany?: UserRightCreateManyUserInputEnvelope
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
  }

  export type LogCreateNestedManyWithoutUserInput = {
    create?: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput> | LogCreateWithoutUserInput[] | LogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogCreateOrConnectWithoutUserInput | LogCreateOrConnectWithoutUserInput[]
    createMany?: LogCreateManyUserInputEnvelope
    connect?: LogWhereUniqueInput | LogWhereUniqueInput[]
  }

  export type KPI_DataCreateNestedManyWithoutUserInput = {
    create?: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput> | KPI_DataCreateWithoutUserInput[] | KPI_DataUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutUserInput | KPI_DataCreateOrConnectWithoutUserInput[]
    createMany?: KPI_DataCreateManyUserInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type KPI_DataCreateNestedManyWithoutApproverInput = {
    create?: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput> | KPI_DataCreateWithoutApproverInput[] | KPI_DataUncheckedCreateWithoutApproverInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutApproverInput | KPI_DataCreateOrConnectWithoutApproverInput[]
    createMany?: KPI_DataCreateManyApproverInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type IncidentCreateNestedManyWithoutReporterInput = {
    create?: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput> | IncidentCreateWithoutReporterInput[] | IncidentUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutReporterInput | IncidentCreateOrConnectWithoutReporterInput[]
    createMany?: IncidentCreateManyReporterInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type IncidentCreateNestedManyWithoutCreatorInput = {
    create?: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput> | IncidentCreateWithoutCreatorInput[] | IncidentUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCreatorInput | IncidentCreateOrConnectWithoutCreatorInput[]
    createMany?: IncidentCreateManyCreatorInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type IncidentCreateNestedManyWithoutHandlerInput = {
    create?: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput> | IncidentCreateWithoutHandlerInput[] | IncidentUncheckedCreateWithoutHandlerInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutHandlerInput | IncidentCreateOrConnectWithoutHandlerInput[]
    createMany?: IncidentCreateManyHandlerInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type SystemCreateNestedManyWithoutAnalystInput = {
    create?: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput> | SystemCreateWithoutAnalystInput[] | SystemUncheckedCreateWithoutAnalystInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutAnalystInput | SystemCreateOrConnectWithoutAnalystInput[]
    createMany?: SystemCreateManyAnalystInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemCreateNestedManyWithoutApplicationOperatorInput = {
    create?: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput> | SystemCreateWithoutApplicationOperatorInput[] | SystemUncheckedCreateWithoutApplicationOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutApplicationOperatorInput | SystemCreateOrConnectWithoutApplicationOperatorInput[]
    createMany?: SystemCreateManyApplicationOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemCreateNestedManyWithoutPlatformOperatorInput = {
    create?: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput> | SystemCreateWithoutPlatformOperatorInput[] | SystemUncheckedCreateWithoutPlatformOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutPlatformOperatorInput | SystemCreateOrConnectWithoutPlatformOperatorInput[]
    createMany?: SystemCreateManyPlatformOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemCreateNestedManyWithoutInfrastructureOperatorInput = {
    create?: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput> | SystemCreateWithoutInfrastructureOperatorInput[] | SystemUncheckedCreateWithoutInfrastructureOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutInfrastructureOperatorInput | SystemCreateOrConnectWithoutInfrastructureOperatorInput[]
    createMany?: SystemCreateManyInfrastructureOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type UserRoleUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput> | UserRoleCreateWithoutUserInput[] | UserRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutUserInput | UserRoleCreateOrConnectWithoutUserInput[]
    createMany?: UserRoleCreateManyUserInputEnvelope
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
  }

  export type UserRightUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput> | UserRightCreateWithoutUserInput[] | UserRightUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutUserInput | UserRightCreateOrConnectWithoutUserInput[]
    createMany?: UserRightCreateManyUserInputEnvelope
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
  }

  export type LogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput> | LogCreateWithoutUserInput[] | LogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogCreateOrConnectWithoutUserInput | LogCreateOrConnectWithoutUserInput[]
    createMany?: LogCreateManyUserInputEnvelope
    connect?: LogWhereUniqueInput | LogWhereUniqueInput[]
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput> | KPI_DataCreateWithoutUserInput[] | KPI_DataUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutUserInput | KPI_DataCreateOrConnectWithoutUserInput[]
    createMany?: KPI_DataCreateManyUserInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutApproverInput = {
    create?: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput> | KPI_DataCreateWithoutApproverInput[] | KPI_DataUncheckedCreateWithoutApproverInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutApproverInput | KPI_DataCreateOrConnectWithoutApproverInput[]
    createMany?: KPI_DataCreateManyApproverInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type IncidentUncheckedCreateNestedManyWithoutReporterInput = {
    create?: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput> | IncidentCreateWithoutReporterInput[] | IncidentUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutReporterInput | IncidentCreateOrConnectWithoutReporterInput[]
    createMany?: IncidentCreateManyReporterInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type IncidentUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput> | IncidentCreateWithoutCreatorInput[] | IncidentUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCreatorInput | IncidentCreateOrConnectWithoutCreatorInput[]
    createMany?: IncidentCreateManyCreatorInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type IncidentUncheckedCreateNestedManyWithoutHandlerInput = {
    create?: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput> | IncidentCreateWithoutHandlerInput[] | IncidentUncheckedCreateWithoutHandlerInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutHandlerInput | IncidentCreateOrConnectWithoutHandlerInput[]
    createMany?: IncidentCreateManyHandlerInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type SystemUncheckedCreateNestedManyWithoutAnalystInput = {
    create?: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput> | SystemCreateWithoutAnalystInput[] | SystemUncheckedCreateWithoutAnalystInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutAnalystInput | SystemCreateOrConnectWithoutAnalystInput[]
    createMany?: SystemCreateManyAnalystInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput = {
    create?: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput> | SystemCreateWithoutApplicationOperatorInput[] | SystemUncheckedCreateWithoutApplicationOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutApplicationOperatorInput | SystemCreateOrConnectWithoutApplicationOperatorInput[]
    createMany?: SystemCreateManyApplicationOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput = {
    create?: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput> | SystemCreateWithoutPlatformOperatorInput[] | SystemUncheckedCreateWithoutPlatformOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutPlatformOperatorInput | SystemCreateOrConnectWithoutPlatformOperatorInput[]
    createMany?: SystemCreateManyPlatformOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput = {
    create?: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput> | SystemCreateWithoutInfrastructureOperatorInput[] | SystemUncheckedCreateWithoutInfrastructureOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutInfrastructureOperatorInput | SystemCreateOrConnectWithoutInfrastructureOperatorInput[]
    createMany?: SystemCreateManyInfrastructureOperatorInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserRoleUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput> | UserRoleCreateWithoutUserInput[] | UserRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutUserInput | UserRoleCreateOrConnectWithoutUserInput[]
    upsert?: UserRoleUpsertWithWhereUniqueWithoutUserInput | UserRoleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRoleCreateManyUserInputEnvelope
    set?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    disconnect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    delete?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    update?: UserRoleUpdateWithWhereUniqueWithoutUserInput | UserRoleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRoleUpdateManyWithWhereWithoutUserInput | UserRoleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
  }

  export type UserRightUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput> | UserRightCreateWithoutUserInput[] | UserRightUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutUserInput | UserRightCreateOrConnectWithoutUserInput[]
    upsert?: UserRightUpsertWithWhereUniqueWithoutUserInput | UserRightUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRightCreateManyUserInputEnvelope
    set?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    disconnect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    delete?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    update?: UserRightUpdateWithWhereUniqueWithoutUserInput | UserRightUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRightUpdateManyWithWhereWithoutUserInput | UserRightUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
  }

  export type LogUpdateManyWithoutUserNestedInput = {
    create?: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput> | LogCreateWithoutUserInput[] | LogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogCreateOrConnectWithoutUserInput | LogCreateOrConnectWithoutUserInput[]
    upsert?: LogUpsertWithWhereUniqueWithoutUserInput | LogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LogCreateManyUserInputEnvelope
    set?: LogWhereUniqueInput | LogWhereUniqueInput[]
    disconnect?: LogWhereUniqueInput | LogWhereUniqueInput[]
    delete?: LogWhereUniqueInput | LogWhereUniqueInput[]
    connect?: LogWhereUniqueInput | LogWhereUniqueInput[]
    update?: LogUpdateWithWhereUniqueWithoutUserInput | LogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LogUpdateManyWithWhereWithoutUserInput | LogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LogScalarWhereInput | LogScalarWhereInput[]
  }

  export type KPI_DataUpdateManyWithoutUserNestedInput = {
    create?: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput> | KPI_DataCreateWithoutUserInput[] | KPI_DataUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutUserInput | KPI_DataCreateOrConnectWithoutUserInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutUserInput | KPI_DataUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: KPI_DataCreateManyUserInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutUserInput | KPI_DataUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutUserInput | KPI_DataUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type KPI_DataUpdateManyWithoutApproverNestedInput = {
    create?: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput> | KPI_DataCreateWithoutApproverInput[] | KPI_DataUncheckedCreateWithoutApproverInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutApproverInput | KPI_DataCreateOrConnectWithoutApproverInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutApproverInput | KPI_DataUpsertWithWhereUniqueWithoutApproverInput[]
    createMany?: KPI_DataCreateManyApproverInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutApproverInput | KPI_DataUpdateWithWhereUniqueWithoutApproverInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutApproverInput | KPI_DataUpdateManyWithWhereWithoutApproverInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type IncidentUpdateManyWithoutReporterNestedInput = {
    create?: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput> | IncidentCreateWithoutReporterInput[] | IncidentUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutReporterInput | IncidentCreateOrConnectWithoutReporterInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutReporterInput | IncidentUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: IncidentCreateManyReporterInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutReporterInput | IncidentUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutReporterInput | IncidentUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type IncidentUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput> | IncidentCreateWithoutCreatorInput[] | IncidentUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCreatorInput | IncidentCreateOrConnectWithoutCreatorInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutCreatorInput | IncidentUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: IncidentCreateManyCreatorInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutCreatorInput | IncidentUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutCreatorInput | IncidentUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type IncidentUpdateManyWithoutHandlerNestedInput = {
    create?: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput> | IncidentCreateWithoutHandlerInput[] | IncidentUncheckedCreateWithoutHandlerInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutHandlerInput | IncidentCreateOrConnectWithoutHandlerInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutHandlerInput | IncidentUpsertWithWhereUniqueWithoutHandlerInput[]
    createMany?: IncidentCreateManyHandlerInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutHandlerInput | IncidentUpdateWithWhereUniqueWithoutHandlerInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutHandlerInput | IncidentUpdateManyWithWhereWithoutHandlerInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type SystemUpdateManyWithoutAnalystNestedInput = {
    create?: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput> | SystemCreateWithoutAnalystInput[] | SystemUncheckedCreateWithoutAnalystInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutAnalystInput | SystemCreateOrConnectWithoutAnalystInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutAnalystInput | SystemUpsertWithWhereUniqueWithoutAnalystInput[]
    createMany?: SystemCreateManyAnalystInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutAnalystInput | SystemUpdateWithWhereUniqueWithoutAnalystInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutAnalystInput | SystemUpdateManyWithWhereWithoutAnalystInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUpdateManyWithoutApplicationOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput> | SystemCreateWithoutApplicationOperatorInput[] | SystemUncheckedCreateWithoutApplicationOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutApplicationOperatorInput | SystemCreateOrConnectWithoutApplicationOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutApplicationOperatorInput | SystemUpsertWithWhereUniqueWithoutApplicationOperatorInput[]
    createMany?: SystemCreateManyApplicationOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutApplicationOperatorInput | SystemUpdateWithWhereUniqueWithoutApplicationOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutApplicationOperatorInput | SystemUpdateManyWithWhereWithoutApplicationOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUpdateManyWithoutPlatformOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput> | SystemCreateWithoutPlatformOperatorInput[] | SystemUncheckedCreateWithoutPlatformOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutPlatformOperatorInput | SystemCreateOrConnectWithoutPlatformOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutPlatformOperatorInput | SystemUpsertWithWhereUniqueWithoutPlatformOperatorInput[]
    createMany?: SystemCreateManyPlatformOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutPlatformOperatorInput | SystemUpdateWithWhereUniqueWithoutPlatformOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutPlatformOperatorInput | SystemUpdateManyWithWhereWithoutPlatformOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUpdateManyWithoutInfrastructureOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput> | SystemCreateWithoutInfrastructureOperatorInput[] | SystemUncheckedCreateWithoutInfrastructureOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutInfrastructureOperatorInput | SystemCreateOrConnectWithoutInfrastructureOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutInfrastructureOperatorInput | SystemUpsertWithWhereUniqueWithoutInfrastructureOperatorInput[]
    createMany?: SystemCreateManyInfrastructureOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutInfrastructureOperatorInput | SystemUpdateWithWhereUniqueWithoutInfrastructureOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutInfrastructureOperatorInput | SystemUpdateManyWithWhereWithoutInfrastructureOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserRoleUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput> | UserRoleCreateWithoutUserInput[] | UserRoleUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutUserInput | UserRoleCreateOrConnectWithoutUserInput[]
    upsert?: UserRoleUpsertWithWhereUniqueWithoutUserInput | UserRoleUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRoleCreateManyUserInputEnvelope
    set?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    disconnect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    delete?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    update?: UserRoleUpdateWithWhereUniqueWithoutUserInput | UserRoleUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRoleUpdateManyWithWhereWithoutUserInput | UserRoleUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
  }

  export type UserRightUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput> | UserRightCreateWithoutUserInput[] | UserRightUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutUserInput | UserRightCreateOrConnectWithoutUserInput[]
    upsert?: UserRightUpsertWithWhereUniqueWithoutUserInput | UserRightUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserRightCreateManyUserInputEnvelope
    set?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    disconnect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    delete?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    update?: UserRightUpdateWithWhereUniqueWithoutUserInput | UserRightUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserRightUpdateManyWithWhereWithoutUserInput | UserRightUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
  }

  export type LogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput> | LogCreateWithoutUserInput[] | LogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LogCreateOrConnectWithoutUserInput | LogCreateOrConnectWithoutUserInput[]
    upsert?: LogUpsertWithWhereUniqueWithoutUserInput | LogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LogCreateManyUserInputEnvelope
    set?: LogWhereUniqueInput | LogWhereUniqueInput[]
    disconnect?: LogWhereUniqueInput | LogWhereUniqueInput[]
    delete?: LogWhereUniqueInput | LogWhereUniqueInput[]
    connect?: LogWhereUniqueInput | LogWhereUniqueInput[]
    update?: LogUpdateWithWhereUniqueWithoutUserInput | LogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LogUpdateManyWithWhereWithoutUserInput | LogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LogScalarWhereInput | LogScalarWhereInput[]
  }

  export type KPI_DataUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput> | KPI_DataCreateWithoutUserInput[] | KPI_DataUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutUserInput | KPI_DataCreateOrConnectWithoutUserInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutUserInput | KPI_DataUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: KPI_DataCreateManyUserInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutUserInput | KPI_DataUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutUserInput | KPI_DataUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type KPI_DataUncheckedUpdateManyWithoutApproverNestedInput = {
    create?: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput> | KPI_DataCreateWithoutApproverInput[] | KPI_DataUncheckedCreateWithoutApproverInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutApproverInput | KPI_DataCreateOrConnectWithoutApproverInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutApproverInput | KPI_DataUpsertWithWhereUniqueWithoutApproverInput[]
    createMany?: KPI_DataCreateManyApproverInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutApproverInput | KPI_DataUpdateWithWhereUniqueWithoutApproverInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutApproverInput | KPI_DataUpdateManyWithWhereWithoutApproverInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type IncidentUncheckedUpdateManyWithoutReporterNestedInput = {
    create?: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput> | IncidentCreateWithoutReporterInput[] | IncidentUncheckedCreateWithoutReporterInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutReporterInput | IncidentCreateOrConnectWithoutReporterInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutReporterInput | IncidentUpsertWithWhereUniqueWithoutReporterInput[]
    createMany?: IncidentCreateManyReporterInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutReporterInput | IncidentUpdateWithWhereUniqueWithoutReporterInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutReporterInput | IncidentUpdateManyWithWhereWithoutReporterInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type IncidentUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput> | IncidentCreateWithoutCreatorInput[] | IncidentUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCreatorInput | IncidentCreateOrConnectWithoutCreatorInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutCreatorInput | IncidentUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: IncidentCreateManyCreatorInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutCreatorInput | IncidentUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutCreatorInput | IncidentUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type IncidentUncheckedUpdateManyWithoutHandlerNestedInput = {
    create?: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput> | IncidentCreateWithoutHandlerInput[] | IncidentUncheckedCreateWithoutHandlerInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutHandlerInput | IncidentCreateOrConnectWithoutHandlerInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutHandlerInput | IncidentUpsertWithWhereUniqueWithoutHandlerInput[]
    createMany?: IncidentCreateManyHandlerInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutHandlerInput | IncidentUpdateWithWhereUniqueWithoutHandlerInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutHandlerInput | IncidentUpdateManyWithWhereWithoutHandlerInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type SystemUncheckedUpdateManyWithoutAnalystNestedInput = {
    create?: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput> | SystemCreateWithoutAnalystInput[] | SystemUncheckedCreateWithoutAnalystInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutAnalystInput | SystemCreateOrConnectWithoutAnalystInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutAnalystInput | SystemUpsertWithWhereUniqueWithoutAnalystInput[]
    createMany?: SystemCreateManyAnalystInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutAnalystInput | SystemUpdateWithWhereUniqueWithoutAnalystInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutAnalystInput | SystemUpdateManyWithWhereWithoutAnalystInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput> | SystemCreateWithoutApplicationOperatorInput[] | SystemUncheckedCreateWithoutApplicationOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutApplicationOperatorInput | SystemCreateOrConnectWithoutApplicationOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutApplicationOperatorInput | SystemUpsertWithWhereUniqueWithoutApplicationOperatorInput[]
    createMany?: SystemCreateManyApplicationOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutApplicationOperatorInput | SystemUpdateWithWhereUniqueWithoutApplicationOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutApplicationOperatorInput | SystemUpdateManyWithWhereWithoutApplicationOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput> | SystemCreateWithoutPlatformOperatorInput[] | SystemUncheckedCreateWithoutPlatformOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutPlatformOperatorInput | SystemCreateOrConnectWithoutPlatformOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutPlatformOperatorInput | SystemUpsertWithWhereUniqueWithoutPlatformOperatorInput[]
    createMany?: SystemCreateManyPlatformOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutPlatformOperatorInput | SystemUpdateWithWhereUniqueWithoutPlatformOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutPlatformOperatorInput | SystemUpdateManyWithWhereWithoutPlatformOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput = {
    create?: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput> | SystemCreateWithoutInfrastructureOperatorInput[] | SystemUncheckedCreateWithoutInfrastructureOperatorInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutInfrastructureOperatorInput | SystemCreateOrConnectWithoutInfrastructureOperatorInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutInfrastructureOperatorInput | SystemUpsertWithWhereUniqueWithoutInfrastructureOperatorInput[]
    createMany?: SystemCreateManyInfrastructureOperatorInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutInfrastructureOperatorInput | SystemUpdateWithWhereUniqueWithoutInfrastructureOperatorInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutInfrastructureOperatorInput | SystemUpdateManyWithWhereWithoutInfrastructureOperatorInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type UserRoleCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput> | UserRoleCreateWithoutRoleInput[] | UserRoleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutRoleInput | UserRoleCreateOrConnectWithoutRoleInput[]
    createMany?: UserRoleCreateManyRoleInputEnvelope
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
  }

  export type RoleRightCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput> | RoleRightCreateWithoutRoleInput[] | RoleRightUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRoleInput | RoleRightCreateOrConnectWithoutRoleInput[]
    createMany?: RoleRightCreateManyRoleInputEnvelope
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
  }

  export type UserRoleUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput> | UserRoleCreateWithoutRoleInput[] | UserRoleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutRoleInput | UserRoleCreateOrConnectWithoutRoleInput[]
    createMany?: UserRoleCreateManyRoleInputEnvelope
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
  }

  export type RoleRightUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput> | RoleRightCreateWithoutRoleInput[] | RoleRightUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRoleInput | RoleRightCreateOrConnectWithoutRoleInput[]
    createMany?: RoleRightCreateManyRoleInputEnvelope
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
  }

  export type UserRoleUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput> | UserRoleCreateWithoutRoleInput[] | UserRoleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutRoleInput | UserRoleCreateOrConnectWithoutRoleInput[]
    upsert?: UserRoleUpsertWithWhereUniqueWithoutRoleInput | UserRoleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserRoleCreateManyRoleInputEnvelope
    set?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    disconnect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    delete?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    update?: UserRoleUpdateWithWhereUniqueWithoutRoleInput | UserRoleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserRoleUpdateManyWithWhereWithoutRoleInput | UserRoleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
  }

  export type RoleRightUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput> | RoleRightCreateWithoutRoleInput[] | RoleRightUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRoleInput | RoleRightCreateOrConnectWithoutRoleInput[]
    upsert?: RoleRightUpsertWithWhereUniqueWithoutRoleInput | RoleRightUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleRightCreateManyRoleInputEnvelope
    set?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    disconnect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    delete?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    update?: RoleRightUpdateWithWhereUniqueWithoutRoleInput | RoleRightUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleRightUpdateManyWithWhereWithoutRoleInput | RoleRightUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
  }

  export type UserRoleUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput> | UserRoleCreateWithoutRoleInput[] | UserRoleUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserRoleCreateOrConnectWithoutRoleInput | UserRoleCreateOrConnectWithoutRoleInput[]
    upsert?: UserRoleUpsertWithWhereUniqueWithoutRoleInput | UserRoleUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserRoleCreateManyRoleInputEnvelope
    set?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    disconnect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    delete?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    connect?: UserRoleWhereUniqueInput | UserRoleWhereUniqueInput[]
    update?: UserRoleUpdateWithWhereUniqueWithoutRoleInput | UserRoleUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserRoleUpdateManyWithWhereWithoutRoleInput | UserRoleUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
  }

  export type RoleRightUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput> | RoleRightCreateWithoutRoleInput[] | RoleRightUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRoleInput | RoleRightCreateOrConnectWithoutRoleInput[]
    upsert?: RoleRightUpsertWithWhereUniqueWithoutRoleInput | RoleRightUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleRightCreateManyRoleInputEnvelope
    set?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    disconnect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    delete?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    update?: RoleRightUpdateWithWhereUniqueWithoutRoleInput | RoleRightUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleRightUpdateManyWithWhereWithoutRoleInput | RoleRightUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
  }

  export type RoleRightCreateNestedManyWithoutRightInput = {
    create?: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput> | RoleRightCreateWithoutRightInput[] | RoleRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRightInput | RoleRightCreateOrConnectWithoutRightInput[]
    createMany?: RoleRightCreateManyRightInputEnvelope
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
  }

  export type UserRightCreateNestedManyWithoutRightInput = {
    create?: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput> | UserRightCreateWithoutRightInput[] | UserRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutRightInput | UserRightCreateOrConnectWithoutRightInput[]
    createMany?: UserRightCreateManyRightInputEnvelope
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
  }

  export type RoleRightUncheckedCreateNestedManyWithoutRightInput = {
    create?: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput> | RoleRightCreateWithoutRightInput[] | RoleRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRightInput | RoleRightCreateOrConnectWithoutRightInput[]
    createMany?: RoleRightCreateManyRightInputEnvelope
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
  }

  export type UserRightUncheckedCreateNestedManyWithoutRightInput = {
    create?: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput> | UserRightCreateWithoutRightInput[] | UserRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutRightInput | UserRightCreateOrConnectWithoutRightInput[]
    createMany?: UserRightCreateManyRightInputEnvelope
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
  }

  export type RoleRightUpdateManyWithoutRightNestedInput = {
    create?: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput> | RoleRightCreateWithoutRightInput[] | RoleRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRightInput | RoleRightCreateOrConnectWithoutRightInput[]
    upsert?: RoleRightUpsertWithWhereUniqueWithoutRightInput | RoleRightUpsertWithWhereUniqueWithoutRightInput[]
    createMany?: RoleRightCreateManyRightInputEnvelope
    set?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    disconnect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    delete?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    update?: RoleRightUpdateWithWhereUniqueWithoutRightInput | RoleRightUpdateWithWhereUniqueWithoutRightInput[]
    updateMany?: RoleRightUpdateManyWithWhereWithoutRightInput | RoleRightUpdateManyWithWhereWithoutRightInput[]
    deleteMany?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
  }

  export type UserRightUpdateManyWithoutRightNestedInput = {
    create?: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput> | UserRightCreateWithoutRightInput[] | UserRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutRightInput | UserRightCreateOrConnectWithoutRightInput[]
    upsert?: UserRightUpsertWithWhereUniqueWithoutRightInput | UserRightUpsertWithWhereUniqueWithoutRightInput[]
    createMany?: UserRightCreateManyRightInputEnvelope
    set?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    disconnect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    delete?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    update?: UserRightUpdateWithWhereUniqueWithoutRightInput | UserRightUpdateWithWhereUniqueWithoutRightInput[]
    updateMany?: UserRightUpdateManyWithWhereWithoutRightInput | UserRightUpdateManyWithWhereWithoutRightInput[]
    deleteMany?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
  }

  export type RoleRightUncheckedUpdateManyWithoutRightNestedInput = {
    create?: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput> | RoleRightCreateWithoutRightInput[] | RoleRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: RoleRightCreateOrConnectWithoutRightInput | RoleRightCreateOrConnectWithoutRightInput[]
    upsert?: RoleRightUpsertWithWhereUniqueWithoutRightInput | RoleRightUpsertWithWhereUniqueWithoutRightInput[]
    createMany?: RoleRightCreateManyRightInputEnvelope
    set?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    disconnect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    delete?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    connect?: RoleRightWhereUniqueInput | RoleRightWhereUniqueInput[]
    update?: RoleRightUpdateWithWhereUniqueWithoutRightInput | RoleRightUpdateWithWhereUniqueWithoutRightInput[]
    updateMany?: RoleRightUpdateManyWithWhereWithoutRightInput | RoleRightUpdateManyWithWhereWithoutRightInput[]
    deleteMany?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
  }

  export type UserRightUncheckedUpdateManyWithoutRightNestedInput = {
    create?: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput> | UserRightCreateWithoutRightInput[] | UserRightUncheckedCreateWithoutRightInput[]
    connectOrCreate?: UserRightCreateOrConnectWithoutRightInput | UserRightCreateOrConnectWithoutRightInput[]
    upsert?: UserRightUpsertWithWhereUniqueWithoutRightInput | UserRightUpsertWithWhereUniqueWithoutRightInput[]
    createMany?: UserRightCreateManyRightInputEnvelope
    set?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    disconnect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    delete?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    connect?: UserRightWhereUniqueInput | UserRightWhereUniqueInput[]
    update?: UserRightUpdateWithWhereUniqueWithoutRightInput | UserRightUpdateWithWhereUniqueWithoutRightInput[]
    updateMany?: UserRightUpdateManyWithWhereWithoutRightInput | UserRightUpdateManyWithWhereWithoutRightInput[]
    deleteMany?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserRolesInput = {
    create?: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRolesInput
    connect?: UserWhereUniqueInput
  }

  export type RoleCreateNestedOneWithoutUserRolesInput = {
    create?: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserRolesInput
    connect?: RoleWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserRolesNestedInput = {
    create?: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRolesInput
    upsert?: UserUpsertWithoutUserRolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserRolesInput, UserUpdateWithoutUserRolesInput>, UserUncheckedUpdateWithoutUserRolesInput>
  }

  export type RoleUpdateOneRequiredWithoutUserRolesNestedInput = {
    create?: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserRolesInput
    upsert?: RoleUpsertWithoutUserRolesInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUserRolesInput, RoleUpdateWithoutUserRolesInput>, RoleUncheckedUpdateWithoutUserRolesInput>
  }

  export type RoleCreateNestedOneWithoutRoleRightsInput = {
    create?: XOR<RoleCreateWithoutRoleRightsInput, RoleUncheckedCreateWithoutRoleRightsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleRightsInput
    connect?: RoleWhereUniqueInput
  }

  export type RightCreateNestedOneWithoutRoleRightsInput = {
    create?: XOR<RightCreateWithoutRoleRightsInput, RightUncheckedCreateWithoutRoleRightsInput>
    connectOrCreate?: RightCreateOrConnectWithoutRoleRightsInput
    connect?: RightWhereUniqueInput
  }

  export type RoleUpdateOneRequiredWithoutRoleRightsNestedInput = {
    create?: XOR<RoleCreateWithoutRoleRightsInput, RoleUncheckedCreateWithoutRoleRightsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleRightsInput
    upsert?: RoleUpsertWithoutRoleRightsInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutRoleRightsInput, RoleUpdateWithoutRoleRightsInput>, RoleUncheckedUpdateWithoutRoleRightsInput>
  }

  export type RightUpdateOneRequiredWithoutRoleRightsNestedInput = {
    create?: XOR<RightCreateWithoutRoleRightsInput, RightUncheckedCreateWithoutRoleRightsInput>
    connectOrCreate?: RightCreateOrConnectWithoutRoleRightsInput
    upsert?: RightUpsertWithoutRoleRightsInput
    connect?: RightWhereUniqueInput
    update?: XOR<XOR<RightUpdateToOneWithWhereWithoutRoleRightsInput, RightUpdateWithoutRoleRightsInput>, RightUncheckedUpdateWithoutRoleRightsInput>
  }

  export type UserCreateNestedOneWithoutUserRightsInput = {
    create?: XOR<UserCreateWithoutUserRightsInput, UserUncheckedCreateWithoutUserRightsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRightsInput
    connect?: UserWhereUniqueInput
  }

  export type RightCreateNestedOneWithoutUserRightsInput = {
    create?: XOR<RightCreateWithoutUserRightsInput, RightUncheckedCreateWithoutUserRightsInput>
    connectOrCreate?: RightCreateOrConnectWithoutUserRightsInput
    connect?: RightWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserRightsNestedInput = {
    create?: XOR<UserCreateWithoutUserRightsInput, UserUncheckedCreateWithoutUserRightsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserRightsInput
    upsert?: UserUpsertWithoutUserRightsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserRightsInput, UserUpdateWithoutUserRightsInput>, UserUncheckedUpdateWithoutUserRightsInput>
  }

  export type RightUpdateOneRequiredWithoutUserRightsNestedInput = {
    create?: XOR<RightCreateWithoutUserRightsInput, RightUncheckedCreateWithoutUserRightsInput>
    connectOrCreate?: RightCreateOrConnectWithoutUserRightsInput
    upsert?: RightUpsertWithoutUserRightsInput
    connect?: RightWhereUniqueInput
    update?: XOR<XOR<RightUpdateToOneWithWhereWithoutUserRightsInput, RightUpdateWithoutUserRightsInput>, RightUncheckedUpdateWithoutUserRightsInput>
  }

  export type UserCreateNestedOneWithoutLogsInput = {
    create?: XOR<UserCreateWithoutLogsInput, UserUncheckedCreateWithoutLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLogsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutLogsNestedInput = {
    create?: XOR<UserCreateWithoutLogsInput, UserUncheckedCreateWithoutLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutLogsInput
    upsert?: UserUpsertWithoutLogsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLogsInput, UserUpdateWithoutLogsInput>, UserUncheckedUpdateWithoutLogsInput>
  }

  export type KPI_DataCreateNestedManyWithoutServiceInput = {
    create?: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput> | KPI_DataCreateWithoutServiceInput[] | KPI_DataUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutServiceInput | KPI_DataCreateOrConnectWithoutServiceInput[]
    createMany?: KPI_DataCreateManyServiceInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type RelationCreateNestedManyWithoutServiceInput = {
    create?: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput> | RelationCreateWithoutServiceInput[] | RelationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutServiceInput | RelationCreateOrConnectWithoutServiceInput[]
    createMany?: RelationCreateManyServiceInputEnvelope
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput> | KPI_DataCreateWithoutServiceInput[] | KPI_DataUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutServiceInput | KPI_DataCreateOrConnectWithoutServiceInput[]
    createMany?: KPI_DataCreateManyServiceInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type RelationUncheckedCreateNestedManyWithoutServiceInput = {
    create?: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput> | RelationCreateWithoutServiceInput[] | RelationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutServiceInput | RelationCreateOrConnectWithoutServiceInput[]
    createMany?: RelationCreateManyServiceInputEnvelope
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
  }

  export type KPI_DataUpdateManyWithoutServiceNestedInput = {
    create?: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput> | KPI_DataCreateWithoutServiceInput[] | KPI_DataUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutServiceInput | KPI_DataCreateOrConnectWithoutServiceInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutServiceInput | KPI_DataUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: KPI_DataCreateManyServiceInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutServiceInput | KPI_DataUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutServiceInput | KPI_DataUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type RelationUpdateManyWithoutServiceNestedInput = {
    create?: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput> | RelationCreateWithoutServiceInput[] | RelationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutServiceInput | RelationCreateOrConnectWithoutServiceInput[]
    upsert?: RelationUpsertWithWhereUniqueWithoutServiceInput | RelationUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: RelationCreateManyServiceInputEnvelope
    set?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    disconnect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    delete?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    update?: RelationUpdateWithWhereUniqueWithoutServiceInput | RelationUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: RelationUpdateManyWithWhereWithoutServiceInput | RelationUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: RelationScalarWhereInput | RelationScalarWhereInput[]
  }

  export type KPI_DataUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput> | KPI_DataCreateWithoutServiceInput[] | KPI_DataUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutServiceInput | KPI_DataCreateOrConnectWithoutServiceInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutServiceInput | KPI_DataUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: KPI_DataCreateManyServiceInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutServiceInput | KPI_DataUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutServiceInput | KPI_DataUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type RelationUncheckedUpdateManyWithoutServiceNestedInput = {
    create?: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput> | RelationCreateWithoutServiceInput[] | RelationUncheckedCreateWithoutServiceInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutServiceInput | RelationCreateOrConnectWithoutServiceInput[]
    upsert?: RelationUpsertWithWhereUniqueWithoutServiceInput | RelationUpsertWithWhereUniqueWithoutServiceInput[]
    createMany?: RelationCreateManyServiceInputEnvelope
    set?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    disconnect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    delete?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    update?: RelationUpdateWithWhereUniqueWithoutServiceInput | RelationUpdateWithWhereUniqueWithoutServiceInput[]
    updateMany?: RelationUpdateManyWithWhereWithoutServiceInput | RelationUpdateManyWithWhereWithoutServiceInput[]
    deleteMany?: RelationScalarWhereInput | RelationScalarWhereInput[]
  }

  export type ItemCreateNestedOneWithoutKpiDataInput = {
    create?: XOR<ItemCreateWithoutKpiDataInput, ItemUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: ItemCreateOrConnectWithoutKpiDataInput
    connect?: ItemWhereUniqueInput
  }

  export type ServiceCreateNestedOneWithoutKpiDataInput = {
    create?: XOR<ServiceCreateWithoutKpiDataInput, ServiceUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutKpiDataInput
    connect?: ServiceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutKpiDataInput = {
    create?: XOR<UserCreateWithoutKpiDataInput, UserUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: UserCreateOrConnectWithoutKpiDataInput
    connect?: UserWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutKpiDataInput = {
    create?: XOR<CompanyCreateWithoutKpiDataInput, CompanyUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutKpiDataInput
    connect?: CompanyWhereUniqueInput
  }

  export type SystemCreateNestedOneWithoutKpiDataInput = {
    create?: XOR<SystemCreateWithoutKpiDataInput, SystemUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: SystemCreateOrConnectWithoutKpiDataInput
    connect?: SystemWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApprovedKPIInput = {
    create?: XOR<UserCreateWithoutApprovedKPIInput, UserUncheckedCreateWithoutApprovedKPIInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovedKPIInput
    connect?: UserWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ItemUpdateOneRequiredWithoutKpiDataNestedInput = {
    create?: XOR<ItemCreateWithoutKpiDataInput, ItemUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: ItemCreateOrConnectWithoutKpiDataInput
    upsert?: ItemUpsertWithoutKpiDataInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutKpiDataInput, ItemUpdateWithoutKpiDataInput>, ItemUncheckedUpdateWithoutKpiDataInput>
  }

  export type ServiceUpdateOneRequiredWithoutKpiDataNestedInput = {
    create?: XOR<ServiceCreateWithoutKpiDataInput, ServiceUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutKpiDataInput
    upsert?: ServiceUpsertWithoutKpiDataInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutKpiDataInput, ServiceUpdateWithoutKpiDataInput>, ServiceUncheckedUpdateWithoutKpiDataInput>
  }

  export type UserUpdateOneRequiredWithoutKpiDataNestedInput = {
    create?: XOR<UserCreateWithoutKpiDataInput, UserUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: UserCreateOrConnectWithoutKpiDataInput
    upsert?: UserUpsertWithoutKpiDataInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutKpiDataInput, UserUpdateWithoutKpiDataInput>, UserUncheckedUpdateWithoutKpiDataInput>
  }

  export type CompanyUpdateOneRequiredWithoutKpiDataNestedInput = {
    create?: XOR<CompanyCreateWithoutKpiDataInput, CompanyUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutKpiDataInput
    upsert?: CompanyUpsertWithoutKpiDataInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutKpiDataInput, CompanyUpdateWithoutKpiDataInput>, CompanyUncheckedUpdateWithoutKpiDataInput>
  }

  export type SystemUpdateOneRequiredWithoutKpiDataNestedInput = {
    create?: XOR<SystemCreateWithoutKpiDataInput, SystemUncheckedCreateWithoutKpiDataInput>
    connectOrCreate?: SystemCreateOrConnectWithoutKpiDataInput
    upsert?: SystemUpsertWithoutKpiDataInput
    connect?: SystemWhereUniqueInput
    update?: XOR<XOR<SystemUpdateToOneWithWhereWithoutKpiDataInput, SystemUpdateWithoutKpiDataInput>, SystemUncheckedUpdateWithoutKpiDataInput>
  }

  export type UserUpdateOneWithoutApprovedKPINestedInput = {
    create?: XOR<UserCreateWithoutApprovedKPIInput, UserUncheckedCreateWithoutApprovedKPIInput>
    connectOrCreate?: UserCreateOrConnectWithoutApprovedKPIInput
    upsert?: UserUpsertWithoutApprovedKPIInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApprovedKPIInput, UserUpdateWithoutApprovedKPIInput>, UserUncheckedUpdateWithoutApprovedKPIInput>
  }

  export type KPI_DataCreateNestedManyWithoutItemInput = {
    create?: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput> | KPI_DataCreateWithoutItemInput[] | KPI_DataUncheckedCreateWithoutItemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutItemInput | KPI_DataCreateOrConnectWithoutItemInput[]
    createMany?: KPI_DataCreateManyItemInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput> | KPI_DataCreateWithoutItemInput[] | KPI_DataUncheckedCreateWithoutItemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutItemInput | KPI_DataCreateOrConnectWithoutItemInput[]
    createMany?: KPI_DataCreateManyItemInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type KPI_DataUpdateManyWithoutItemNestedInput = {
    create?: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput> | KPI_DataCreateWithoutItemInput[] | KPI_DataUncheckedCreateWithoutItemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutItemInput | KPI_DataCreateOrConnectWithoutItemInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutItemInput | KPI_DataUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: KPI_DataCreateManyItemInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutItemInput | KPI_DataUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutItemInput | KPI_DataUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type KPI_DataUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput> | KPI_DataCreateWithoutItemInput[] | KPI_DataUncheckedCreateWithoutItemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutItemInput | KPI_DataCreateOrConnectWithoutItemInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutItemInput | KPI_DataUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: KPI_DataCreateManyItemInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutItemInput | KPI_DataUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutItemInput | KPI_DataUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type KPI_DataCreateNestedManyWithoutCompanyInput = {
    create?: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput> | KPI_DataCreateWithoutCompanyInput[] | KPI_DataUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutCompanyInput | KPI_DataCreateOrConnectWithoutCompanyInput[]
    createMany?: KPI_DataCreateManyCompanyInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type SystemCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput> | SystemCreateWithoutCompanyInput[] | SystemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutCompanyInput | SystemCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemCreateManyCompanyInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type IncidentCreateNestedManyWithoutCompanyInput = {
    create?: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput> | IncidentCreateWithoutCompanyInput[] | IncidentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCompanyInput | IncidentCreateOrConnectWithoutCompanyInput[]
    createMany?: IncidentCreateManyCompanyInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput> | KPI_DataCreateWithoutCompanyInput[] | KPI_DataUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutCompanyInput | KPI_DataCreateOrConnectWithoutCompanyInput[]
    createMany?: KPI_DataCreateManyCompanyInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type SystemUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput> | SystemCreateWithoutCompanyInput[] | SystemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutCompanyInput | SystemCreateOrConnectWithoutCompanyInput[]
    createMany?: SystemCreateManyCompanyInputEnvelope
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
  }

  export type IncidentUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput> | IncidentCreateWithoutCompanyInput[] | IncidentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCompanyInput | IncidentCreateOrConnectWithoutCompanyInput[]
    createMany?: IncidentCreateManyCompanyInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type KPI_DataUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput> | KPI_DataCreateWithoutCompanyInput[] | KPI_DataUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutCompanyInput | KPI_DataCreateOrConnectWithoutCompanyInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutCompanyInput | KPI_DataUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: KPI_DataCreateManyCompanyInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutCompanyInput | KPI_DataUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutCompanyInput | KPI_DataUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type SystemUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput> | SystemCreateWithoutCompanyInput[] | SystemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutCompanyInput | SystemCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutCompanyInput | SystemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemCreateManyCompanyInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutCompanyInput | SystemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutCompanyInput | SystemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type IncidentUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput> | IncidentCreateWithoutCompanyInput[] | IncidentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCompanyInput | IncidentCreateOrConnectWithoutCompanyInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutCompanyInput | IncidentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: IncidentCreateManyCompanyInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutCompanyInput | IncidentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutCompanyInput | IncidentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type KPI_DataUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput> | KPI_DataCreateWithoutCompanyInput[] | KPI_DataUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutCompanyInput | KPI_DataCreateOrConnectWithoutCompanyInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutCompanyInput | KPI_DataUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: KPI_DataCreateManyCompanyInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutCompanyInput | KPI_DataUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutCompanyInput | KPI_DataUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type SystemUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput> | SystemCreateWithoutCompanyInput[] | SystemUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: SystemCreateOrConnectWithoutCompanyInput | SystemCreateOrConnectWithoutCompanyInput[]
    upsert?: SystemUpsertWithWhereUniqueWithoutCompanyInput | SystemUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: SystemCreateManyCompanyInputEnvelope
    set?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    disconnect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    delete?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    connect?: SystemWhereUniqueInput | SystemWhereUniqueInput[]
    update?: SystemUpdateWithWhereUniqueWithoutCompanyInput | SystemUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: SystemUpdateManyWithWhereWithoutCompanyInput | SystemUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: SystemScalarWhereInput | SystemScalarWhereInput[]
  }

  export type IncidentUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput> | IncidentCreateWithoutCompanyInput[] | IncidentUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutCompanyInput | IncidentCreateOrConnectWithoutCompanyInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutCompanyInput | IncidentUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: IncidentCreateManyCompanyInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutCompanyInput | IncidentUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutCompanyInput | IncidentUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type KPI_DataCreateNestedManyWithoutSystemInput = {
    create?: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput> | KPI_DataCreateWithoutSystemInput[] | KPI_DataUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutSystemInput | KPI_DataCreateOrConnectWithoutSystemInput[]
    createMany?: KPI_DataCreateManySystemInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type IncidentCreateNestedManyWithoutSystemInput = {
    create?: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput> | IncidentCreateWithoutSystemInput[] | IncidentUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutSystemInput | IncidentCreateOrConnectWithoutSystemInput[]
    createMany?: IncidentCreateManySystemInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type RelationCreateNestedManyWithoutSystemInput = {
    create?: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput> | RelationCreateWithoutSystemInput[] | RelationUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutSystemInput | RelationCreateOrConnectWithoutSystemInput[]
    createMany?: RelationCreateManySystemInputEnvelope
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutSystemsInput = {
    create?: XOR<CompanyCreateWithoutSystemsInput, CompanyUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemsInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAnalystSystemsInput = {
    create?: XOR<UserCreateWithoutAnalystSystemsInput, UserUncheckedCreateWithoutAnalystSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnalystSystemsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAppOperatorSystemsInput = {
    create?: XOR<UserCreateWithoutAppOperatorSystemsInput, UserUncheckedCreateWithoutAppOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppOperatorSystemsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPlatformOperatorSystemsInput = {
    create?: XOR<UserCreateWithoutPlatformOperatorSystemsInput, UserUncheckedCreateWithoutPlatformOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPlatformOperatorSystemsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInfraOperatorSystemsInput = {
    create?: XOR<UserCreateWithoutInfraOperatorSystemsInput, UserUncheckedCreateWithoutInfraOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInfraOperatorSystemsInput
    connect?: UserWhereUniqueInput
  }

  export type KPI_DataUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput> | KPI_DataCreateWithoutSystemInput[] | KPI_DataUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutSystemInput | KPI_DataCreateOrConnectWithoutSystemInput[]
    createMany?: KPI_DataCreateManySystemInputEnvelope
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
  }

  export type IncidentUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput> | IncidentCreateWithoutSystemInput[] | IncidentUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutSystemInput | IncidentCreateOrConnectWithoutSystemInput[]
    createMany?: IncidentCreateManySystemInputEnvelope
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
  }

  export type RelationUncheckedCreateNestedManyWithoutSystemInput = {
    create?: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput> | RelationCreateWithoutSystemInput[] | RelationUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutSystemInput | RelationCreateOrConnectWithoutSystemInput[]
    createMany?: RelationCreateManySystemInputEnvelope
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
  }

  export type KPI_DataUpdateManyWithoutSystemNestedInput = {
    create?: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput> | KPI_DataCreateWithoutSystemInput[] | KPI_DataUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutSystemInput | KPI_DataCreateOrConnectWithoutSystemInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutSystemInput | KPI_DataUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: KPI_DataCreateManySystemInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutSystemInput | KPI_DataUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutSystemInput | KPI_DataUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type IncidentUpdateManyWithoutSystemNestedInput = {
    create?: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput> | IncidentCreateWithoutSystemInput[] | IncidentUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutSystemInput | IncidentCreateOrConnectWithoutSystemInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutSystemInput | IncidentUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: IncidentCreateManySystemInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutSystemInput | IncidentUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutSystemInput | IncidentUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type RelationUpdateManyWithoutSystemNestedInput = {
    create?: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput> | RelationCreateWithoutSystemInput[] | RelationUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutSystemInput | RelationCreateOrConnectWithoutSystemInput[]
    upsert?: RelationUpsertWithWhereUniqueWithoutSystemInput | RelationUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: RelationCreateManySystemInputEnvelope
    set?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    disconnect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    delete?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    update?: RelationUpdateWithWhereUniqueWithoutSystemInput | RelationUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: RelationUpdateManyWithWhereWithoutSystemInput | RelationUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: RelationScalarWhereInput | RelationScalarWhereInput[]
  }

  export type CompanyUpdateOneRequiredWithoutSystemsNestedInput = {
    create?: XOR<CompanyCreateWithoutSystemsInput, CompanyUncheckedCreateWithoutSystemsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutSystemsInput
    upsert?: CompanyUpsertWithoutSystemsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutSystemsInput, CompanyUpdateWithoutSystemsInput>, CompanyUncheckedUpdateWithoutSystemsInput>
  }

  export type UserUpdateOneWithoutAnalystSystemsNestedInput = {
    create?: XOR<UserCreateWithoutAnalystSystemsInput, UserUncheckedCreateWithoutAnalystSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAnalystSystemsInput
    upsert?: UserUpsertWithoutAnalystSystemsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAnalystSystemsInput, UserUpdateWithoutAnalystSystemsInput>, UserUncheckedUpdateWithoutAnalystSystemsInput>
  }

  export type UserUpdateOneWithoutAppOperatorSystemsNestedInput = {
    create?: XOR<UserCreateWithoutAppOperatorSystemsInput, UserUncheckedCreateWithoutAppOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAppOperatorSystemsInput
    upsert?: UserUpsertWithoutAppOperatorSystemsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAppOperatorSystemsInput, UserUpdateWithoutAppOperatorSystemsInput>, UserUncheckedUpdateWithoutAppOperatorSystemsInput>
  }

  export type UserUpdateOneWithoutPlatformOperatorSystemsNestedInput = {
    create?: XOR<UserCreateWithoutPlatformOperatorSystemsInput, UserUncheckedCreateWithoutPlatformOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPlatformOperatorSystemsInput
    upsert?: UserUpsertWithoutPlatformOperatorSystemsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPlatformOperatorSystemsInput, UserUpdateWithoutPlatformOperatorSystemsInput>, UserUncheckedUpdateWithoutPlatformOperatorSystemsInput>
  }

  export type UserUpdateOneWithoutInfraOperatorSystemsNestedInput = {
    create?: XOR<UserCreateWithoutInfraOperatorSystemsInput, UserUncheckedCreateWithoutInfraOperatorSystemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInfraOperatorSystemsInput
    upsert?: UserUpsertWithoutInfraOperatorSystemsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInfraOperatorSystemsInput, UserUpdateWithoutInfraOperatorSystemsInput>, UserUncheckedUpdateWithoutInfraOperatorSystemsInput>
  }

  export type KPI_DataUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput> | KPI_DataCreateWithoutSystemInput[] | KPI_DataUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: KPI_DataCreateOrConnectWithoutSystemInput | KPI_DataCreateOrConnectWithoutSystemInput[]
    upsert?: KPI_DataUpsertWithWhereUniqueWithoutSystemInput | KPI_DataUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: KPI_DataCreateManySystemInputEnvelope
    set?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    disconnect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    delete?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    connect?: KPI_DataWhereUniqueInput | KPI_DataWhereUniqueInput[]
    update?: KPI_DataUpdateWithWhereUniqueWithoutSystemInput | KPI_DataUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: KPI_DataUpdateManyWithWhereWithoutSystemInput | KPI_DataUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
  }

  export type IncidentUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput> | IncidentCreateWithoutSystemInput[] | IncidentUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: IncidentCreateOrConnectWithoutSystemInput | IncidentCreateOrConnectWithoutSystemInput[]
    upsert?: IncidentUpsertWithWhereUniqueWithoutSystemInput | IncidentUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: IncidentCreateManySystemInputEnvelope
    set?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    disconnect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    delete?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    connect?: IncidentWhereUniqueInput | IncidentWhereUniqueInput[]
    update?: IncidentUpdateWithWhereUniqueWithoutSystemInput | IncidentUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: IncidentUpdateManyWithWhereWithoutSystemInput | IncidentUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
  }

  export type RelationUncheckedUpdateManyWithoutSystemNestedInput = {
    create?: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput> | RelationCreateWithoutSystemInput[] | RelationUncheckedCreateWithoutSystemInput[]
    connectOrCreate?: RelationCreateOrConnectWithoutSystemInput | RelationCreateOrConnectWithoutSystemInput[]
    upsert?: RelationUpsertWithWhereUniqueWithoutSystemInput | RelationUpsertWithWhereUniqueWithoutSystemInput[]
    createMany?: RelationCreateManySystemInputEnvelope
    set?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    disconnect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    delete?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    connect?: RelationWhereUniqueInput | RelationWhereUniqueInput[]
    update?: RelationUpdateWithWhereUniqueWithoutSystemInput | RelationUpdateWithWhereUniqueWithoutSystemInput[]
    updateMany?: RelationUpdateManyWithWhereWithoutSystemInput | RelationUpdateManyWithWhereWithoutSystemInput[]
    deleteMany?: RelationScalarWhereInput | RelationScalarWhereInput[]
  }

  export type ServiceCreateNestedOneWithoutRelationsInput = {
    create?: XOR<ServiceCreateWithoutRelationsInput, ServiceUncheckedCreateWithoutRelationsInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutRelationsInput
    connect?: ServiceWhereUniqueInput
  }

  export type SystemCreateNestedOneWithoutRelationsInput = {
    create?: XOR<SystemCreateWithoutRelationsInput, SystemUncheckedCreateWithoutRelationsInput>
    connectOrCreate?: SystemCreateOrConnectWithoutRelationsInput
    connect?: SystemWhereUniqueInput
  }

  export type ServiceUpdateOneRequiredWithoutRelationsNestedInput = {
    create?: XOR<ServiceCreateWithoutRelationsInput, ServiceUncheckedCreateWithoutRelationsInput>
    connectOrCreate?: ServiceCreateOrConnectWithoutRelationsInput
    upsert?: ServiceUpsertWithoutRelationsInput
    connect?: ServiceWhereUniqueInput
    update?: XOR<XOR<ServiceUpdateToOneWithWhereWithoutRelationsInput, ServiceUpdateWithoutRelationsInput>, ServiceUncheckedUpdateWithoutRelationsInput>
  }

  export type SystemUpdateOneRequiredWithoutRelationsNestedInput = {
    create?: XOR<SystemCreateWithoutRelationsInput, SystemUncheckedCreateWithoutRelationsInput>
    connectOrCreate?: SystemCreateOrConnectWithoutRelationsInput
    upsert?: SystemUpsertWithoutRelationsInput
    connect?: SystemWhereUniqueInput
    update?: XOR<XOR<SystemUpdateToOneWithWhereWithoutRelationsInput, SystemUpdateWithoutRelationsInput>, SystemUncheckedUpdateWithoutRelationsInput>
  }

  export type UserCreateNestedOneWithoutReportedIncidentsInput = {
    create?: XOR<UserCreateWithoutReportedIncidentsInput, UserUncheckedCreateWithoutReportedIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportedIncidentsInput
    connect?: UserWhereUniqueInput
  }

  export type SystemCreateNestedOneWithoutIncidentsInput = {
    create?: XOR<SystemCreateWithoutIncidentsInput, SystemUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: SystemCreateOrConnectWithoutIncidentsInput
    connect?: SystemWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutIncidentsInput = {
    create?: XOR<CompanyCreateWithoutIncidentsInput, CompanyUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutIncidentsInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedIncidentsInput = {
    create?: XOR<UserCreateWithoutCreatedIncidentsInput, UserUncheckedCreateWithoutCreatedIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedIncidentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutHandledIncidentsInput = {
    create?: XOR<UserCreateWithoutHandledIncidentsInput, UserUncheckedCreateWithoutHandledIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutHandledIncidentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutReportedIncidentsNestedInput = {
    create?: XOR<UserCreateWithoutReportedIncidentsInput, UserUncheckedCreateWithoutReportedIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportedIncidentsInput
    upsert?: UserUpsertWithoutReportedIncidentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportedIncidentsInput, UserUpdateWithoutReportedIncidentsInput>, UserUncheckedUpdateWithoutReportedIncidentsInput>
  }

  export type SystemUpdateOneRequiredWithoutIncidentsNestedInput = {
    create?: XOR<SystemCreateWithoutIncidentsInput, SystemUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: SystemCreateOrConnectWithoutIncidentsInput
    upsert?: SystemUpsertWithoutIncidentsInput
    connect?: SystemWhereUniqueInput
    update?: XOR<XOR<SystemUpdateToOneWithWhereWithoutIncidentsInput, SystemUpdateWithoutIncidentsInput>, SystemUncheckedUpdateWithoutIncidentsInput>
  }

  export type CompanyUpdateOneRequiredWithoutIncidentsNestedInput = {
    create?: XOR<CompanyCreateWithoutIncidentsInput, CompanyUncheckedCreateWithoutIncidentsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutIncidentsInput
    upsert?: CompanyUpsertWithoutIncidentsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutIncidentsInput, CompanyUpdateWithoutIncidentsInput>, CompanyUncheckedUpdateWithoutIncidentsInput>
  }

  export type UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedIncidentsInput, UserUncheckedCreateWithoutCreatedIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedIncidentsInput
    upsert?: UserUpsertWithoutCreatedIncidentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedIncidentsInput, UserUpdateWithoutCreatedIncidentsInput>, UserUncheckedUpdateWithoutCreatedIncidentsInput>
  }

  export type UserUpdateOneRequiredWithoutHandledIncidentsNestedInput = {
    create?: XOR<UserCreateWithoutHandledIncidentsInput, UserUncheckedCreateWithoutHandledIncidentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutHandledIncidentsInput
    upsert?: UserUpsertWithoutHandledIncidentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutHandledIncidentsInput, UserUpdateWithoutHandledIncidentsInput>, UserUncheckedUpdateWithoutHandledIncidentsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type UserRoleCreateWithoutUserInput = {
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    role: RoleCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleUncheckedCreateWithoutUserInput = {
    id?: number
    roleId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleCreateOrConnectWithoutUserInput = {
    where: UserRoleWhereUniqueInput
    create: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput>
  }

  export type UserRoleCreateManyUserInputEnvelope = {
    data: UserRoleCreateManyUserInput | UserRoleCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserRightCreateWithoutUserInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    right: RightCreateNestedOneWithoutUserRightsInput
  }

  export type UserRightUncheckedCreateWithoutUserInput = {
    id?: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightCreateOrConnectWithoutUserInput = {
    where: UserRightWhereUniqueInput
    create: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput>
  }

  export type UserRightCreateManyUserInputEnvelope = {
    data: UserRightCreateManyUserInput | UserRightCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type LogCreateWithoutUserInput = {
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
  }

  export type LogUncheckedCreateWithoutUserInput = {
    id?: number
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
  }

  export type LogCreateOrConnectWithoutUserInput = {
    where: LogWhereUniqueInput
    create: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput>
  }

  export type LogCreateManyUserInputEnvelope = {
    data: LogCreateManyUserInput | LogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type KPI_DataCreateWithoutUserInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    service: ServiceCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateWithoutUserInput = {
    id?: number
    itemId: number
    serviceId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutUserInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput>
  }

  export type KPI_DataCreateManyUserInputEnvelope = {
    data: KPI_DataCreateManyUserInput | KPI_DataCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type KPI_DataCreateWithoutApproverInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    service: ServiceCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
  }

  export type KPI_DataUncheckedCreateWithoutApproverInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutApproverInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput>
  }

  export type KPI_DataCreateManyApproverInputEnvelope = {
    data: KPI_DataCreateManyApproverInput | KPI_DataCreateManyApproverInput[]
    skipDuplicates?: boolean
  }

  export type IncidentCreateWithoutReporterInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    system: SystemCreateNestedOneWithoutIncidentsInput
    company: CompanyCreateNestedOneWithoutIncidentsInput
    creator: UserCreateNestedOneWithoutCreatedIncidentsInput
    handler: UserCreateNestedOneWithoutHandledIncidentsInput
  }

  export type IncidentUncheckedCreateWithoutReporterInput = {
    id?: number
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateOrConnectWithoutReporterInput = {
    where: IncidentWhereUniqueInput
    create: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput>
  }

  export type IncidentCreateManyReporterInputEnvelope = {
    data: IncidentCreateManyReporterInput | IncidentCreateManyReporterInput[]
    skipDuplicates?: boolean
  }

  export type IncidentCreateWithoutCreatorInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    reporter: UserCreateNestedOneWithoutReportedIncidentsInput
    system: SystemCreateNestedOneWithoutIncidentsInput
    company: CompanyCreateNestedOneWithoutIncidentsInput
    handler: UserCreateNestedOneWithoutHandledIncidentsInput
  }

  export type IncidentUncheckedCreateWithoutCreatorInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateOrConnectWithoutCreatorInput = {
    where: IncidentWhereUniqueInput
    create: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput>
  }

  export type IncidentCreateManyCreatorInputEnvelope = {
    data: IncidentCreateManyCreatorInput | IncidentCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type IncidentCreateWithoutHandlerInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    reporter: UserCreateNestedOneWithoutReportedIncidentsInput
    system: SystemCreateNestedOneWithoutIncidentsInput
    company: CompanyCreateNestedOneWithoutIncidentsInput
    creator: UserCreateNestedOneWithoutCreatedIncidentsInput
  }

  export type IncidentUncheckedCreateWithoutHandlerInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateOrConnectWithoutHandlerInput = {
    where: IncidentWhereUniqueInput
    create: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput>
  }

  export type IncidentCreateManyHandlerInputEnvelope = {
    data: IncidentCreateManyHandlerInput | IncidentCreateManyHandlerInput[]
    skipDuplicates?: boolean
  }

  export type SystemCreateWithoutAnalystInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutAnalystInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutAnalystInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput>
  }

  export type SystemCreateManyAnalystInputEnvelope = {
    data: SystemCreateManyAnalystInput | SystemCreateManyAnalystInput[]
    skipDuplicates?: boolean
  }

  export type SystemCreateWithoutApplicationOperatorInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutApplicationOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutApplicationOperatorInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput>
  }

  export type SystemCreateManyApplicationOperatorInputEnvelope = {
    data: SystemCreateManyApplicationOperatorInput | SystemCreateManyApplicationOperatorInput[]
    skipDuplicates?: boolean
  }

  export type SystemCreateWithoutPlatformOperatorInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutPlatformOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutPlatformOperatorInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput>
  }

  export type SystemCreateManyPlatformOperatorInputEnvelope = {
    data: SystemCreateManyPlatformOperatorInput | SystemCreateManyPlatformOperatorInput[]
    skipDuplicates?: boolean
  }

  export type SystemCreateWithoutInfrastructureOperatorInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutInfrastructureOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutInfrastructureOperatorInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput>
  }

  export type SystemCreateManyInfrastructureOperatorInputEnvelope = {
    data: SystemCreateManyInfrastructureOperatorInput | SystemCreateManyInfrastructureOperatorInput[]
    skipDuplicates?: boolean
  }

  export type UserRoleUpsertWithWhereUniqueWithoutUserInput = {
    where: UserRoleWhereUniqueInput
    update: XOR<UserRoleUpdateWithoutUserInput, UserRoleUncheckedUpdateWithoutUserInput>
    create: XOR<UserRoleCreateWithoutUserInput, UserRoleUncheckedCreateWithoutUserInput>
  }

  export type UserRoleUpdateWithWhereUniqueWithoutUserInput = {
    where: UserRoleWhereUniqueInput
    data: XOR<UserRoleUpdateWithoutUserInput, UserRoleUncheckedUpdateWithoutUserInput>
  }

  export type UserRoleUpdateManyWithWhereWithoutUserInput = {
    where: UserRoleScalarWhereInput
    data: XOR<UserRoleUpdateManyMutationInput, UserRoleUncheckedUpdateManyWithoutUserInput>
  }

  export type UserRoleScalarWhereInput = {
    AND?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
    OR?: UserRoleScalarWhereInput[]
    NOT?: UserRoleScalarWhereInput | UserRoleScalarWhereInput[]
    id?: IntFilter<"UserRole"> | number
    userId?: IntFilter<"UserRole"> | number
    roleId?: IntFilter<"UserRole"> | number
    created?: DateTimeFilter<"UserRole"> | Date | string
    modified?: DateTimeFilter<"UserRole"> | Date | string
    expired?: DateTimeNullableFilter<"UserRole"> | Date | string | null
  }

  export type UserRightUpsertWithWhereUniqueWithoutUserInput = {
    where: UserRightWhereUniqueInput
    update: XOR<UserRightUpdateWithoutUserInput, UserRightUncheckedUpdateWithoutUserInput>
    create: XOR<UserRightCreateWithoutUserInput, UserRightUncheckedCreateWithoutUserInput>
  }

  export type UserRightUpdateWithWhereUniqueWithoutUserInput = {
    where: UserRightWhereUniqueInput
    data: XOR<UserRightUpdateWithoutUserInput, UserRightUncheckedUpdateWithoutUserInput>
  }

  export type UserRightUpdateManyWithWhereWithoutUserInput = {
    where: UserRightScalarWhereInput
    data: XOR<UserRightUpdateManyMutationInput, UserRightUncheckedUpdateManyWithoutUserInput>
  }

  export type UserRightScalarWhereInput = {
    AND?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
    OR?: UserRightScalarWhereInput[]
    NOT?: UserRightScalarWhereInput | UserRightScalarWhereInput[]
    id?: IntFilter<"UserRight"> | number
    userId?: IntFilter<"UserRight"> | number
    rightId?: IntFilter<"UserRight"> | number
    permission?: StringFilter<"UserRight"> | string
    created?: DateTimeFilter<"UserRight"> | Date | string
    modified?: DateTimeFilter<"UserRight"> | Date | string
    expired?: DateTimeNullableFilter<"UserRight"> | Date | string | null
  }

  export type LogUpsertWithWhereUniqueWithoutUserInput = {
    where: LogWhereUniqueInput
    update: XOR<LogUpdateWithoutUserInput, LogUncheckedUpdateWithoutUserInput>
    create: XOR<LogCreateWithoutUserInput, LogUncheckedCreateWithoutUserInput>
  }

  export type LogUpdateWithWhereUniqueWithoutUserInput = {
    where: LogWhereUniqueInput
    data: XOR<LogUpdateWithoutUserInput, LogUncheckedUpdateWithoutUserInput>
  }

  export type LogUpdateManyWithWhereWithoutUserInput = {
    where: LogScalarWhereInput
    data: XOR<LogUpdateManyMutationInput, LogUncheckedUpdateManyWithoutUserInput>
  }

  export type LogScalarWhereInput = {
    AND?: LogScalarWhereInput | LogScalarWhereInput[]
    OR?: LogScalarWhereInput[]
    NOT?: LogScalarWhereInput | LogScalarWhereInput[]
    id?: IntFilter<"Log"> | number
    userId?: IntFilter<"Log"> | number
    relationId?: IntNullableFilter<"Log"> | number | null
    valueFrom?: StringNullableFilter<"Log"> | string | null
    valueTo?: StringNullableFilter<"Log"> | string | null
    created?: DateTimeFilter<"Log"> | Date | string
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutUserInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutUserInput, KPI_DataUncheckedUpdateWithoutUserInput>
    create: XOR<KPI_DataCreateWithoutUserInput, KPI_DataUncheckedCreateWithoutUserInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutUserInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutUserInput, KPI_DataUncheckedUpdateWithoutUserInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutUserInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutUserInput>
  }

  export type KPI_DataScalarWhereInput = {
    AND?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
    OR?: KPI_DataScalarWhereInput[]
    NOT?: KPI_DataScalarWhereInput | KPI_DataScalarWhereInput[]
    id?: IntFilter<"KPI_Data"> | number
    itemId?: IntFilter<"KPI_Data"> | number
    serviceId?: IntFilter<"KPI_Data"> | number
    userId?: IntFilter<"KPI_Data"> | number
    companyId?: IntFilter<"KPI_Data"> | number
    systemId?: IntFilter<"KPI_Data"> | number
    date?: DateTimeFilter<"KPI_Data"> | Date | string
    value?: FloatFilter<"KPI_Data"> | number
    approved?: BoolFilter<"KPI_Data"> | boolean
    approverId?: IntNullableFilter<"KPI_Data"> | number | null
    approvalDate?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
    created?: DateTimeFilter<"KPI_Data"> | Date | string
    modified?: DateTimeFilter<"KPI_Data"> | Date | string
    expired?: DateTimeNullableFilter<"KPI_Data"> | Date | string | null
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutApproverInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutApproverInput, KPI_DataUncheckedUpdateWithoutApproverInput>
    create: XOR<KPI_DataCreateWithoutApproverInput, KPI_DataUncheckedCreateWithoutApproverInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutApproverInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutApproverInput, KPI_DataUncheckedUpdateWithoutApproverInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutApproverInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutApproverInput>
  }

  export type IncidentUpsertWithWhereUniqueWithoutReporterInput = {
    where: IncidentWhereUniqueInput
    update: XOR<IncidentUpdateWithoutReporterInput, IncidentUncheckedUpdateWithoutReporterInput>
    create: XOR<IncidentCreateWithoutReporterInput, IncidentUncheckedCreateWithoutReporterInput>
  }

  export type IncidentUpdateWithWhereUniqueWithoutReporterInput = {
    where: IncidentWhereUniqueInput
    data: XOR<IncidentUpdateWithoutReporterInput, IncidentUncheckedUpdateWithoutReporterInput>
  }

  export type IncidentUpdateManyWithWhereWithoutReporterInput = {
    where: IncidentScalarWhereInput
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyWithoutReporterInput>
  }

  export type IncidentScalarWhereInput = {
    AND?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
    OR?: IncidentScalarWhereInput[]
    NOT?: IncidentScalarWhereInput | IncidentScalarWhereInput[]
    id?: IntFilter<"Incident"> | number
    ready?: BoolFilter<"Incident"> | boolean
    reporterId?: IntFilter<"Incident"> | number
    detectionTime?: DateTimeFilter<"Incident"> | Date | string
    notificationId?: StringNullableFilter<"Incident"> | string | null
    beginning?: DateTimeFilter<"Incident"> | Date | string
    end?: DateTimeFilter<"Incident"> | Date | string
    type?: StringFilter<"Incident"> | string
    systemId?: IntFilter<"Incident"> | number
    companyId?: IntFilter<"Incident"> | number
    urgency?: StringFilter<"Incident"> | string
    criticality?: StringFilter<"Incident"> | string
    description?: StringFilter<"Incident"> | string
    creatorId?: IntFilter<"Incident"> | number
    handlerId?: IntFilter<"Incident"> | number
    cause?: StringNullableFilter<"Incident"> | string | null
    measure?: StringNullableFilter<"Incident"> | string | null
    notification?: StringNullableFilter<"Incident"> | string | null
    created?: DateTimeFilter<"Incident"> | Date | string
    modified?: DateTimeFilter<"Incident"> | Date | string
    expired?: DateTimeNullableFilter<"Incident"> | Date | string | null
  }

  export type IncidentUpsertWithWhereUniqueWithoutCreatorInput = {
    where: IncidentWhereUniqueInput
    update: XOR<IncidentUpdateWithoutCreatorInput, IncidentUncheckedUpdateWithoutCreatorInput>
    create: XOR<IncidentCreateWithoutCreatorInput, IncidentUncheckedCreateWithoutCreatorInput>
  }

  export type IncidentUpdateWithWhereUniqueWithoutCreatorInput = {
    where: IncidentWhereUniqueInput
    data: XOR<IncidentUpdateWithoutCreatorInput, IncidentUncheckedUpdateWithoutCreatorInput>
  }

  export type IncidentUpdateManyWithWhereWithoutCreatorInput = {
    where: IncidentScalarWhereInput
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyWithoutCreatorInput>
  }

  export type IncidentUpsertWithWhereUniqueWithoutHandlerInput = {
    where: IncidentWhereUniqueInput
    update: XOR<IncidentUpdateWithoutHandlerInput, IncidentUncheckedUpdateWithoutHandlerInput>
    create: XOR<IncidentCreateWithoutHandlerInput, IncidentUncheckedCreateWithoutHandlerInput>
  }

  export type IncidentUpdateWithWhereUniqueWithoutHandlerInput = {
    where: IncidentWhereUniqueInput
    data: XOR<IncidentUpdateWithoutHandlerInput, IncidentUncheckedUpdateWithoutHandlerInput>
  }

  export type IncidentUpdateManyWithWhereWithoutHandlerInput = {
    where: IncidentScalarWhereInput
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyWithoutHandlerInput>
  }

  export type SystemUpsertWithWhereUniqueWithoutAnalystInput = {
    where: SystemWhereUniqueInput
    update: XOR<SystemUpdateWithoutAnalystInput, SystemUncheckedUpdateWithoutAnalystInput>
    create: XOR<SystemCreateWithoutAnalystInput, SystemUncheckedCreateWithoutAnalystInput>
  }

  export type SystemUpdateWithWhereUniqueWithoutAnalystInput = {
    where: SystemWhereUniqueInput
    data: XOR<SystemUpdateWithoutAnalystInput, SystemUncheckedUpdateWithoutAnalystInput>
  }

  export type SystemUpdateManyWithWhereWithoutAnalystInput = {
    where: SystemScalarWhereInput
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyWithoutAnalystInput>
  }

  export type SystemScalarWhereInput = {
    AND?: SystemScalarWhereInput | SystemScalarWhereInput[]
    OR?: SystemScalarWhereInput[]
    NOT?: SystemScalarWhereInput | SystemScalarWhereInput[]
    id?: IntFilter<"System"> | number
    name?: StringFilter<"System"> | string
    description?: StringNullableFilter<"System"> | string | null
    criticality?: StringNullableFilter<"System"> | string | null
    availability?: StringNullableFilter<"System"> | string | null
    recoverability?: StringNullableFilter<"System"> | string | null
    maintainability?: StringNullableFilter<"System"> | string | null
    integrity?: StringNullableFilter<"System"> | string | null
    confidentiality?: StringNullableFilter<"System"> | string | null
    analystId?: IntNullableFilter<"System"> | number | null
    applicationOperatorId?: IntNullableFilter<"System"> | number | null
    platformOperatorId?: IntNullableFilter<"System"> | number | null
    infrastructureOperatorId?: IntNullableFilter<"System"> | number | null
    companyId?: IntFilter<"System"> | number
    created?: DateTimeFilter<"System"> | Date | string
    modified?: DateTimeFilter<"System"> | Date | string
    expired?: DateTimeNullableFilter<"System"> | Date | string | null
  }

  export type SystemUpsertWithWhereUniqueWithoutApplicationOperatorInput = {
    where: SystemWhereUniqueInput
    update: XOR<SystemUpdateWithoutApplicationOperatorInput, SystemUncheckedUpdateWithoutApplicationOperatorInput>
    create: XOR<SystemCreateWithoutApplicationOperatorInput, SystemUncheckedCreateWithoutApplicationOperatorInput>
  }

  export type SystemUpdateWithWhereUniqueWithoutApplicationOperatorInput = {
    where: SystemWhereUniqueInput
    data: XOR<SystemUpdateWithoutApplicationOperatorInput, SystemUncheckedUpdateWithoutApplicationOperatorInput>
  }

  export type SystemUpdateManyWithWhereWithoutApplicationOperatorInput = {
    where: SystemScalarWhereInput
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyWithoutApplicationOperatorInput>
  }

  export type SystemUpsertWithWhereUniqueWithoutPlatformOperatorInput = {
    where: SystemWhereUniqueInput
    update: XOR<SystemUpdateWithoutPlatformOperatorInput, SystemUncheckedUpdateWithoutPlatformOperatorInput>
    create: XOR<SystemCreateWithoutPlatformOperatorInput, SystemUncheckedCreateWithoutPlatformOperatorInput>
  }

  export type SystemUpdateWithWhereUniqueWithoutPlatformOperatorInput = {
    where: SystemWhereUniqueInput
    data: XOR<SystemUpdateWithoutPlatformOperatorInput, SystemUncheckedUpdateWithoutPlatformOperatorInput>
  }

  export type SystemUpdateManyWithWhereWithoutPlatformOperatorInput = {
    where: SystemScalarWhereInput
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyWithoutPlatformOperatorInput>
  }

  export type SystemUpsertWithWhereUniqueWithoutInfrastructureOperatorInput = {
    where: SystemWhereUniqueInput
    update: XOR<SystemUpdateWithoutInfrastructureOperatorInput, SystemUncheckedUpdateWithoutInfrastructureOperatorInput>
    create: XOR<SystemCreateWithoutInfrastructureOperatorInput, SystemUncheckedCreateWithoutInfrastructureOperatorInput>
  }

  export type SystemUpdateWithWhereUniqueWithoutInfrastructureOperatorInput = {
    where: SystemWhereUniqueInput
    data: XOR<SystemUpdateWithoutInfrastructureOperatorInput, SystemUncheckedUpdateWithoutInfrastructureOperatorInput>
  }

  export type SystemUpdateManyWithWhereWithoutInfrastructureOperatorInput = {
    where: SystemScalarWhereInput
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyWithoutInfrastructureOperatorInput>
  }

  export type UserRoleCreateWithoutRoleInput = {
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    user: UserCreateNestedOneWithoutUserRolesInput
  }

  export type UserRoleUncheckedCreateWithoutRoleInput = {
    id?: number
    userId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleCreateOrConnectWithoutRoleInput = {
    where: UserRoleWhereUniqueInput
    create: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput>
  }

  export type UserRoleCreateManyRoleInputEnvelope = {
    data: UserRoleCreateManyRoleInput | UserRoleCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type RoleRightCreateWithoutRoleInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    right: RightCreateNestedOneWithoutRoleRightsInput
  }

  export type RoleRightUncheckedCreateWithoutRoleInput = {
    id?: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightCreateOrConnectWithoutRoleInput = {
    where: RoleRightWhereUniqueInput
    create: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput>
  }

  export type RoleRightCreateManyRoleInputEnvelope = {
    data: RoleRightCreateManyRoleInput | RoleRightCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserRoleUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserRoleWhereUniqueInput
    update: XOR<UserRoleUpdateWithoutRoleInput, UserRoleUncheckedUpdateWithoutRoleInput>
    create: XOR<UserRoleCreateWithoutRoleInput, UserRoleUncheckedCreateWithoutRoleInput>
  }

  export type UserRoleUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserRoleWhereUniqueInput
    data: XOR<UserRoleUpdateWithoutRoleInput, UserRoleUncheckedUpdateWithoutRoleInput>
  }

  export type UserRoleUpdateManyWithWhereWithoutRoleInput = {
    where: UserRoleScalarWhereInput
    data: XOR<UserRoleUpdateManyMutationInput, UserRoleUncheckedUpdateManyWithoutRoleInput>
  }

  export type RoleRightUpsertWithWhereUniqueWithoutRoleInput = {
    where: RoleRightWhereUniqueInput
    update: XOR<RoleRightUpdateWithoutRoleInput, RoleRightUncheckedUpdateWithoutRoleInput>
    create: XOR<RoleRightCreateWithoutRoleInput, RoleRightUncheckedCreateWithoutRoleInput>
  }

  export type RoleRightUpdateWithWhereUniqueWithoutRoleInput = {
    where: RoleRightWhereUniqueInput
    data: XOR<RoleRightUpdateWithoutRoleInput, RoleRightUncheckedUpdateWithoutRoleInput>
  }

  export type RoleRightUpdateManyWithWhereWithoutRoleInput = {
    where: RoleRightScalarWhereInput
    data: XOR<RoleRightUpdateManyMutationInput, RoleRightUncheckedUpdateManyWithoutRoleInput>
  }

  export type RoleRightScalarWhereInput = {
    AND?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
    OR?: RoleRightScalarWhereInput[]
    NOT?: RoleRightScalarWhereInput | RoleRightScalarWhereInput[]
    id?: IntFilter<"RoleRight"> | number
    roleId?: IntFilter<"RoleRight"> | number
    rightId?: IntFilter<"RoleRight"> | number
    permission?: StringFilter<"RoleRight"> | string
    created?: DateTimeFilter<"RoleRight"> | Date | string
    modified?: DateTimeFilter<"RoleRight"> | Date | string
    expired?: DateTimeNullableFilter<"RoleRight"> | Date | string | null
  }

  export type RoleRightCreateWithoutRightInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    role: RoleCreateNestedOneWithoutRoleRightsInput
  }

  export type RoleRightUncheckedCreateWithoutRightInput = {
    id?: number
    roleId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightCreateOrConnectWithoutRightInput = {
    where: RoleRightWhereUniqueInput
    create: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput>
  }

  export type RoleRightCreateManyRightInputEnvelope = {
    data: RoleRightCreateManyRightInput | RoleRightCreateManyRightInput[]
    skipDuplicates?: boolean
  }

  export type UserRightCreateWithoutRightInput = {
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    user: UserCreateNestedOneWithoutUserRightsInput
  }

  export type UserRightUncheckedCreateWithoutRightInput = {
    id?: number
    userId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightCreateOrConnectWithoutRightInput = {
    where: UserRightWhereUniqueInput
    create: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput>
  }

  export type UserRightCreateManyRightInputEnvelope = {
    data: UserRightCreateManyRightInput | UserRightCreateManyRightInput[]
    skipDuplicates?: boolean
  }

  export type RoleRightUpsertWithWhereUniqueWithoutRightInput = {
    where: RoleRightWhereUniqueInput
    update: XOR<RoleRightUpdateWithoutRightInput, RoleRightUncheckedUpdateWithoutRightInput>
    create: XOR<RoleRightCreateWithoutRightInput, RoleRightUncheckedCreateWithoutRightInput>
  }

  export type RoleRightUpdateWithWhereUniqueWithoutRightInput = {
    where: RoleRightWhereUniqueInput
    data: XOR<RoleRightUpdateWithoutRightInput, RoleRightUncheckedUpdateWithoutRightInput>
  }

  export type RoleRightUpdateManyWithWhereWithoutRightInput = {
    where: RoleRightScalarWhereInput
    data: XOR<RoleRightUpdateManyMutationInput, RoleRightUncheckedUpdateManyWithoutRightInput>
  }

  export type UserRightUpsertWithWhereUniqueWithoutRightInput = {
    where: UserRightWhereUniqueInput
    update: XOR<UserRightUpdateWithoutRightInput, UserRightUncheckedUpdateWithoutRightInput>
    create: XOR<UserRightCreateWithoutRightInput, UserRightUncheckedCreateWithoutRightInput>
  }

  export type UserRightUpdateWithWhereUniqueWithoutRightInput = {
    where: UserRightWhereUniqueInput
    data: XOR<UserRightUpdateWithoutRightInput, UserRightUncheckedUpdateWithoutRightInput>
  }

  export type UserRightUpdateManyWithWhereWithoutRightInput = {
    where: UserRightScalarWhereInput
    data: XOR<UserRightUpdateManyMutationInput, UserRightUncheckedUpdateManyWithoutRightInput>
  }

  export type UserCreateWithoutUserRolesInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutUserRolesInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutUserRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
  }

  export type RoleCreateWithoutUserRolesInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutUserRolesInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutUserRolesInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
  }

  export type UserUpsertWithoutUserRolesInput = {
    update: XOR<UserUpdateWithoutUserRolesInput, UserUncheckedUpdateWithoutUserRolesInput>
    create: XOR<UserCreateWithoutUserRolesInput, UserUncheckedCreateWithoutUserRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserRolesInput, UserUncheckedUpdateWithoutUserRolesInput>
  }

  export type UserUpdateWithoutUserRolesInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutUserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type RoleUpsertWithoutUserRolesInput = {
    update: XOR<RoleUpdateWithoutUserRolesInput, RoleUncheckedUpdateWithoutUserRolesInput>
    create: XOR<RoleCreateWithoutUserRolesInput, RoleUncheckedCreateWithoutUserRolesInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUserRolesInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUserRolesInput, RoleUncheckedUpdateWithoutUserRolesInput>
  }

  export type RoleUpdateWithoutUserRolesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutUserRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateWithoutRoleRightsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutRoleRightsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutRoleRightsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutRoleRightsInput, RoleUncheckedCreateWithoutRoleRightsInput>
  }

  export type RightCreateWithoutRoleRightsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRights?: UserRightCreateNestedManyWithoutRightInput
  }

  export type RightUncheckedCreateWithoutRoleRightsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRights?: UserRightUncheckedCreateNestedManyWithoutRightInput
  }

  export type RightCreateOrConnectWithoutRoleRightsInput = {
    where: RightWhereUniqueInput
    create: XOR<RightCreateWithoutRoleRightsInput, RightUncheckedCreateWithoutRoleRightsInput>
  }

  export type RoleUpsertWithoutRoleRightsInput = {
    update: XOR<RoleUpdateWithoutRoleRightsInput, RoleUncheckedUpdateWithoutRoleRightsInput>
    create: XOR<RoleCreateWithoutRoleRightsInput, RoleUncheckedCreateWithoutRoleRightsInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutRoleRightsInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutRoleRightsInput, RoleUncheckedUpdateWithoutRoleRightsInput>
  }

  export type RoleUpdateWithoutRoleRightsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutRoleRightsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RightUpsertWithoutRoleRightsInput = {
    update: XOR<RightUpdateWithoutRoleRightsInput, RightUncheckedUpdateWithoutRoleRightsInput>
    create: XOR<RightCreateWithoutRoleRightsInput, RightUncheckedCreateWithoutRoleRightsInput>
    where?: RightWhereInput
  }

  export type RightUpdateToOneWithWhereWithoutRoleRightsInput = {
    where?: RightWhereInput
    data: XOR<RightUpdateWithoutRoleRightsInput, RightUncheckedUpdateWithoutRoleRightsInput>
  }

  export type RightUpdateWithoutRoleRightsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRights?: UserRightUpdateManyWithoutRightNestedInput
  }

  export type RightUncheckedUpdateWithoutRoleRightsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRights?: UserRightUncheckedUpdateManyWithoutRightNestedInput
  }

  export type UserCreateWithoutUserRightsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutUserRightsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutUserRightsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserRightsInput, UserUncheckedCreateWithoutUserRightsInput>
  }

  export type RightCreateWithoutUserRightsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightCreateNestedManyWithoutRightInput
  }

  export type RightUncheckedCreateWithoutUserRightsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    roleRights?: RoleRightUncheckedCreateNestedManyWithoutRightInput
  }

  export type RightCreateOrConnectWithoutUserRightsInput = {
    where: RightWhereUniqueInput
    create: XOR<RightCreateWithoutUserRightsInput, RightUncheckedCreateWithoutUserRightsInput>
  }

  export type UserUpsertWithoutUserRightsInput = {
    update: XOR<UserUpdateWithoutUserRightsInput, UserUncheckedUpdateWithoutUserRightsInput>
    create: XOR<UserCreateWithoutUserRightsInput, UserUncheckedCreateWithoutUserRightsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserRightsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserRightsInput, UserUncheckedUpdateWithoutUserRightsInput>
  }

  export type UserUpdateWithoutUserRightsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutUserRightsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type RightUpsertWithoutUserRightsInput = {
    update: XOR<RightUpdateWithoutUserRightsInput, RightUncheckedUpdateWithoutUserRightsInput>
    create: XOR<RightCreateWithoutUserRightsInput, RightUncheckedCreateWithoutUserRightsInput>
    where?: RightWhereInput
  }

  export type RightUpdateToOneWithWhereWithoutUserRightsInput = {
    where?: RightWhereInput
    data: XOR<RightUpdateWithoutUserRightsInput, RightUncheckedUpdateWithoutUserRightsInput>
  }

  export type RightUpdateWithoutUserRightsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUpdateManyWithoutRightNestedInput
  }

  export type RightUncheckedUpdateWithoutUserRightsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    roleRights?: RoleRightUncheckedUpdateManyWithoutRightNestedInput
  }

  export type UserCreateWithoutLogsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutLogsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLogsInput, UserUncheckedCreateWithoutLogsInput>
  }

  export type UserUpsertWithoutLogsInput = {
    update: XOR<UserUpdateWithoutLogsInput, UserUncheckedUpdateWithoutLogsInput>
    create: XOR<UserCreateWithoutLogsInput, UserUncheckedCreateWithoutLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLogsInput, UserUncheckedUpdateWithoutLogsInput>
  }

  export type UserUpdateWithoutLogsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutLogsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type KPI_DataCreateWithoutServiceInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateWithoutServiceInput = {
    id?: number
    itemId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutServiceInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput>
  }

  export type KPI_DataCreateManyServiceInputEnvelope = {
    data: KPI_DataCreateManyServiceInput | KPI_DataCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type RelationCreateWithoutServiceInput = {
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    system: SystemCreateNestedOneWithoutRelationsInput
  }

  export type RelationUncheckedCreateWithoutServiceInput = {
    id?: number
    systemId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationCreateOrConnectWithoutServiceInput = {
    where: RelationWhereUniqueInput
    create: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput>
  }

  export type RelationCreateManyServiceInputEnvelope = {
    data: RelationCreateManyServiceInput | RelationCreateManyServiceInput[]
    skipDuplicates?: boolean
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutServiceInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutServiceInput, KPI_DataUncheckedUpdateWithoutServiceInput>
    create: XOR<KPI_DataCreateWithoutServiceInput, KPI_DataUncheckedCreateWithoutServiceInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutServiceInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutServiceInput, KPI_DataUncheckedUpdateWithoutServiceInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutServiceInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutServiceInput>
  }

  export type RelationUpsertWithWhereUniqueWithoutServiceInput = {
    where: RelationWhereUniqueInput
    update: XOR<RelationUpdateWithoutServiceInput, RelationUncheckedUpdateWithoutServiceInput>
    create: XOR<RelationCreateWithoutServiceInput, RelationUncheckedCreateWithoutServiceInput>
  }

  export type RelationUpdateWithWhereUniqueWithoutServiceInput = {
    where: RelationWhereUniqueInput
    data: XOR<RelationUpdateWithoutServiceInput, RelationUncheckedUpdateWithoutServiceInput>
  }

  export type RelationUpdateManyWithWhereWithoutServiceInput = {
    where: RelationScalarWhereInput
    data: XOR<RelationUpdateManyMutationInput, RelationUncheckedUpdateManyWithoutServiceInput>
  }

  export type RelationScalarWhereInput = {
    AND?: RelationScalarWhereInput | RelationScalarWhereInput[]
    OR?: RelationScalarWhereInput[]
    NOT?: RelationScalarWhereInput | RelationScalarWhereInput[]
    id?: IntFilter<"Relation"> | number
    serviceId?: IntFilter<"Relation"> | number
    systemId?: IntFilter<"Relation"> | number
    validFrom?: DateTimeFilter<"Relation"> | Date | string
    validTo?: DateTimeNullableFilter<"Relation"> | Date | string | null
    created?: DateTimeFilter<"Relation"> | Date | string
    modified?: DateTimeFilter<"Relation"> | Date | string
    expired?: DateTimeNullableFilter<"Relation"> | Date | string | null
  }

  export type ItemCreateWithoutKpiDataInput = {
    code: string
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type ItemUncheckedCreateWithoutKpiDataInput = {
    id?: number
    code: string
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type ItemCreateOrConnectWithoutKpiDataInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutKpiDataInput, ItemUncheckedCreateWithoutKpiDataInput>
  }

  export type ServiceCreateWithoutKpiDataInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    relations?: RelationCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutKpiDataInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    relations?: RelationUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutKpiDataInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutKpiDataInput, ServiceUncheckedCreateWithoutKpiDataInput>
  }

  export type UserCreateWithoutKpiDataInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutKpiDataInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutKpiDataInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutKpiDataInput, UserUncheckedCreateWithoutKpiDataInput>
  }

  export type CompanyCreateWithoutKpiDataInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    systems?: SystemCreateNestedManyWithoutCompanyInput
    incidents?: IncidentCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutKpiDataInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    systems?: SystemUncheckedCreateNestedManyWithoutCompanyInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutKpiDataInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutKpiDataInput, CompanyUncheckedCreateWithoutKpiDataInput>
  }

  export type SystemCreateWithoutKpiDataInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutKpiDataInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutKpiDataInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutKpiDataInput, SystemUncheckedCreateWithoutKpiDataInput>
  }

  export type UserCreateWithoutApprovedKPIInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutApprovedKPIInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutApprovedKPIInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApprovedKPIInput, UserUncheckedCreateWithoutApprovedKPIInput>
  }

  export type ItemUpsertWithoutKpiDataInput = {
    update: XOR<ItemUpdateWithoutKpiDataInput, ItemUncheckedUpdateWithoutKpiDataInput>
    create: XOR<ItemCreateWithoutKpiDataInput, ItemUncheckedCreateWithoutKpiDataInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutKpiDataInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutKpiDataInput, ItemUncheckedUpdateWithoutKpiDataInput>
  }

  export type ItemUpdateWithoutKpiDataInput = {
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ItemUncheckedUpdateWithoutKpiDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ServiceUpsertWithoutKpiDataInput = {
    update: XOR<ServiceUpdateWithoutKpiDataInput, ServiceUncheckedUpdateWithoutKpiDataInput>
    create: XOR<ServiceCreateWithoutKpiDataInput, ServiceUncheckedCreateWithoutKpiDataInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutKpiDataInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutKpiDataInput, ServiceUncheckedUpdateWithoutKpiDataInput>
  }

  export type ServiceUpdateWithoutKpiDataInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    relations?: RelationUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutKpiDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    relations?: RelationUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type UserUpsertWithoutKpiDataInput = {
    update: XOR<UserUpdateWithoutKpiDataInput, UserUncheckedUpdateWithoutKpiDataInput>
    create: XOR<UserCreateWithoutKpiDataInput, UserUncheckedCreateWithoutKpiDataInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutKpiDataInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutKpiDataInput, UserUncheckedUpdateWithoutKpiDataInput>
  }

  export type UserUpdateWithoutKpiDataInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutKpiDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type CompanyUpsertWithoutKpiDataInput = {
    update: XOR<CompanyUpdateWithoutKpiDataInput, CompanyUncheckedUpdateWithoutKpiDataInput>
    create: XOR<CompanyCreateWithoutKpiDataInput, CompanyUncheckedCreateWithoutKpiDataInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutKpiDataInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutKpiDataInput, CompanyUncheckedUpdateWithoutKpiDataInput>
  }

  export type CompanyUpdateWithoutKpiDataInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    systems?: SystemUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutKpiDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    systems?: SystemUncheckedUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type SystemUpsertWithoutKpiDataInput = {
    update: XOR<SystemUpdateWithoutKpiDataInput, SystemUncheckedUpdateWithoutKpiDataInput>
    create: XOR<SystemCreateWithoutKpiDataInput, SystemUncheckedCreateWithoutKpiDataInput>
    where?: SystemWhereInput
  }

  export type SystemUpdateToOneWithWhereWithoutKpiDataInput = {
    where?: SystemWhereInput
    data: XOR<SystemUpdateWithoutKpiDataInput, SystemUncheckedUpdateWithoutKpiDataInput>
  }

  export type SystemUpdateWithoutKpiDataInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutKpiDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type UserUpsertWithoutApprovedKPIInput = {
    update: XOR<UserUpdateWithoutApprovedKPIInput, UserUncheckedUpdateWithoutApprovedKPIInput>
    create: XOR<UserCreateWithoutApprovedKPIInput, UserUncheckedCreateWithoutApprovedKPIInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApprovedKPIInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApprovedKPIInput, UserUncheckedUpdateWithoutApprovedKPIInput>
  }

  export type UserUpdateWithoutApprovedKPIInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutApprovedKPIInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type KPI_DataCreateWithoutItemInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    service: ServiceCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateWithoutItemInput = {
    id?: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutItemInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput>
  }

  export type KPI_DataCreateManyItemInputEnvelope = {
    data: KPI_DataCreateManyItemInput | KPI_DataCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutItemInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutItemInput, KPI_DataUncheckedUpdateWithoutItemInput>
    create: XOR<KPI_DataCreateWithoutItemInput, KPI_DataUncheckedCreateWithoutItemInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutItemInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutItemInput, KPI_DataUncheckedUpdateWithoutItemInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutItemInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutItemInput>
  }

  export type KPI_DataCreateWithoutCompanyInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    service: ServiceCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    system: SystemCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateWithoutCompanyInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutCompanyInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput>
  }

  export type KPI_DataCreateManyCompanyInputEnvelope = {
    data: KPI_DataCreateManyCompanyInput | KPI_DataCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type SystemCreateWithoutCompanyInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutCompanyInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutCompanyInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput>
  }

  export type SystemCreateManyCompanyInputEnvelope = {
    data: SystemCreateManyCompanyInput | SystemCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type IncidentCreateWithoutCompanyInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    reporter: UserCreateNestedOneWithoutReportedIncidentsInput
    system: SystemCreateNestedOneWithoutIncidentsInput
    creator: UserCreateNestedOneWithoutCreatedIncidentsInput
    handler: UserCreateNestedOneWithoutHandledIncidentsInput
  }

  export type IncidentUncheckedCreateWithoutCompanyInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateOrConnectWithoutCompanyInput = {
    where: IncidentWhereUniqueInput
    create: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput>
  }

  export type IncidentCreateManyCompanyInputEnvelope = {
    data: IncidentCreateManyCompanyInput | IncidentCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutCompanyInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutCompanyInput, KPI_DataUncheckedUpdateWithoutCompanyInput>
    create: XOR<KPI_DataCreateWithoutCompanyInput, KPI_DataUncheckedCreateWithoutCompanyInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutCompanyInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutCompanyInput, KPI_DataUncheckedUpdateWithoutCompanyInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutCompanyInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutCompanyInput>
  }

  export type SystemUpsertWithWhereUniqueWithoutCompanyInput = {
    where: SystemWhereUniqueInput
    update: XOR<SystemUpdateWithoutCompanyInput, SystemUncheckedUpdateWithoutCompanyInput>
    create: XOR<SystemCreateWithoutCompanyInput, SystemUncheckedCreateWithoutCompanyInput>
  }

  export type SystemUpdateWithWhereUniqueWithoutCompanyInput = {
    where: SystemWhereUniqueInput
    data: XOR<SystemUpdateWithoutCompanyInput, SystemUncheckedUpdateWithoutCompanyInput>
  }

  export type SystemUpdateManyWithWhereWithoutCompanyInput = {
    where: SystemScalarWhereInput
    data: XOR<SystemUpdateManyMutationInput, SystemUncheckedUpdateManyWithoutCompanyInput>
  }

  export type IncidentUpsertWithWhereUniqueWithoutCompanyInput = {
    where: IncidentWhereUniqueInput
    update: XOR<IncidentUpdateWithoutCompanyInput, IncidentUncheckedUpdateWithoutCompanyInput>
    create: XOR<IncidentCreateWithoutCompanyInput, IncidentUncheckedCreateWithoutCompanyInput>
  }

  export type IncidentUpdateWithWhereUniqueWithoutCompanyInput = {
    where: IncidentWhereUniqueInput
    data: XOR<IncidentUpdateWithoutCompanyInput, IncidentUncheckedUpdateWithoutCompanyInput>
  }

  export type IncidentUpdateManyWithWhereWithoutCompanyInput = {
    where: IncidentScalarWhereInput
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyWithoutCompanyInput>
  }

  export type KPI_DataCreateWithoutSystemInput = {
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    item: ItemCreateNestedOneWithoutKpiDataInput
    service: ServiceCreateNestedOneWithoutKpiDataInput
    user: UserCreateNestedOneWithoutKpiDataInput
    company: CompanyCreateNestedOneWithoutKpiDataInput
    approver?: UserCreateNestedOneWithoutApprovedKPIInput
  }

  export type KPI_DataUncheckedCreateWithoutSystemInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateOrConnectWithoutSystemInput = {
    where: KPI_DataWhereUniqueInput
    create: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput>
  }

  export type KPI_DataCreateManySystemInputEnvelope = {
    data: KPI_DataCreateManySystemInput | KPI_DataCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type IncidentCreateWithoutSystemInput = {
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    urgency: string
    criticality: string
    description: string
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    reporter: UserCreateNestedOneWithoutReportedIncidentsInput
    company: CompanyCreateNestedOneWithoutIncidentsInput
    creator: UserCreateNestedOneWithoutCreatedIncidentsInput
    handler: UserCreateNestedOneWithoutHandledIncidentsInput
  }

  export type IncidentUncheckedCreateWithoutSystemInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateOrConnectWithoutSystemInput = {
    where: IncidentWhereUniqueInput
    create: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput>
  }

  export type IncidentCreateManySystemInputEnvelope = {
    data: IncidentCreateManySystemInput | IncidentCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type RelationCreateWithoutSystemInput = {
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    service: ServiceCreateNestedOneWithoutRelationsInput
  }

  export type RelationUncheckedCreateWithoutSystemInput = {
    id?: number
    serviceId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationCreateOrConnectWithoutSystemInput = {
    where: RelationWhereUniqueInput
    create: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput>
  }

  export type RelationCreateManySystemInputEnvelope = {
    data: RelationCreateManySystemInput | RelationCreateManySystemInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutSystemsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutCompanyInput
    incidents?: IncidentCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSystemsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutCompanyInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSystemsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSystemsInput, CompanyUncheckedCreateWithoutSystemsInput>
  }

  export type UserCreateWithoutAnalystSystemsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutAnalystSystemsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutAnalystSystemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAnalystSystemsInput, UserUncheckedCreateWithoutAnalystSystemsInput>
  }

  export type UserCreateWithoutAppOperatorSystemsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutAppOperatorSystemsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutAppOperatorSystemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAppOperatorSystemsInput, UserUncheckedCreateWithoutAppOperatorSystemsInput>
  }

  export type UserCreateWithoutPlatformOperatorSystemsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutPlatformOperatorSystemsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutPlatformOperatorSystemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPlatformOperatorSystemsInput, UserUncheckedCreateWithoutPlatformOperatorSystemsInput>
  }

  export type UserCreateWithoutInfraOperatorSystemsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
  }

  export type UserUncheckedCreateWithoutInfraOperatorSystemsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
  }

  export type UserCreateOrConnectWithoutInfraOperatorSystemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInfraOperatorSystemsInput, UserUncheckedCreateWithoutInfraOperatorSystemsInput>
  }

  export type KPI_DataUpsertWithWhereUniqueWithoutSystemInput = {
    where: KPI_DataWhereUniqueInput
    update: XOR<KPI_DataUpdateWithoutSystemInput, KPI_DataUncheckedUpdateWithoutSystemInput>
    create: XOR<KPI_DataCreateWithoutSystemInput, KPI_DataUncheckedCreateWithoutSystemInput>
  }

  export type KPI_DataUpdateWithWhereUniqueWithoutSystemInput = {
    where: KPI_DataWhereUniqueInput
    data: XOR<KPI_DataUpdateWithoutSystemInput, KPI_DataUncheckedUpdateWithoutSystemInput>
  }

  export type KPI_DataUpdateManyWithWhereWithoutSystemInput = {
    where: KPI_DataScalarWhereInput
    data: XOR<KPI_DataUpdateManyMutationInput, KPI_DataUncheckedUpdateManyWithoutSystemInput>
  }

  export type IncidentUpsertWithWhereUniqueWithoutSystemInput = {
    where: IncidentWhereUniqueInput
    update: XOR<IncidentUpdateWithoutSystemInput, IncidentUncheckedUpdateWithoutSystemInput>
    create: XOR<IncidentCreateWithoutSystemInput, IncidentUncheckedCreateWithoutSystemInput>
  }

  export type IncidentUpdateWithWhereUniqueWithoutSystemInput = {
    where: IncidentWhereUniqueInput
    data: XOR<IncidentUpdateWithoutSystemInput, IncidentUncheckedUpdateWithoutSystemInput>
  }

  export type IncidentUpdateManyWithWhereWithoutSystemInput = {
    where: IncidentScalarWhereInput
    data: XOR<IncidentUpdateManyMutationInput, IncidentUncheckedUpdateManyWithoutSystemInput>
  }

  export type RelationUpsertWithWhereUniqueWithoutSystemInput = {
    where: RelationWhereUniqueInput
    update: XOR<RelationUpdateWithoutSystemInput, RelationUncheckedUpdateWithoutSystemInput>
    create: XOR<RelationCreateWithoutSystemInput, RelationUncheckedCreateWithoutSystemInput>
  }

  export type RelationUpdateWithWhereUniqueWithoutSystemInput = {
    where: RelationWhereUniqueInput
    data: XOR<RelationUpdateWithoutSystemInput, RelationUncheckedUpdateWithoutSystemInput>
  }

  export type RelationUpdateManyWithWhereWithoutSystemInput = {
    where: RelationScalarWhereInput
    data: XOR<RelationUpdateManyMutationInput, RelationUncheckedUpdateManyWithoutSystemInput>
  }

  export type CompanyUpsertWithoutSystemsInput = {
    update: XOR<CompanyUpdateWithoutSystemsInput, CompanyUncheckedUpdateWithoutSystemsInput>
    create: XOR<CompanyCreateWithoutSystemsInput, CompanyUncheckedCreateWithoutSystemsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutSystemsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutSystemsInput, CompanyUncheckedUpdateWithoutSystemsInput>
  }

  export type CompanyUpdateWithoutSystemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSystemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutCompanyNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserUpsertWithoutAnalystSystemsInput = {
    update: XOR<UserUpdateWithoutAnalystSystemsInput, UserUncheckedUpdateWithoutAnalystSystemsInput>
    create: XOR<UserCreateWithoutAnalystSystemsInput, UserUncheckedCreateWithoutAnalystSystemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAnalystSystemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAnalystSystemsInput, UserUncheckedUpdateWithoutAnalystSystemsInput>
  }

  export type UserUpdateWithoutAnalystSystemsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutAnalystSystemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUpsertWithoutAppOperatorSystemsInput = {
    update: XOR<UserUpdateWithoutAppOperatorSystemsInput, UserUncheckedUpdateWithoutAppOperatorSystemsInput>
    create: XOR<UserCreateWithoutAppOperatorSystemsInput, UserUncheckedCreateWithoutAppOperatorSystemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAppOperatorSystemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAppOperatorSystemsInput, UserUncheckedUpdateWithoutAppOperatorSystemsInput>
  }

  export type UserUpdateWithoutAppOperatorSystemsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutAppOperatorSystemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUpsertWithoutPlatformOperatorSystemsInput = {
    update: XOR<UserUpdateWithoutPlatformOperatorSystemsInput, UserUncheckedUpdateWithoutPlatformOperatorSystemsInput>
    create: XOR<UserCreateWithoutPlatformOperatorSystemsInput, UserUncheckedCreateWithoutPlatformOperatorSystemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPlatformOperatorSystemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPlatformOperatorSystemsInput, UserUncheckedUpdateWithoutPlatformOperatorSystemsInput>
  }

  export type UserUpdateWithoutPlatformOperatorSystemsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutPlatformOperatorSystemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUpsertWithoutInfraOperatorSystemsInput = {
    update: XOR<UserUpdateWithoutInfraOperatorSystemsInput, UserUncheckedUpdateWithoutInfraOperatorSystemsInput>
    create: XOR<UserCreateWithoutInfraOperatorSystemsInput, UserUncheckedCreateWithoutInfraOperatorSystemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInfraOperatorSystemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInfraOperatorSystemsInput, UserUncheckedUpdateWithoutInfraOperatorSystemsInput>
  }

  export type UserUpdateWithoutInfraOperatorSystemsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutInfraOperatorSystemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
  }

  export type ServiceCreateWithoutRelationsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutServiceInput
  }

  export type ServiceUncheckedCreateWithoutRelationsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutServiceInput
  }

  export type ServiceCreateOrConnectWithoutRelationsInput = {
    where: ServiceWhereUniqueInput
    create: XOR<ServiceCreateWithoutRelationsInput, ServiceUncheckedCreateWithoutRelationsInput>
  }

  export type SystemCreateWithoutRelationsInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    incidents?: IncidentCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutRelationsInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    incidents?: IncidentUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutRelationsInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutRelationsInput, SystemUncheckedCreateWithoutRelationsInput>
  }

  export type ServiceUpsertWithoutRelationsInput = {
    update: XOR<ServiceUpdateWithoutRelationsInput, ServiceUncheckedUpdateWithoutRelationsInput>
    create: XOR<ServiceCreateWithoutRelationsInput, ServiceUncheckedCreateWithoutRelationsInput>
    where?: ServiceWhereInput
  }

  export type ServiceUpdateToOneWithWhereWithoutRelationsInput = {
    where?: ServiceWhereInput
    data: XOR<ServiceUpdateWithoutRelationsInput, ServiceUncheckedUpdateWithoutRelationsInput>
  }

  export type ServiceUpdateWithoutRelationsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutServiceNestedInput
  }

  export type ServiceUncheckedUpdateWithoutRelationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutServiceNestedInput
  }

  export type SystemUpsertWithoutRelationsInput = {
    update: XOR<SystemUpdateWithoutRelationsInput, SystemUncheckedUpdateWithoutRelationsInput>
    create: XOR<SystemCreateWithoutRelationsInput, SystemUncheckedCreateWithoutRelationsInput>
    where?: SystemWhereInput
  }

  export type SystemUpdateToOneWithWhereWithoutRelationsInput = {
    where?: SystemWhereInput
    data: XOR<SystemUpdateWithoutRelationsInput, SystemUncheckedUpdateWithoutRelationsInput>
  }

  export type SystemUpdateWithoutRelationsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutRelationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type UserCreateWithoutReportedIncidentsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutReportedIncidentsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutReportedIncidentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportedIncidentsInput, UserUncheckedCreateWithoutReportedIncidentsInput>
  }

  export type SystemCreateWithoutIncidentsInput = {
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutSystemInput
    relations?: RelationCreateNestedManyWithoutSystemInput
    company: CompanyCreateNestedOneWithoutSystemsInput
    analyst?: UserCreateNestedOneWithoutAnalystSystemsInput
    applicationOperator?: UserCreateNestedOneWithoutAppOperatorSystemsInput
    platformOperator?: UserCreateNestedOneWithoutPlatformOperatorSystemsInput
    infrastructureOperator?: UserCreateNestedOneWithoutInfraOperatorSystemsInput
  }

  export type SystemUncheckedCreateWithoutIncidentsInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutSystemInput
    relations?: RelationUncheckedCreateNestedManyWithoutSystemInput
  }

  export type SystemCreateOrConnectWithoutIncidentsInput = {
    where: SystemWhereUniqueInput
    create: XOR<SystemCreateWithoutIncidentsInput, SystemUncheckedCreateWithoutIncidentsInput>
  }

  export type CompanyCreateWithoutIncidentsInput = {
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataCreateNestedManyWithoutCompanyInput
    systems?: SystemCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutIncidentsInput = {
    id?: number
    name: string
    description?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutCompanyInput
    systems?: SystemUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutIncidentsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutIncidentsInput, CompanyUncheckedCreateWithoutIncidentsInput>
  }

  export type UserCreateWithoutCreatedIncidentsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    handledIncidents?: IncidentCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutCreatedIncidentsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    handledIncidents?: IncidentUncheckedCreateNestedManyWithoutHandlerInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutCreatedIncidentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedIncidentsInput, UserUncheckedCreateWithoutCreatedIncidentsInput>
  }

  export type UserCreateWithoutHandledIncidentsInput = {
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleCreateNestedManyWithoutUserInput
    userRights?: UserRightCreateNestedManyWithoutUserInput
    logs?: LogCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentCreateNestedManyWithoutCreatorInput
    analystSystems?: SystemCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserUncheckedCreateWithoutHandledIncidentsInput = {
    id?: number
    login: string
    name: string
    description?: string | null
    email?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
    userRoles?: UserRoleUncheckedCreateNestedManyWithoutUserInput
    userRights?: UserRightUncheckedCreateNestedManyWithoutUserInput
    logs?: LogUncheckedCreateNestedManyWithoutUserInput
    kpiData?: KPI_DataUncheckedCreateNestedManyWithoutUserInput
    approvedKPI?: KPI_DataUncheckedCreateNestedManyWithoutApproverInput
    reportedIncidents?: IncidentUncheckedCreateNestedManyWithoutReporterInput
    createdIncidents?: IncidentUncheckedCreateNestedManyWithoutCreatorInput
    analystSystems?: SystemUncheckedCreateNestedManyWithoutAnalystInput
    appOperatorSystems?: SystemUncheckedCreateNestedManyWithoutApplicationOperatorInput
    platformOperatorSystems?: SystemUncheckedCreateNestedManyWithoutPlatformOperatorInput
    infraOperatorSystems?: SystemUncheckedCreateNestedManyWithoutInfrastructureOperatorInput
  }

  export type UserCreateOrConnectWithoutHandledIncidentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutHandledIncidentsInput, UserUncheckedCreateWithoutHandledIncidentsInput>
  }

  export type UserUpsertWithoutReportedIncidentsInput = {
    update: XOR<UserUpdateWithoutReportedIncidentsInput, UserUncheckedUpdateWithoutReportedIncidentsInput>
    create: XOR<UserCreateWithoutReportedIncidentsInput, UserUncheckedCreateWithoutReportedIncidentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportedIncidentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportedIncidentsInput, UserUncheckedUpdateWithoutReportedIncidentsInput>
  }

  export type UserUpdateWithoutReportedIncidentsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutReportedIncidentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type SystemUpsertWithoutIncidentsInput = {
    update: XOR<SystemUpdateWithoutIncidentsInput, SystemUncheckedUpdateWithoutIncidentsInput>
    create: XOR<SystemCreateWithoutIncidentsInput, SystemUncheckedCreateWithoutIncidentsInput>
    where?: SystemWhereInput
  }

  export type SystemUpdateToOneWithWhereWithoutIncidentsInput = {
    where?: SystemWhereInput
    data: XOR<SystemUpdateWithoutIncidentsInput, SystemUncheckedUpdateWithoutIncidentsInput>
  }

  export type SystemUpdateWithoutIncidentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutIncidentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type CompanyUpsertWithoutIncidentsInput = {
    update: XOR<CompanyUpdateWithoutIncidentsInput, CompanyUncheckedUpdateWithoutIncidentsInput>
    create: XOR<CompanyCreateWithoutIncidentsInput, CompanyUncheckedCreateWithoutIncidentsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutIncidentsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutIncidentsInput, CompanyUncheckedUpdateWithoutIncidentsInput>
  }

  export type CompanyUpdateWithoutIncidentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutCompanyNestedInput
    systems?: SystemUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutIncidentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutCompanyNestedInput
    systems?: SystemUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserUpsertWithoutCreatedIncidentsInput = {
    update: XOR<UserUpdateWithoutCreatedIncidentsInput, UserUncheckedUpdateWithoutCreatedIncidentsInput>
    create: XOR<UserCreateWithoutCreatedIncidentsInput, UserUncheckedCreateWithoutCreatedIncidentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedIncidentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedIncidentsInput, UserUncheckedUpdateWithoutCreatedIncidentsInput>
  }

  export type UserUpdateWithoutCreatedIncidentsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    handledIncidents?: IncidentUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedIncidentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    handledIncidents?: IncidentUncheckedUpdateManyWithoutHandlerNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUpsertWithoutHandledIncidentsInput = {
    update: XOR<UserUpdateWithoutHandledIncidentsInput, UserUncheckedUpdateWithoutHandledIncidentsInput>
    create: XOR<UserCreateWithoutHandledIncidentsInput, UserUncheckedCreateWithoutHandledIncidentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutHandledIncidentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutHandledIncidentsInput, UserUncheckedUpdateWithoutHandledIncidentsInput>
  }

  export type UserUpdateWithoutHandledIncidentsInput = {
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUpdateManyWithoutUserNestedInput
    userRights?: UserRightUpdateManyWithoutUserNestedInput
    logs?: LogUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUpdateManyWithoutCreatorNestedInput
    analystSystems?: SystemUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserUncheckedUpdateWithoutHandledIncidentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    login?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userRoles?: UserRoleUncheckedUpdateManyWithoutUserNestedInput
    userRights?: UserRightUncheckedUpdateManyWithoutUserNestedInput
    logs?: LogUncheckedUpdateManyWithoutUserNestedInput
    kpiData?: KPI_DataUncheckedUpdateManyWithoutUserNestedInput
    approvedKPI?: KPI_DataUncheckedUpdateManyWithoutApproverNestedInput
    reportedIncidents?: IncidentUncheckedUpdateManyWithoutReporterNestedInput
    createdIncidents?: IncidentUncheckedUpdateManyWithoutCreatorNestedInput
    analystSystems?: SystemUncheckedUpdateManyWithoutAnalystNestedInput
    appOperatorSystems?: SystemUncheckedUpdateManyWithoutApplicationOperatorNestedInput
    platformOperatorSystems?: SystemUncheckedUpdateManyWithoutPlatformOperatorNestedInput
    infraOperatorSystems?: SystemUncheckedUpdateManyWithoutInfrastructureOperatorNestedInput
  }

  export type UserRoleCreateManyUserInput = {
    id?: number
    roleId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightCreateManyUserInput = {
    id?: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type LogCreateManyUserInput = {
    id?: number
    relationId?: number | null
    valueFrom?: string | null
    valueTo?: string | null
    created?: Date | string
  }

  export type KPI_DataCreateManyUserInput = {
    id?: number
    itemId: number
    serviceId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataCreateManyApproverInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateManyReporterInput = {
    id?: number
    ready?: boolean
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateManyCreatorInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateManyHandlerInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemCreateManyAnalystInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemCreateManyApplicationOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemCreateManyPlatformOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    infrastructureOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemCreateManyInfrastructureOperatorInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    companyId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleUpdateWithoutUserInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: RoleUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightUpdateWithoutUserInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    right?: RightUpdateOneRequiredWithoutUserRightsNestedInput
  }

  export type UserRightUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LogUpdateWithoutUserInput = {
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LogUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    relationId?: NullableIntFieldUpdateOperationsInput | number | null
    valueFrom?: NullableStringFieldUpdateOperationsInput | string | null
    valueTo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KPI_DataUpdateWithoutUserInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUpdateWithoutApproverInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutApproverInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutApproverInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUpdateWithoutReporterInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    system?: SystemUpdateOneRequiredWithoutIncidentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutIncidentsNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput
    handler?: UserUpdateOneRequiredWithoutHandledIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateWithoutReporterInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyWithoutReporterInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUpdateWithoutCreatorInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reporter?: UserUpdateOneRequiredWithoutReportedIncidentsNestedInput
    system?: SystemUpdateOneRequiredWithoutIncidentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutIncidentsNestedInput
    handler?: UserUpdateOneRequiredWithoutHandledIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyWithoutCreatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUpdateWithoutHandlerInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reporter?: UserUpdateOneRequiredWithoutReportedIncidentsNestedInput
    system?: SystemUpdateOneRequiredWithoutIncidentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutIncidentsNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateWithoutHandlerInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyWithoutHandlerInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUpdateWithoutAnalystInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutAnalystInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemUncheckedUpdateManyWithoutAnalystInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUpdateWithoutApplicationOperatorInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutApplicationOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemUncheckedUpdateManyWithoutApplicationOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUpdateWithoutPlatformOperatorInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutPlatformOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemUncheckedUpdateManyWithoutPlatformOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUpdateWithoutInfrastructureOperatorInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    company?: CompanyUpdateOneRequiredWithoutSystemsNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutInfrastructureOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemUncheckedUpdateManyWithoutInfrastructureOperatorInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    companyId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleCreateManyRoleInput = {
    id?: number
    userId: number
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightCreateManyRoleInput = {
    id?: number
    rightId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRoleUpdateWithoutRoleInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserRolesNestedInput
  }

  export type UserRoleUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRoleUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightUpdateWithoutRoleInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    right?: RightUpdateOneRequiredWithoutRoleRightsNestedInput
  }

  export type RoleRightUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    rightId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightCreateManyRightInput = {
    id?: number
    roleId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type UserRightCreateManyRightInput = {
    id?: number
    userId: number
    permission: string
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RoleRightUpdateWithoutRightInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: RoleUpdateOneRequiredWithoutRoleRightsNestedInput
  }

  export type RoleRightUncheckedUpdateWithoutRightInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleRightUncheckedUpdateManyWithoutRightInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightUpdateWithoutRightInput = {
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserRightsNestedInput
  }

  export type UserRightUncheckedUpdateWithoutRightInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserRightUncheckedUpdateManyWithoutRightInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    permission?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateManyServiceInput = {
    id?: number
    itemId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationCreateManyServiceInput = {
    id?: number
    systemId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateWithoutServiceInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationUpdateWithoutServiceInput = {
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    system?: SystemUpdateOneRequiredWithoutRelationsNestedInput
  }

  export type RelationUncheckedUpdateWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationUncheckedUpdateManyWithoutServiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateManyItemInput = {
    id?: number
    serviceId: number
    userId: number
    companyId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateWithoutItemInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateManyCompanyInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    systemId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type SystemCreateManyCompanyInput = {
    id?: number
    name: string
    description?: string | null
    criticality?: string | null
    availability?: string | null
    recoverability?: string | null
    maintainability?: string | null
    integrity?: string | null
    confidentiality?: string | null
    analystId?: number | null
    applicationOperatorId?: number | null
    platformOperatorId?: number | null
    infrastructureOperatorId?: number | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateManyCompanyInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    systemId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateWithoutCompanyInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    system?: SystemUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    systemId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SystemUpdateWithoutCompanyInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUpdateManyWithoutSystemNestedInput
    relations?: RelationUpdateManyWithoutSystemNestedInput
    analyst?: UserUpdateOneWithoutAnalystSystemsNestedInput
    applicationOperator?: UserUpdateOneWithoutAppOperatorSystemsNestedInput
    platformOperator?: UserUpdateOneWithoutPlatformOperatorSystemsNestedInput
    infrastructureOperator?: UserUpdateOneWithoutInfraOperatorSystemsNestedInput
  }

  export type SystemUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    kpiData?: KPI_DataUncheckedUpdateManyWithoutSystemNestedInput
    incidents?: IncidentUncheckedUpdateManyWithoutSystemNestedInput
    relations?: RelationUncheckedUpdateManyWithoutSystemNestedInput
  }

  export type SystemUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    criticality?: NullableStringFieldUpdateOperationsInput | string | null
    availability?: NullableStringFieldUpdateOperationsInput | string | null
    recoverability?: NullableStringFieldUpdateOperationsInput | string | null
    maintainability?: NullableStringFieldUpdateOperationsInput | string | null
    integrity?: NullableStringFieldUpdateOperationsInput | string | null
    confidentiality?: NullableStringFieldUpdateOperationsInput | string | null
    analystId?: NullableIntFieldUpdateOperationsInput | number | null
    applicationOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    platformOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    infrastructureOperatorId?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUpdateWithoutCompanyInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reporter?: UserUpdateOneRequiredWithoutReportedIncidentsNestedInput
    system?: SystemUpdateOneRequiredWithoutIncidentsNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput
    handler?: UserUpdateOneRequiredWithoutHandledIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    systemId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataCreateManySystemInput = {
    id?: number
    itemId: number
    serviceId: number
    userId: number
    companyId: number
    date: Date | string
    value: number
    approved?: boolean
    approverId?: number | null
    approvalDate?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type IncidentCreateManySystemInput = {
    id?: number
    ready?: boolean
    reporterId: number
    detectionTime: Date | string
    notificationId?: string | null
    beginning: Date | string
    end: Date | string
    type: string
    companyId: number
    urgency: string
    criticality: string
    description: string
    creatorId: number
    handlerId: number
    cause?: string | null
    measure?: string | null
    notification?: string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type RelationCreateManySystemInput = {
    id?: number
    serviceId: number
    validFrom: Date | string
    validTo?: Date | string | null
    created?: Date | string
    modified?: Date | string
    expired?: Date | string | null
  }

  export type KPI_DataUpdateWithoutSystemInput = {
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutKpiDataNestedInput
    service?: ServiceUpdateOneRequiredWithoutKpiDataNestedInput
    user?: UserUpdateOneRequiredWithoutKpiDataNestedInput
    company?: CompanyUpdateOneRequiredWithoutKpiDataNestedInput
    approver?: UserUpdateOneWithoutApprovedKPINestedInput
  }

  export type KPI_DataUncheckedUpdateWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KPI_DataUncheckedUpdateManyWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    companyId?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    value?: FloatFieldUpdateOperationsInput | number
    approved?: BoolFieldUpdateOperationsInput | boolean
    approverId?: NullableIntFieldUpdateOperationsInput | number | null
    approvalDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUpdateWithoutSystemInput = {
    ready?: BoolFieldUpdateOperationsInput | boolean
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reporter?: UserUpdateOneRequiredWithoutReportedIncidentsNestedInput
    company?: CompanyUpdateOneRequiredWithoutIncidentsNestedInput
    creator?: UserUpdateOneRequiredWithoutCreatedIncidentsNestedInput
    handler?: UserUpdateOneRequiredWithoutHandledIncidentsNestedInput
  }

  export type IncidentUncheckedUpdateWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IncidentUncheckedUpdateManyWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    ready?: BoolFieldUpdateOperationsInput | boolean
    reporterId?: IntFieldUpdateOperationsInput | number
    detectionTime?: DateTimeFieldUpdateOperationsInput | Date | string
    notificationId?: NullableStringFieldUpdateOperationsInput | string | null
    beginning?: DateTimeFieldUpdateOperationsInput | Date | string
    end?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    companyId?: IntFieldUpdateOperationsInput | number
    urgency?: StringFieldUpdateOperationsInput | string
    criticality?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    creatorId?: IntFieldUpdateOperationsInput | number
    handlerId?: IntFieldUpdateOperationsInput | number
    cause?: NullableStringFieldUpdateOperationsInput | string | null
    measure?: NullableStringFieldUpdateOperationsInput | string | null
    notification?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationUpdateWithoutSystemInput = {
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    service?: ServiceUpdateOneRequiredWithoutRelationsNestedInput
  }

  export type RelationUncheckedUpdateWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RelationUncheckedUpdateManyWithoutSystemInput = {
    id?: IntFieldUpdateOperationsInput | number
    serviceId?: IntFieldUpdateOperationsInput | number
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    expired?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}